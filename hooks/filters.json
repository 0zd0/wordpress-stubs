{"$schema":"https://raw.githubusercontent.com/0zd0/wordpress-hooks-stub-generator/dev/schema.json","hooks":[{"name":"wp_xmlrpc_server_class","file":"xmlrpc.php","type":"filter","doc":{"description":"Filters the class used for handling XML-RPC requests.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.1.0"},{"name":"param","content":"<p>The name of the XML-RPC server class.</p>","types":["string"],"variable":"$class"}]},"args":1},{"name":"shake_error_codes","file":"wp-login.php","type":"filter","doc":{"description":"Filters the error codes array for shaking the login form.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.0.0"},{"name":"param","content":"<p>Error codes that shake the login form.</p>","types":["string[]"],"variable":"$shake_error_codes"}]},"args":1},{"name":"login_title","file":"wp-login.php","type":"filter","doc":{"description":"Filters the title tag content for login page.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.9.0"},{"name":"param","content":"<p>The page title, with extra context added.</p>","types":["string"],"variable":"$login_title"},{"name":"param","content":"<p>The original page title.</p>","types":["string"],"variable":"$title"}]},"args":2},{"name":"login_headerurl","file":"wp-login.php","type":"filter","doc":{"description":"Filters link URL of the header logo above login form.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.1.0"},{"name":"param","content":"<p>Login header logo URL.</p>","types":["string"],"variable":"$login_header_url"}]},"args":1},{"name":"login_headertext","file":"wp-login.php","type":"filter","doc":{"description":"Filters the link text of the header logo above the login form.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.2.0"},{"name":"param","content":"<p>The login header logo link text.</p>","types":["string"],"variable":"$login_header_text"}]},"args":1},{"name":"login_body_class","file":"wp-login.php","type":"filter","doc":{"description":"Filters the login page body classes.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.5.0"},{"name":"param","content":"<p>An array of body classes.</p>","types":["string[]"],"variable":"$classes"},{"name":"param","content":"<p>The action that brought the visitor to the login page.</p>","types":["string"],"variable":"$action"}]},"args":2},{"name":"login_message","file":"wp-login.php","type":"filter","doc":{"description":"Filters the message to display above the login form.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.1.0"},{"name":"param","content":"<p>Login message text.</p>","types":["string"],"variable":"$message"}]},"args":1},{"name":"login_errors","file":"wp-login.php","type":"filter","doc":{"description":"Filters the error messages displayed above the login form.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.1.0"},{"name":"param","content":"<p>Login error messages.</p>","types":["string"],"variable":"$errors"}]},"args":1},{"name":"login_messages","file":"wp-login.php","type":"filter","doc":{"description":"Filters instructional messages displayed above the login form.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.5.0"},{"name":"param","content":"<p>Login messages.</p>","types":["string"],"variable":"$messages"}]},"args":1},{"name":"login_site_html_link","file":"wp-login.php","type":"filter","doc":{"description":"Filters the \"Go to site\" link displayed in the login page footer.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.7.0"},{"name":"param","content":"<p>HTML link to the home URL of the current site.</p>","types":["string"],"variable":"$link"}]},"args":1},{"name":"login_display_language_dropdown","file":"wp-login.php","type":"filter","doc":{"description":"Filters whether to display the Language selector on the login screen.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.9.0"},{"name":"param","content":"<p>Whether to display the Language selector on the login screen.</p>","types":["bool"],"variable":"$display"}]},"args":1},{"name":"login_language_dropdown_args","file":"wp-login.php","type":"filter","doc":{"description":"Filters default arguments for the Languages select input on the login screen.","long_description":"The arguments get passed to the wp_dropdown_languages() function.","long_description_html":"<p>The arguments get passed to the wp_dropdown_languages() function.</p>","tags":[{"name":"since","content":"5.9.0"},{"name":"param","content":"<p>Arguments for the Languages select input on the login screen.</p>","types":["array"],"variable":"$args"}]},"args":1},{"name":"login_link_separator","file":"wp-login.php","type":"filter","doc":{"description":"Filters the separator used between login form navigation links.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.9.0"},{"name":"param","content":"<p>The separator used between login form navigation links.</p>","types":["string"],"variable":"$login_link_separator"}]},"args":1},{"name":"admin_email_remind_interval","file":"wp-login.php","type":"filter","doc":{"description":"Filters the interval for dismissing the admin email confirmation screen.","long_description":"If `0` (zero) is returned, the \"Remind me later\" link will not be displayed.","long_description_html":"<p>If <code>0</code> (zero) is returned, the &quot;Remind me later&quot; link will not be displayed.</p>","tags":[{"name":"since","content":"5.3.1"},{"name":"param","content":"<p>Interval time (in seconds). Default is 3 days.</p>","types":["int"],"variable":"$interval"}]},"args":1},{"name":"admin_email_check_interval","file":"wp-login.php","type":"filter","doc":{"description":"Filters the interval for redirecting the user to the admin email confirmation screen.","long_description":"If `0` (zero) is returned, the user will not be redirected.","long_description_html":"<p>If <code>0</code> (zero) is returned, the user will not be redirected.</p>","tags":[{"name":"since","content":"5.3.0"},{"name":"param","content":"<p>Interval time (in seconds). Default is 6 months.</p>","types":["int"],"variable":"$interval"}]},"args":1},{"name":"post_password_expires","file":"wp-login.php","type":"filter","doc":{"description":"Filters the life span of the post password cookie.","long_description":"By default, the cookie expires 10 days from creation. To turn this into a session cookie, return 0.","long_description_html":"<p>By default, the cookie expires 10 days from creation. To turn this into a session cookie, return 0.</p>","tags":[{"name":"since","content":"3.7.0"},{"name":"param","content":"<p>The expiry time, as passed to setcookie().</p>","types":["int"],"variable":"$expires"}]},"args":1},{"name":"logout_redirect","file":"wp-login.php","type":"filter","doc":{"description":"Filters the log out redirect URL.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.2.0"},{"name":"param","content":"<p>The redirect destination URL.</p>","types":["string"],"variable":"$redirect_to"},{"name":"param","content":"<p>The requested redirect destination URL passed as a parameter.</p>","types":["string"],"variable":"$requested_redirect_to"},{"name":"param","content":"<p>The WP_User object for the user that's logging out.</p>","types":["\\WP_User"],"variable":"$user"}]},"args":3},{"name":"lostpassword_redirect","file":"wp-login.php","type":"filter","doc":{"description":"Filters the URL redirected to after submitting the lostpassword/retrievepassword form.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.0.0"},{"name":"param","content":"<p>The redirect destination URL.</p>","types":["string"],"variable":"$lostpassword_redirect"}]},"args":1},{"name":"wp_signup_location","file":"wp-login.php","type":"filter","doc":{"description":"Filters the Multisite sign up URL.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.0.0"},{"name":"param","content":"<p>The sign up URL.</p>","types":["string"],"variable":"$sign_up_url"}]},"args":1},{"name":"registration_redirect","file":"wp-login.php","type":"filter","doc":{"description":"Filters the registration redirect URL.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.0.0"},{"name":"since","content":"5.9.0","description":"<p>Added the <code>$errors</code> parameter.</p>"},{"name":"param","content":"<p>The redirect destination URL.</p>","types":["string"],"variable":"$registration_redirect"},{"name":"param","content":"<p>User id if registration was successful, WP_Error object otherwise.</p>","types":["int","\\WP_Error"],"variable":"$errors"}]},"args":2},{"name":"wp_login_errors","file":"wp-login.php","type":"filter","doc":{"description":"This action is documented in wp-login.php","long_description":"","long_description_html":"","tags":[]},"args":2},{"name":"login_redirect","file":"wp-login.php","type":"filter","doc":{"description":"Filters the login redirect URL.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.0.0"},{"name":"param","content":"<p>The redirect destination URL.</p>","types":["string"],"variable":"$redirect_to"},{"name":"param","content":"<p>The requested redirect destination URL passed as a parameter.</p>","types":["string"],"variable":"$requested_redirect_to"},{"name":"param","content":"<p>WP_User object if login was successful, WP_Error object otherwise.</p>","types":["\\WP_User","\\WP_Error"],"variable":"$user"}]},"args":3},{"name":"wp_login_errors","file":"wp-login.php","type":"filter","doc":{"description":"Filters the login page errors.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.6.0"},{"name":"param","content":"<p>WP Error object.</p>","types":["\\WP_Error"],"variable":"$errors"},{"name":"param","content":"<p>Redirect destination URL.</p>","types":["string"],"variable":"$redirect_to"}]},"args":2},{"name":"lost_password_html_link","file":"wp-login.php","type":"filter","doc":{"description":"Filters the link that allows the user to reset the lost password.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"6.1.0"},{"name":"param","content":"<p>HTML link to the lost password form.</p>","types":["string"],"variable":"$html_link"}]},"args":1},{"name":"enable_login_autofocus","file":"wp-login.php","type":"filter","doc":{"description":"Filters whether to print the call to `wp_attempt_focus()` on the login screen.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.8.0"},{"name":"param","content":"<p>Whether to print the function call. Default true.</p>","types":["bool"],"variable":"$print"}]},"args":1},{"name":"signup_another_blog_init","file":"wp-signup.php","type":"filter","doc":{"description":"Filters the default site sign-up variables.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.0.0"},{"name":"param","content":"<p>{ An array of default site sign-up variables.</p>","types":["array"],"variable":"$signup_defaults"}]},"args":1},{"name":"add_signup_meta","file":"wp-signup.php","type":"filter","doc":{"description":"Filters the new default site meta variables.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.0.0"},{"name":"param","content":"<p>{ An array of default site meta variables.</p>","types":["array"],"variable":"$meta"}]},"args":1},{"name":"signup_user_init","file":"wp-signup.php","type":"filter","doc":{"description":"Filters the default user variables used on the user sign-up form.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.0.0"},{"name":"param","content":"<p>{ An array of default user variables.</p>","types":["array"],"variable":"$signup_user_defaults"}]},"args":1},{"name":"signup_blog_init","file":"wp-signup.php","type":"filter","doc":{"description":"Filters the default site creation variables for the site sign-up form.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.0.0"},{"name":"param","content":"<p>{ An array of default site creation variables.</p>","types":["array"],"variable":"$signup_blog_defaults"}]},"args":1},{"name":"signup_get_available_languages","file":"wp-signup.php","type":"filter","doc":{"description":"Filters the list of available languages for front-end site sign-ups.","long_description":"Passing an empty array to this hook will disable output of the setting on the sign-up form, and the default language will be used when creating the site.\n Languages not already installed will be stripped.","long_description_html":"<p>Passing an empty array to this hook will disable output of the setting on the sign-up form, and the default language will be used when creating the site.</p> <p>Languages not already installed will be stripped.</p>","tags":[{"name":"since","content":"4.4.0"},{"name":"param","content":"<p>Array of available language codes. Language codes are formed by stripping the .mo extension from the language file names.</p>","types":["string[]"],"variable":"$languages"}]},"args":1},{"name":"wpmu_active_signup","file":"wp-signup.php","type":"filter","doc":{"description":"Filters the type of site sign-up.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.0.0"},{"name":"param","content":"<p>String that returns registration type. The value can be 'all', 'none', 'blog', or 'user'.</p>","types":["string"],"variable":"$active_signup"}]},"args":1},{"name":"site_health_navigation_tabs","file":"wp-admin/site-health.php","type":"filter","doc":{"description":"Filters the extra tabs for the Site Health navigation bar.","long_description":"Add a custom page to the Site Health screen, based on a tab slug and label. The label you provide will also be used as part of the site title.","long_description_html":"<p>Add a custom page to the Site Health screen, based on a tab slug and label. The label you provide will also be used as part of the site title.</p>","tags":[{"name":"since","content":"5.8.0"},{"name":"param","content":"<p>An associative array of tab labels keyed by their slug.</p>","types":["string[]"],"variable":"$tabs"}]},"args":1},{"name":"editable_slug","file":"wp-admin/edit-tag-form.php","type":"filter","doc":{"description":"Filters the editable slug for a post or term.","long_description":"Note: This is a multi-use hook in that it is leveraged both for editable post URIs and term slugs.","long_description_html":"<p>Note: This is a multi-use hook in that it is leveraged both for editable post URIs and term slugs.</p>","tags":[{"name":"since","content":"2.6.0"},{"name":"since","content":"4.4.0","description":"<p>The <code>$tag</code> parameter was added.</p>"},{"name":"param","content":"<p>The editable slug. Will be either a term slug or post URI depending upon the context in which it is evaluated.</p>","types":["string"],"variable":"$slug"},{"name":"param","content":"<p>Term or post object.</p>","types":["\\WP_Term","\\WP_Post"],"variable":"$tag"}]},"args":2},{"name":"handle_bulk_actions-{$screen}","file":"wp-admin/plugins.php","type":"filter","doc":{"description":"This action is documented in wp-admin/edit.php","long_description":"","long_description_html":"","tags":[]},"args":3},{"name":"handle_bulk_actions-{$screen}","file":"wp-admin/upload.php","type":"filter","doc":{"description":"This action is documented in wp-admin/edit.php","long_description":"","long_description_html":"","tags":[]},"args":3},{"name":"thread_comments_depth_max","file":"wp-admin/options-discussion.php","type":"filter","doc":{"description":"Filters the maximum depth of threaded/nested comments.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.7.0"},{"name":"param","content":"<p>The maximum depth of threaded comments. Default 10.</p>","types":["int"],"variable":"$max_depth"}]},"args":1},{"name":"avatar_defaults","file":"wp-admin/options-discussion.php","type":"filter","doc":{"description":"Filters the default avatars.","long_description":"Avatars are stored in key/value pairs, where the key is option value, and the name is the displayed avatar name.","long_description_html":"<p>Avatars are stored in key/value pairs, where the key is option value, and the name is the displayed avatar name.</p>","tags":[{"name":"since","content":"2.6.0"},{"name":"param","content":"<p>Associative array of default avatars.</p>","types":["string[]"],"variable":"$avatar_defaults"}]},"args":1},{"name":"default_avatar_select","file":"wp-admin/options-discussion.php","type":"filter","doc":{"description":"Filters the HTML output of the default avatar list.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.6.0"},{"name":"param","content":"<p>HTML markup of the avatar list.</p>","types":["string"],"variable":"$avatar_list"}]},"args":1},{"name":"theme_auto_update_setting_template","file":"wp-admin/themes.php","type":"filter","doc":{"description":"Filters the JavaScript template used to display the auto-update setting for a theme (in the overlay).","long_description":"See {@see \\wp_prepare_themes_for_js()} for the properties of the `data` object.","long_description_html":"<p>See {@see \\wp_prepare_themes_for_js()} for the properties of the <code>data</code> object.</p>","tags":[{"name":"since","content":"5.5.0"},{"name":"param","content":"<p>The template for displaying the auto-update setting link.</p>","types":["string"],"variable":"$template"}]},"args":1},{"name":"handle_network_bulk_actions-{$screen}","file":"wp-admin/network/site-themes.php","type":"filter","doc":{"description":"Fires when a custom bulk action should be handled.","long_description":"The redirect link should be modified with success or failure feedback from the action to be used to display feedback to the user.\n The dynamic portion of the hook name, `$screen`, refers to the current screen ID.","long_description_html":"<p>The redirect link should be modified with success or failure feedback from the action to be used to display feedback to the user.</p> <p>The dynamic portion of the hook name, <code>$screen</code>, refers to the current screen ID.</p>","tags":[{"name":"since","content":"4.7.0"},{"name":"param","content":"<p>The redirect URL.</p>","types":["string"],"variable":"$redirect_url"},{"name":"param","content":"<p>The action being taken.</p>","types":["string"],"variable":"$action"},{"name":"param","content":"<p>The items to take the action on.</p>","types":["array"],"variable":"$items"},{"name":"param","content":"<p>The site ID.</p>","types":["int"],"variable":"$site_id"}]},"args":4},{"name":"handle_network_bulk_actions-' . get_current_screen()->id","file":"wp-admin/network/themes.php","type":"filter","doc":{"description":"This action is documented in wp-admin/network/site-themes.php","long_description":"","long_description_html":"","tags":[]},"args":3},{"name":"handle_network_bulk_actions-' . get_current_screen()->id","file":"wp-admin/network/users.php","type":"filter","doc":{"description":"This action is documented in wp-admin/network/site-themes.php","long_description":"","long_description_html":"","tags":[]},"args":3},{"name":"handle_network_bulk_actions-' . get_current_screen()->id","file":"wp-admin/network/site-users.php","type":"filter","doc":{"description":"This action is documented in wp-admin/network/site-themes.php","long_description":"","long_description_html":"","tags":[]},"args":4},{"name":"show_network_site_users_add_existing_form","file":"wp-admin/network/site-users.php","type":"filter","doc":{"description":"Filters whether to show the Add Existing User form on the Multisite Users screen.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.1.0"},{"name":"param","content":"<p>Whether to show the Add Existing User form. Default true.</p>","types":["bool"],"variable":"$bool"}]},"args":1},{"name":"show_network_site_users_add_new_form","file":"wp-admin/network/site-users.php","type":"filter","doc":{"description":"Filters whether to show the Add New User form on the Multisite Users screen.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.1.0"},{"name":"param","content":"<p>Whether to show the Add New User form. Default true.</p>","types":["bool"],"variable":"$bool"}]},"args":1},{"name":"handle_network_bulk_actions-' . get_current_screen()->id","file":"wp-admin/network/sites.php","type":"filter","doc":{"description":"This action is documented in wp-admin/network/site-themes.php","long_description":"","long_description_html":"","tags":[]},"args":4},{"name":"network_sites_updated_message_{$action}","file":"wp-admin/network/sites.php","type":"filter","doc":{"description":"Filters a specific, non-default, site-updated message in the Network admin.","long_description":"The dynamic portion of the hook name, `$action`, refers to the non-default site update action.","long_description_html":"<p>The dynamic portion of the hook name, <code>$action</code>, refers to the non-default site update action.</p>","tags":[{"name":"since","content":"3.1.0"},{"name":"param","content":"<p>The update message. Default 'Settings saved'.</p>","types":["string"],"variable":"$msg"}]},"args":1},{"name":"redirect_network_admin_request","file":"wp-admin/network/admin.php","type":"filter","doc":{"description":"Filters whether to redirect the request to the Network Admin.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.2.0"},{"name":"param","content":"<p>Whether the request should be redirected.</p>","types":["bool"],"variable":"$redirect_network_admin_request"}]},"args":1},{"name":"mu_menu_items","file":"wp-admin/network/settings.php","type":"filter","doc":{"description":"Filters available network-wide administration menu options.","long_description":"Options returned to this filter are output as individual checkboxes that, when selected, enable site administrator access to the specified administration menu in certain contexts.\n Adding options for specific menus here hinges on the appropriate checks and capabilities being in place in the site dashboard on the other side. For instance, when the single default option, 'plugins' is enabled, site administrators are granted access to the Plugins screen in their individual sites' dashboards.","long_description_html":"<p>Options returned to this filter are output as individual checkboxes that, when selected, enable site administrator access to the specified administration menu in certain contexts.</p> <p>Adding options for specific menus here hinges on the appropriate checks and capabilities being in place in the site dashboard on the other side. For instance, when the single default option, 'plugins' is enabled, site administrators are granted access to the Plugins screen in their individual sites' dashboards.</p>","tags":[{"name":"since","content":"MU (3.0.0)","description":"MU (3.0.0)"},{"name":"param","content":"<p>Associative array of the menu items available.</p>","types":["string[]"],"variable":"$admin_menus"}]},"args":1},{"name":"install_themes_tabs","file":"wp-admin/theme-install.php","type":"filter","doc":{"description":"Filters the tabs shown on the Add Themes screen.","long_description":"This filter is for backward compatibility only, for the suppression of the upload tab.","long_description_html":"<p>This filter is for backward compatibility only, for the suppression of the upload tab.</p>","tags":[{"name":"since","content":"2.8.0"},{"name":"param","content":"<p>Associative array of the tabs shown on the Add Themes screen. Default is 'upload'.</p>","types":["string[]"],"variable":"$tabs"}]},"args":1},{"name":"tables_to_repair","file":"wp-admin/maint/repair.php","type":"filter","doc":{"description":"Filters additional database tables to repair.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.0.0"},{"name":"param","content":"<p>Array of prefixed table names to be repaired.</p>","types":["string[]"],"variable":"$tables"}]},"args":1},{"name":"users_have_additional_content","file":"wp-admin/users.php","type":"filter","doc":{"description":"Filters whether the users being deleted have additional content associated with them outside of the `post_author` and `link_owner` relationships.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.2.0"},{"name":"param","content":"<p>Whether the users have additional content. Default false.</p>","types":["bool"],"variable":"$users_have_additional_content"},{"name":"param","content":"<p>Array of IDs for users being deleted.</p>","types":["int[]"],"variable":"$user_ids"}]},"args":2},{"name":"handle_bulk_actions-{$screen}","file":"wp-admin/users.php","type":"filter","doc":{"description":"This action is documented in wp-admin/edit.php","long_description":"","long_description_html":"","tags":[]},"args":3},{"name":"site_editor_no_javascript_message","file":"wp-admin/site-editor.php","type":"filter","doc":{"description":"Filters the message displayed in the site editor interface when JavaScript is not enabled in the browser.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"6.3.0"},{"name":"param","content":"<p>The message being displayed.</p>","types":["string"],"variable":"$message"},{"name":"param","content":"<p>The post being edited.</p>","types":["\\WP_Post"],"variable":"$post"}]},"args":2},{"name":"comment_edit_redirect","file":"wp-admin/comment.php","type":"filter","doc":{"description":"Filters the URI the user is redirected to after editing a comment in the admin.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.1.0"},{"name":"param","content":"<p>The URI the user will be redirected to.</p>","types":["string"],"variable":"$location"},{"name":"param","content":"<p>The ID of the comment being edited.</p>","types":["int"],"variable":"$comment_id"}]},"args":2},{"name":"redirect_user_admin_request","file":"wp-admin/user/admin.php","type":"filter","doc":{"description":"Filters whether to redirect the request to the User Admin in Multisite.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.2.0"},{"name":"param","content":"<p>Whether the request should be redirected.</p>","types":["bool"],"variable":"$redirect_user_admin_request"}]},"args":1},{"name":"date_formats","file":"wp-admin/options-general.php","type":"filter","doc":{"description":"Filters the default date formats.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.7.0"},{"name":"since","content":"4.0.0","description":"<p>Added ISO date standard YYYY-MM-DD format.</p>"},{"name":"param","content":"<p>Array of default date formats.</p>","types":["string[]"],"variable":"$default_date_formats"}]},"args":1},{"name":"time_formats","file":"wp-admin/options-general.php","type":"filter","doc":{"description":"Filters the default time formats.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.7.0"},{"name":"param","content":"<p>Array of default time formats.</p>","types":["string[]"],"variable":"$default_time_formats"}]},"args":1},{"name":"available_permalink_structure_tags","file":"wp-admin/options-permalink.php","type":"filter","doc":{"description":"Filters the list of available permalink structure tags on the Permalinks settings page.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.9.0"},{"name":"param","content":"<p>An array of key =&gt; value pairs of available permalink structure tags.</p>","types":["string[]"],"variable":"$available_tags"}]},"args":1},{"name":"wp_editor_expand","file":"wp-admin/edit-form-advanced.php","type":"filter","doc":{"description":"Filters whether to enable the 'expand' functionality in the post editor.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.0.0"},{"name":"since","content":"4.1.0","description":"<p>Added the <code>$post_type</code> parameter.</p>"},{"name":"param","content":"<p>Whether to enable the 'expand' functionality. Default true.</p>","types":["bool"],"variable":"$expand"},{"name":"param","content":"<p>Post type.</p>","types":["string"],"variable":"$post_type"}]},"args":2},{"name":"post_updated_messages","file":"wp-admin/edit-form-advanced.php","type":"filter","doc":{"description":"Filters the post updated messages.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.0.0"},{"name":"param","content":"<p>Post updated messages. For defaults see <code>$messages</code> declarations above.</p>","types":["array[]"],"variable":"$messages"}]},"args":1},{"name":"enter_title_here","file":"wp-admin/edit-form-advanced.php","type":"filter","doc":{"description":"Filters the title field placeholder text.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.1.0"},{"name":"param","content":"<p>Placeholder text. Default 'Add title'.</p>","types":["string"],"variable":"$text"},{"name":"param","content":"<p>Post object.</p>","types":["\\WP_Post"],"variable":"$post"}]},"args":2},{"name":"enable_edit_any_user_configuration","file":"wp-admin/user-edit.php","type":"filter","doc":{"description":"","long_description":"","long_description_html":"","tags":[]},"args":1},{"name":"user_{$name}_label","file":"wp-admin/user-edit.php","type":"filter","doc":{"description":"Filters a user contactmethod label.","long_description":"The dynamic portion of the hook name, `$name`, refers to each of the keys in the contact methods array.","long_description_html":"<p>The dynamic portion of the hook name, <code>$name</code>, refers to each of the keys in the contact methods array.</p>","tags":[{"name":"since","content":"2.9.0"},{"name":"param","content":"<p>The translatable label for the contact method.</p>","types":["string"],"variable":"$desc"}]},"args":1},{"name":"user_profile_picture_description","file":"wp-admin/user-edit.php","type":"filter","doc":{"description":"Filters the user profile picture description displayed under the Gravatar.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.4.0"},{"name":"since","content":"4.7.0","description":"<p>Added the <code>$profile_user</code> parameter.</p>"},{"name":"param","content":"<p>The description that will be printed.</p>","types":["string"],"variable":"$description"},{"name":"param","content":"<p>The current WP_User object.</p>","types":["\\WP_User"],"variable":"$profile_user"}]},"args":2},{"name":"show_password_fields","file":"wp-admin/user-edit.php","type":"filter","doc":{"description":"Filters the display of the password fields.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"1.5.1"},{"name":"since","content":"2.8.0","description":"<p>Added the <code>$profile_user</code> parameter.</p>"},{"name":"since","content":"4.4.0","description":"<p>Now evaluated only in user-edit.php.</p>"},{"name":"param","content":"<p>Whether to show the password fields. Default true.</p>","types":["bool"],"variable":"$show"},{"name":"param","content":"<p>User object for the current user to edit.</p>","types":["\\WP_User"],"variable":"$profile_user"}]},"args":2},{"name":"additional_capabilities_display","file":"wp-admin/user-edit.php","type":"filter","doc":{"description":"Filters whether to display additional capabilities for the user.","long_description":"The 'Additional Capabilities' section will only be enabled if the number of the user's capabilities exceeds their number of roles.","long_description_html":"<p>The 'Additional Capabilities' section will only be enabled if the number of the user's capabilities exceeds their number of roles.</p>","tags":[{"name":"since","content":"2.8.0"},{"name":"param","content":"<p>Whether to display the capabilities. Default true.</p>","types":["bool"],"variable":"$enable"},{"name":"param","content":"<p>The current WP_User object.</p>","types":["\\WP_User"],"variable":"$profile_user"}]},"args":2},{"name":"admin_footer_text","file":"wp-admin/admin-footer.php","type":"filter","doc":{"description":"Filters the \"Thank you\" text displayed in the admin footer.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.8.0"},{"name":"param","content":"<p>The content that will be printed.</p>","types":["string"],"variable":"$text"}]},"args":1},{"name":"update_footer","file":"wp-admin/admin-footer.php","type":"filter","doc":{"description":"Filters the version/update text displayed in the admin footer.","long_description":"WordPress prints the current version and update information, using core_update_footer() at priority 10.","long_description_html":"<p>WordPress prints the current version and update information, using core_update_footer() at priority 10.</p>","tags":[{"name":"since","content":"2.3.0"},{"name":"see","content":"","refers":"core_update_footer()"},{"name":"param","content":"<p>The content that will be printed.</p>","types":["string"],"variable":"$content"}]},"args":1},{"name":"enable_update_services_configuration","file":"wp-admin/options-writing.php","type":"filter","doc":{"description":"Filters whether to enable the Update Services section in the Writing settings screen.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.0.0"},{"name":"param","content":"<p>Whether to enable the Update Services settings area. Default true.</p>","types":["bool"],"variable":"$enable"}]},"args":1},{"name":"option_page_capability_{$option_page}","file":"wp-admin/options.php","type":"filter","doc":{"description":"Filters the capability required when using the Settings API.","long_description":"By default, the options groups for all registered settings require the manage_options capability. This filter is required to change the capability required for a certain options page.","long_description_html":"<p>By default, the options groups for all registered settings require the manage_options capability. This filter is required to change the capability required for a certain options page.</p>","tags":[{"name":"since","content":"3.2.0"},{"name":"param","content":"<p>The capability used for the page, which is manage_options by default.</p>","types":["string"],"variable":"$capability"}]},"args":1},{"name":"enable_post_by_email_configuration","file":"wp-admin/options.php","type":"filter","doc":{"description":"Filters whether the post-by-email functionality is enabled.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.0.0"},{"name":"param","content":"<p>Whether post-by-email configuration is enabled. Default true.</p>","types":["bool"],"variable":"$enabled"}]},"args":1},{"name":"allowed_options","file":"wp-admin/options.php","type":"filter","doc":{"description":"Filters the allowed options list.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.5.0"},{"name":"param","content":"<p>The allowed options list.</p>","types":["array"],"variable":"$allowed_options"}]},"args":1},{"name":"async_upload_{$type}","aliases":["async_upload_audio","async_upload_file","async_upload_image","async_upload_video"],"file":"wp-admin/async-upload.php","type":"filter","doc":{"description":"Filters the returned ID of an uploaded attachment.","long_description":"The dynamic portion of the hook name, `$type`, refers to the attachment type.\n Possible hook names include:\n\n  - `async_upload_audio`\n  - `async_upload_file`\n  - `async_upload_image`\n  - `async_upload_video`","long_description_html":"<p>The dynamic portion of the hook name, <code>$type</code>, refers to the attachment type.</p> <p>Possible hook names include:</p> <ul> <li><code>async_upload_audio</code></li> <li><code>async_upload_file</code></li> <li><code>async_upload_image</code></li> <li><code>async_upload_video</code></li> </ul>","tags":[{"name":"since","content":"2.5.0"},{"name":"param","content":"<p>Uploaded attachment ID.</p>","types":["int"],"variable":"$id"}]},"args":1},{"name":"parent_file","file":"wp-admin/menu-header.php","type":"filter","doc":{"description":"Filters the parent file of an admin menu sub-menu item.","long_description":"Allows plugins to move sub-menu items around.","long_description_html":"<p>Allows plugins to move sub-menu items around.</p>","tags":[{"name":"since","content":"MU (3.0.0)","description":"MU (3.0.0)"},{"name":"param","content":"<p>The parent file.</p>","types":["string"],"variable":"$parent_file"}]},"args":1},{"name":"submenu_file","file":"wp-admin/menu-header.php","type":"filter","doc":{"description":"Filters the file of an admin menu sub-menu item.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.4.0"},{"name":"param","content":"<p>The submenu file.</p>","types":["string"],"variable":"$submenu_file"},{"name":"param","content":"<p>The submenu item's parent file.</p>","types":["string"],"variable":"$parent_file"}]},"args":2},{"name":"write_your_story","file":"wp-admin/edit-form-blocks.php","type":"filter","doc":{"description":"Filters the body placeholder text.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.0.0"},{"name":"since","content":"5.8.0","description":"<p>Changed the default placeholder text.</p>"},{"name":"param","content":"<p>Placeholder text. Default 'Type / to choose a block'.</p>","types":["string"],"variable":"$text"},{"name":"param","content":"<p>Post object.</p>","types":["\\WP_Post"],"variable":"$post"}]},"args":2},{"name":"block_editor_no_javascript_message","file":"wp-admin/edit-form-blocks.php","type":"filter","doc":{"description":"Filters the message displayed in the block editor interface when JavaScript is not enabled in the browser.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.0.3"},{"name":"since","content":"6.4.0","description":"<p>Added <code>$installed</code> parameter.</p>"},{"name":"param","content":"<p>The message being displayed.</p>","types":["string"],"variable":"$message"},{"name":"param","content":"<p>The post being edited.</p>","types":["\\WP_Post"],"variable":"$post"},{"name":"param","content":"<p>Whether the classic editor is installed.</p>","types":["bool"],"variable":"$installed"}]},"args":3},{"name":"invited_user_email","file":"wp-admin/user-new.php","type":"filter","doc":{"description":"Filters the contents of the email sent when an existing user is invited to join the site.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.6.0"},{"name":"param","content":"<p>{ Used to build wp_mail().</p>","types":["array"],"variable":"$new_user_email"},{"name":"param","content":"<p>The invited user's ID.</p>","types":["int"],"variable":"$user_id"},{"name":"param","content":"<p>Array containing role information for the invited user.</p>","types":["array"],"variable":"$role"},{"name":"param","content":"<p>The key of the invitation.</p>","types":["string"],"variable":"$newuser_key"}]},"args":4},{"name":"autocomplete_users_for_site_admins","file":"wp-admin/user-new.php","type":"filter","doc":{"description":"","long_description":"","long_description_html":"","tags":[]},"args":1},{"name":"export_args","file":"wp-admin/export.php","type":"filter","doc":{"description":"Filters the export args.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.5.0"},{"name":"param","content":"<p>The arguments to send to the exporter.</p>","types":["array"],"variable":"$args"}]},"args":1},{"name":"replace_editor","file":"wp-admin/post.php","type":"filter","doc":{"description":"Allows replacement of the editor.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.9.0"},{"name":"param","content":"<p>Whether to replace the editor. Default false.</p>","types":["bool"],"variable":"$replace"},{"name":"param","content":"<p>Post object.</p>","types":["\\WP_Post"],"variable":"$post"}]},"args":2},{"name":"handle_bulk_actions-{$screen}","file":"wp-admin/edit.php","type":"filter","doc":{"description":"Fires when a custom bulk action should be handled.","long_description":"The redirect link should be modified with success or failure feedback from the action to be used to display feedback to the user.\n The dynamic portion of the hook name, `$screen`, refers to the current screen ID.","long_description_html":"<p>The redirect link should be modified with success or failure feedback from the action to be used to display feedback to the user.</p> <p>The dynamic portion of the hook name, <code>$screen</code>, refers to the current screen ID.</p>","tags":[{"name":"since","content":"4.7.0"},{"name":"param","content":"<p>The redirect URL.</p>","types":["string"],"variable":"$sendback"},{"name":"param","content":"<p>The action being taken.</p>","types":["string"],"variable":"$doaction"},{"name":"param","content":"<p>The items to take the action on. Accepts an array of IDs of posts, comments, terms, links, plugins, attachments, or users.</p>","types":["array"],"variable":"$items"}]},"args":3},{"name":"bulk_post_updated_messages","file":"wp-admin/edit.php","type":"filter","doc":{"description":"Filters the bulk action updated messages.","long_description":"By default, custom post types use the messages for the 'post' post type.","long_description_html":"<p>By default, custom post types use the messages for the 'post' post type.</p>","tags":[{"name":"since","content":"3.7.0"},{"name":"param","content":"<p>Arrays of messages, each keyed by the corresponding post type. Messages are keyed with 'updated', 'locked', 'deleted', 'trashed', and 'untrashed'.</p>","types":["array[]"],"variable":"$bulk_messages"},{"name":"param","content":"<p>Array of item counts for each message, used to build internationalized strings.</p>","types":["int[]"],"variable":"$bulk_counts"}]},"args":2},{"name":"handle_bulk_actions-{$screen}","file":"wp-admin/edit-tags.php","type":"filter","doc":{"description":"This action is documented in wp-admin/edit.php","long_description":"","long_description_html":"","tags":[]},"args":3},{"name":"redirect_term_location","file":"wp-admin/edit-tags.php","type":"filter","doc":{"description":"Filters the taxonomy redirect destination URL.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.6.0"},{"name":"param","content":"<p>The destination URL.</p>","types":["string"],"variable":"$location"},{"name":"param","content":"<p>The taxonomy object.</p>","types":["\\WP_Taxonomy"],"variable":"$tax"}]},"args":2},{"name":"taxonomy_parent_dropdown_args","file":"wp-admin/edit-tags.php","type":"filter","doc":{"description":"Filters the taxonomy parent drop-down on the Edit Term page.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.7.0"},{"name":"since","content":"4.2.0","description":"<p>Added <code>$context</code> parameter.</p>"},{"name":"param","content":"<p>{ An array of taxonomy parent drop-down arguments.</p>","types":["array"],"variable":"$dropdown_args"},{"name":"param","content":"<p>The taxonomy slug.</p>","types":["string"],"variable":"$taxonomy"},{"name":"param","content":"<p>Filter context. Accepts 'new' or 'edit'.</p>","types":["string"],"variable":"$context"}]},"args":3},{"name":"handle_bulk_actions-{$screen}","file":"wp-admin/edit-comments.php","type":"filter","doc":{"description":"This action is documented in wp-admin/edit.php","long_description":"","long_description_html":"","tags":[]},"args":3},{"name":"edit_comment_misc_actions","file":"wp-admin/edit-form-comment.php","type":"filter","doc":{"description":"Filters miscellaneous actions for the edit comment form sidebar.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.3.0"},{"name":"param","content":"<p>Output HTML to display miscellaneous action.</p>","types":["string"],"variable":"$html"},{"name":"param","content":"<p>Current comment object.</p>","types":["\\WP_Comment"],"variable":"$comment"}]},"args":2},{"name":"manage_taxonomies_for_attachment_columns","file":"wp-admin/includes/class-wp-media-list-table.php","type":"filter","doc":{"description":"Filters the taxonomy columns for attachments in the Media list table.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.5.0"},{"name":"param","content":"<p>An array of registered taxonomy names to show for attachments.</p>","types":["string[]"],"variable":"$taxonomies"},{"name":"param","content":"<p>The post type. Default 'attachment'.</p>","types":["string"],"variable":"$post_type"}]},"args":2},{"name":"manage_media_columns","file":"wp-admin/includes/class-wp-media-list-table.php","type":"filter","doc":{"description":"Filters the Media list table columns.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.5.0"},{"name":"param","content":"<p>An array of columns displayed in the Media list table.</p>","types":["string[]"],"variable":"$posts_columns"},{"name":"param","content":"<p>Whether the list table contains media not attached to any posts. Default true.</p>","types":["bool"],"variable":"$detached"}]},"args":2},{"name":"media_date_column_time","file":"wp-admin/includes/class-wp-media-list-table.php","type":"filter","doc":{"description":"Filters the published time of an attachment displayed in the Media list table.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"6.0.0"},{"name":"param","content":"<p>The published time.</p>","types":["string"],"variable":"$h_time"},{"name":"param","content":"<p>Attachment object.</p>","types":["\\WP_Post"],"variable":"$post"},{"name":"param","content":"<p>The column name.</p>","types":["string"],"variable":"$column_name"}]},"args":3},{"name":"media_row_actions","file":"wp-admin/includes/class-wp-media-list-table.php","type":"filter","doc":{"description":"Filters the action links for each attachment in the Media list table.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.8.0"},{"name":"param","content":"<p>An array of action links for each attachment. Includes 'Edit', 'Delete Permanently', 'View', 'Copy URL' and 'Download file'.</p>","types":["string[]"],"variable":"$actions"},{"name":"param","content":"<p>WP_Post object for the current attachment.</p>","types":["\\WP_Post"],"variable":"$post"},{"name":"param","content":"<p>Whether the list table contains media not attached to any posts. Default true.</p>","types":["bool"],"variable":"$detached"}]},"args":3},{"name":"terms_to_edit","file":"wp-admin/includes/taxonomy.php","type":"filter","doc":{"description":"Filters the comma-separated list of terms available to edit.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.8.0"},{"name":"see","content":"","refers":"get_terms_to_edit()"},{"name":"param","content":"<p>A comma-separated list of term names.</p>","types":["string"],"variable":"$terms_to_edit"},{"name":"param","content":"<p>The taxonomy name for which to retrieve terms.</p>","types":["string"],"variable":"$taxonomy"}]},"args":2},{"name":"wp_installed_email","file":"wp-admin/includes/upgrade.php","type":"filter","doc":{"description":"Filters the contents of the email sent to the site administrator when WordPress is installed.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.6.0"},{"name":"param","content":"<p>{ Used to build wp_mail().</p>","types":["array"],"variable":"$installed_email"},{"name":"param","content":"<p>The site administrator user object.</p>","types":["\\WP_User"],"variable":"$user"},{"name":"param","content":"<p>The site title.</p>","types":["string"],"variable":"$blog_title"},{"name":"param","content":"<p>The site URL.</p>","types":["string"],"variable":"$blog_url"},{"name":"param","content":"<p>The site administrator's password. Note that a placeholder message is usually passed instead of the user's actual password.</p>","types":["string"],"variable":"$password"}]},"args":5},{"name":"dbdelta_queries","file":"wp-admin/includes/upgrade.php","type":"filter","doc":{"description":"Filters the dbDelta SQL queries.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.3.0"},{"name":"param","content":"<p>An array of dbDelta SQL queries.</p>","types":["string[]"],"variable":"$queries"}]},"args":1},{"name":"dbdelta_create_queries","file":"wp-admin/includes/upgrade.php","type":"filter","doc":{"description":"Filters the dbDelta SQL queries for creating tables and/or databases.","long_description":"Queries filterable via this hook contain \"CREATE TABLE\" or \"CREATE DATABASE\".","long_description_html":"<p>Queries filterable via this hook contain &quot;CREATE TABLE&quot; or &quot;CREATE DATABASE&quot;.</p>","tags":[{"name":"since","content":"3.3.0"},{"name":"param","content":"<p>An array of dbDelta create SQL queries.</p>","types":["string[]"],"variable":"$cqueries"}]},"args":1},{"name":"dbdelta_insert_queries","file":"wp-admin/includes/upgrade.php","type":"filter","doc":{"description":"Filters the dbDelta SQL queries for inserting or updating.","long_description":"Queries filterable via this hook contain \"INSERT INTO\" or \"UPDATE\".","long_description_html":"<p>Queries filterable via this hook contain &quot;INSERT INTO&quot; or &quot;UPDATE&quot;.</p>","tags":[{"name":"since","content":"3.3.0"},{"name":"param","content":"<p>An array of dbDelta insert or update SQL queries.</p>","types":["string[]"],"variable":"$iqueries"}]},"args":1},{"name":"wp_should_upgrade_global_tables","file":"wp-admin/includes/upgrade.php","type":"filter","doc":{"description":"Filters if upgrade routines should be run on global tables.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.3.0"},{"name":"param","content":"<p>Whether to run the upgrade routines on global tables.</p>","types":["bool"],"variable":"$should_upgrade"}]},"args":1},{"name":"site_status_test_result","file":"wp-admin/includes/class-wp-site-health.php","type":"filter","doc":{"description":"Filters the output of a finished Site Health test.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.3.0"},{"name":"param","content":"<p>{ An associative array of test result data.</p>","types":["array"],"variable":"$test_result"}]},"args":1},{"name":"site_status_test_php_modules","file":"wp-admin/includes/class-wp-site-health.php","type":"filter","doc":{"description":"Filters the array representing all the modules we wish to test for.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.2.0"},{"name":"since","content":"5.3.0","description":"<p>The <code>$constant</code> and <code>$class</code> parameters were added.</p>"},{"name":"param","content":"<p>{ An associative array of modules to test for.</p>","types":["array"],"variable":"$modules"}]},"args":1},{"name":"site_status_persistent_object_cache_url","file":"wp-admin/includes/class-wp-site-health.php","type":"filter","doc":{"description":"Filters the action URL for the persistent object cache health check.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"6.1.0"},{"name":"param","content":"<p>Learn more link for persistent object cache health check.</p>","types":["string"],"variable":"$action_url"}]},"args":1},{"name":"site_status_persistent_object_cache_notes","file":"wp-admin/includes/class-wp-site-health.php","type":"filter","doc":{"description":"Filters the second paragraph of the health check's description when suggesting the use of a persistent object cache.","long_description":"Hosts may want to replace the notes to recommend their preferred object caching solution.\n Plugin authors may want to append notes (not replace) on why object caching is recommended for their plugin.","long_description_html":"<p>Hosts may want to replace the notes to recommend their preferred object caching solution.</p> <p>Plugin authors may want to append notes (not replace) on why object caching is recommended for their plugin.</p>","tags":[{"name":"since","content":"6.1.0"},{"name":"param","content":"<p>The notes appended to the health check description.</p>","types":["string"],"variable":"$notes"},{"name":"param","content":"<p>The list of available persistent object cache services.</p>","types":["string[]"],"variable":"$available_services"}]},"args":2},{"name":"site_status_autoloaded_options_size_limit","file":"wp-admin/includes/class-wp-site-health.php","type":"filter","doc":{"description":"Filters max bytes threshold to trigger warning in Site Health.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"6.6.0"},{"name":"param","content":"<p>Autoloaded options threshold size. Default 800000.</p>","types":["int"],"variable":"$limit"}]},"args":1},{"name":"site_status_autoloaded_options_limit_description","file":"wp-admin/includes/class-wp-site-health.php","type":"filter","doc":{"description":"Filters description to be shown on Site Health warning when threshold is met.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"6.6.0"},{"name":"param","content":"<p>Description message when autoloaded options bigger than threshold.</p>","types":["string"],"variable":"$description"}]},"args":1},{"name":"site_status_autoloaded_options_action_to_perform","file":"wp-admin/includes/class-wp-site-health.php","type":"filter","doc":{"description":"Filters actionable information to tackle the problem. It can be a link to an external guide.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"6.6.0"},{"name":"param","content":"<p>Call to Action to be used to point to the right direction to solve the issue.</p>","types":["string"],"variable":"$actions"}]},"args":1},{"name":"site_status_tests","file":"wp-admin/includes/class-wp-site-health.php","type":"filter","doc":{"description":"Filters which site status tests are run on a site.","long_description":"The site health is determined by a set of tests based on best practices from both the WordPress Hosting Team and web standards in general.\n Some sites may not have the same requirements, for example the automatic update checks may be handled by a host, and are therefore disabled in core. Or maybe you want to introduce a new test, is caching enabled/disabled/stale for example.\n Tests may be added either as direct, or asynchronous ones. Any test that may require some time to complete should run asynchronously, to avoid extended loading periods within wp-admin.","long_description_html":"<p>The site health is determined by a set of tests based on best practices from both the WordPress Hosting Team and web standards in general.</p> <p>Some sites may not have the same requirements, for example the automatic update checks may be handled by a host, and are therefore disabled in core. Or maybe you want to introduce a new test, is caching enabled/disabled/stale for example.</p> <p>Tests may be added either as direct, or asynchronous ones. Any test that may require some time to complete should run asynchronously, to avoid extended loading periods within wp-admin.</p>","tags":[{"name":"since","content":"5.2.0"},{"name":"since","content":"5.6.0","description":"<p>Added the <code>async_direct_test</code> array key for asynchronous tests. Added the <code>skip_cron</code> array key for all tests.</p>"},{"name":"param","content":"<p>{ An associative array of direct and asynchronous tests.</p>","types":["array[]"],"variable":"$tests"}]},"args":1},{"name":"site_status_page_cache_supported_cache_headers","file":"wp-admin/includes/class-wp-site-health.php","type":"filter","doc":{"description":"Filters the list of cache headers supported by core.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"6.1.0"},{"name":"param","content":"<p>Array of supported cache headers.</p>","types":["array"],"variable":"$cache_headers"}]},"args":1},{"name":"site_status_good_response_time_threshold","file":"wp-admin/includes/class-wp-site-health.php","type":"filter","doc":{"description":"Filters the threshold below which a response time is considered good.","long_description":"The default is based on https://web.dev/time-to-first-byte/.","long_description_html":"<p>The default is based on <a href=\"https://web.dev/time-to-first-byte/\">https://web.dev/time-to-first-byte/</a>.</p>","tags":[{"name":"param","content":"<p>Threshold in milliseconds. Default 600.</p>","types":["int"],"variable":"$threshold"},{"name":"since","content":"6.1.0"}]},"args":1},{"name":"site_status_should_suggest_persistent_object_cache","file":"wp-admin/includes/class-wp-site-health.php","type":"filter","doc":{"description":"Filters whether to suggest use of a persistent object cache and bypass default threshold checks.","long_description":"Using this filter allows to override the default logic, effectively short-circuiting the method.","long_description_html":"<p>Using this filter allows to override the default logic, effectively short-circuiting the method.</p>","tags":[{"name":"since","content":"6.1.0"},{"name":"param","content":"<p>Boolean to short-circuit, for whether to suggest using a persistent object cache. Default null.</p>","types":["bool","null"],"variable":"$suggest"}]},"args":1},{"name":"site_status_persistent_object_cache_thresholds","file":"wp-admin/includes/class-wp-site-health.php","type":"filter","doc":{"description":"Filters the thresholds used to determine whether to suggest the use of a persistent object cache.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"6.1.0"},{"name":"param","content":"<p>The list of threshold numbers keyed by threshold name.</p>","types":["int[]"],"variable":"$thresholds"}]},"args":1},{"name":"site_status_available_object_cache_services","file":"wp-admin/includes/class-wp-site-health.php","type":"filter","doc":{"description":"Filters the persistent object cache services available to the user.","long_description":"This can be useful to hide or add services not included in the defaults.","long_description_html":"<p>This can be useful to hide or add services not included in the defaults.</p>","tags":[{"name":"since","content":"6.1.0"},{"name":"param","content":"<p>The list of available persistent object cache services.</p>","types":["string[]"],"variable":"$services"}]},"args":1},{"name":"wp_terms_checklist_args","file":"wp-admin/includes/template.php","type":"filter","doc":{"description":"Filters the taxonomy terms checklist arguments.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.4.0"},{"name":"see","content":"","refers":"wp_terms_checklist()"},{"name":"param","content":"<p>An array or string of arguments.</p>","types":["array","string"],"variable":"$args"},{"name":"param","content":"<p>The post ID.</p>","types":["int"],"variable":"$post_id"}]},"args":2},{"name":"wp_comment_reply","file":"wp-admin/includes/template.php","type":"filter","doc":{"description":"Filters the in-line comment reply-to form output in the Comments list table.","long_description":"Returning a non-empty value here will short-circuit display of the in-line comment-reply form in the Comments list table, echoing the returned value instead.","long_description_html":"<p>Returning a non-empty value here will short-circuit display of the in-line comment-reply form in the Comments list table, echoing the returned value instead.</p>","tags":[{"name":"since","content":"2.7.0"},{"name":"see","content":"","refers":"wp_comment_reply()"},{"name":"param","content":"<p>The reply-to form content.</p>","types":["string"],"variable":"$content"},{"name":"param","content":"<p>An array of default args.</p>","types":["array"],"variable":"$args"}]},"args":2},{"name":"postmeta_form_keys","file":"wp-admin/includes/template.php","type":"filter","doc":{"description":"Filters values for the meta key dropdown in the Custom Fields meta box.","long_description":"Returning a non-null value will effectively short-circuit and avoid a potentially expensive query against postmeta.","long_description_html":"<p>Returning a non-null value will effectively short-circuit and avoid a potentially expensive query against postmeta.</p>","tags":[{"name":"since","content":"4.4.0"},{"name":"param","content":"<p>Pre-defined meta keys to be used in place of a postmeta query. Default null.</p>","types":["array","null"],"variable":"$keys"},{"name":"param","content":"<p>The current post object.</p>","types":["\\WP_Post"],"variable":"$post"}]},"args":2},{"name":"postmeta_form_limit","file":"wp-admin/includes/template.php","type":"filter","doc":{"description":"Filters the number of custom fields to retrieve for the drop-down in the Custom Fields meta box.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.1.0"},{"name":"param","content":"<p>Number of custom fields to retrieve. Default 30.</p>","types":["int"],"variable":"$limit"}]},"args":1},{"name":"import_upload_size_limit","file":"wp-admin/includes/template.php","type":"filter","doc":{"description":"Filters the maximum allowed upload size for import files.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.3.0"},{"name":"see","content":"","refers":"wp_max_upload_size()"},{"name":"param","content":"<p>Allowed upload size. Default 1 MB.</p>","types":["int"],"variable":"$max_upload_size"}]},"args":1},{"name":"display_post_states","file":"wp-admin/includes/template.php","type":"filter","doc":{"description":"Filters the default post display states used in the posts list table.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.8.0"},{"name":"since","content":"3.6.0","description":"<p>Added the <code>$post</code> parameter.</p>"},{"name":"since","content":"5.5.0","description":"<p>Also applied in the Customizer context. If any admin functions are used within the filter, their existence should be checked with <code>function_exists()</code> before being used.</p>"},{"name":"param","content":"<p>An array of post display states.</p>","types":["string[]"],"variable":"$post_states"},{"name":"param","content":"<p>The current post object.</p>","types":["\\WP_Post"],"variable":"$post"}]},"args":2},{"name":"display_media_states","file":"wp-admin/includes/template.php","type":"filter","doc":{"description":"Filters the default media display states for items in the Media list table.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.2.0"},{"name":"since","content":"4.8.0","description":"<p>Added the <code>$post</code> parameter.</p>"},{"name":"param","content":"<p>An array of media states. Default 'Header Image', 'Background Image', 'Site Icon', 'Logo'.</p>","types":["string[]"],"variable":"$media_states"},{"name":"param","content":"<p>The current attachment object.</p>","types":["\\WP_Post"],"variable":"$post"}]},"args":2},{"name":"comments_list_table_query_args","file":"wp-admin/includes/class-wp-comments-list-table.php","type":"filter","doc":{"description":"Filters the arguments for the comment query in the comments list table.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.1.0"},{"name":"param","content":"<p>An array of get_comments() arguments.</p>","types":["array"],"variable":"$args"}]},"args":1},{"name":"comments_per_page","file":"wp-admin/includes/class-wp-comments-list-table.php","type":"filter","doc":{"description":"Filters the number of comments listed per page in the comments list table.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.6.0"},{"name":"param","content":"<p>The number of comments to list per page.</p>","types":["int"],"variable":"$comments_per_page"},{"name":"param","content":"<p>The comment status name. Default 'All'.</p>","types":["string"],"variable":"$comment_status"}]},"args":2},{"name":"comment_status_links","file":"wp-admin/includes/class-wp-comments-list-table.php","type":"filter","doc":{"description":"Filters the comment status links.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.5.0"},{"name":"since","content":"5.1.0","description":"<p>The 'Mine' link was added.</p>"},{"name":"param","content":"<p>An associative array of fully-formed comment status links. Includes 'All', 'Mine', 'Pending', 'Approved', 'Spam', and 'Trash'.</p>","types":["string[]"],"variable":"$status_links"}]},"args":1},{"name":"admin_comment_types_dropdown","file":"wp-admin/includes/class-wp-comments-list-table.php","type":"filter","doc":{"description":"Filters the comment types shown in the drop-down menu on the Comments list table.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.7.0"},{"name":"param","content":"<p>Array of comment type labels keyed by their name.</p>","types":["string[]"],"variable":"$comment_types"}]},"args":1},{"name":"comment_row_actions","file":"wp-admin/includes/class-wp-comments-list-table.php","type":"filter","doc":{"description":"Filters the action links displayed for each comment in the Comments list table.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.6.0"},{"name":"param","content":"<p>An array of comment actions. Default actions include: 'Approve', 'Unapprove', 'Edit', 'Reply', 'Spam', 'Delete', and 'Trash'.</p>","types":["string[]"],"variable":"$actions"},{"name":"param","content":"<p>The comment object.</p>","types":["\\WP_Comment"],"variable":"$comment"}]},"args":2},{"name":"media_upload_tabs","file":"wp-admin/includes/media.php","type":"filter","doc":{"description":"Filters the available tabs in the legacy (pre-3.5.0) media popup.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.5.0"},{"name":"param","content":"<p>An array of media tabs.</p>","types":["string[]"],"variable":"$_default_tabs"}]},"args":1},{"name":"image_send_to_editor","file":"wp-admin/includes/media.php","type":"filter","doc":{"description":"Filters the image HTML markup to send to the editor when inserting an image.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.5.0"},{"name":"since","content":"5.6.0","description":"<p>The <code>$rel</code> parameter was added.</p>"},{"name":"param","content":"<p>The image HTML markup to send.</p>","types":["string"],"variable":"$html"},{"name":"param","content":"<p>The attachment ID.</p>","types":["int"],"variable":"$id"},{"name":"param","content":"<p>The image caption.</p>","types":["string"],"variable":"$caption"},{"name":"param","content":"<p>The image title.</p>","types":["string"],"variable":"$title"},{"name":"param","content":"<p>The image alignment.</p>","types":["string"],"variable":"$align"},{"name":"param","content":"<p>The image source URL.</p>","types":["string"],"variable":"$url"},{"name":"param","content":"<p>Requested image size. Can be any registered image size name, or an array of width and height values in pixels (in that order).</p>","types":["string","int[]"],"variable":"$size"},{"name":"param","content":"<p>The image alternative, or alt, text.</p>","types":["string"],"variable":"$alt"},{"name":"param","content":"<p>The image rel attribute.</p>","types":["string"],"variable":"$rel"}]},"args":9},{"name":"image_add_caption_text","file":"wp-admin/includes/media.php","type":"filter","doc":{"description":"Filters the caption text.","long_description":"Note: If the caption text is empty, the caption shortcode will not be appended to the image HTML when inserted into the editor.\n Passing an empty value also prevents the {@see 'image_add_caption_shortcode'} Filters from being evaluated at the end of image_add_caption().","long_description_html":"<p>Note: If the caption text is empty, the caption shortcode will not be appended to the image HTML when inserted into the editor.</p> <p>Passing an empty value also prevents the {@see 'image_add_caption_shortcode'} Filters from being evaluated at the end of image_add_caption().</p>","tags":[{"name":"since","content":"4.1.0"},{"name":"param","content":"<p>The original caption text.</p>","types":["string"],"variable":"$caption"},{"name":"param","content":"<p>The attachment ID.</p>","types":["int"],"variable":"$id"}]},"args":2},{"name":"disable_captions","file":"wp-admin/includes/media.php","type":"filter","doc":{"description":"Filters whether to disable captions.","long_description":"Prevents image captions from being appended to image HTML when inserted into the editor.","long_description_html":"<p>Prevents image captions from being appended to image HTML when inserted into the editor.</p>","tags":[{"name":"since","content":"2.6.0"},{"name":"param","content":"<p>Whether to disable appending captions. Returning true from the filter will disable captions. Default empty string.</p>","types":["bool"],"variable":"$bool"}]},"args":1},{"name":"image_add_caption_shortcode","file":"wp-admin/includes/media.php","type":"filter","doc":{"description":"Filters the image HTML markup including the caption shortcode.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.6.0"},{"name":"param","content":"<p>The image HTML markup with caption shortcode.</p>","types":["string"],"variable":"$shcode"},{"name":"param","content":"<p>The image HTML markup.</p>","types":["string"],"variable":"$html"}]},"args":2},{"name":"{$type}_upload_iframe_src","aliases":["image_upload_iframe_src","media_upload_iframe_src"],"file":"wp-admin/includes/media.php","type":"filter","doc":{"description":"Filters the upload iframe source URL for a specific media type.","long_description":"The dynamic portion of the hook name, `$type`, refers to the type of media uploaded.\n Possible hook names include:\n\n  - `image_upload_iframe_src`\n  - `media_upload_iframe_src`","long_description_html":"<p>The dynamic portion of the hook name, <code>$type</code>, refers to the type of media uploaded.</p> <p>Possible hook names include:</p> <ul> <li><code>image_upload_iframe_src</code></li> <li><code>media_upload_iframe_src</code></li> </ul>","tags":[{"name":"since","content":"3.0.0"},{"name":"param","content":"<p>The upload iframe source URL.</p>","types":["string"],"variable":"$upload_iframe_src"}]},"args":1},{"name":"attachment_fields_to_save","file":"wp-admin/includes/media.php","type":"filter","doc":{"description":"Filters the attachment fields to be saved.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.5.0"},{"name":"see","content":"","refers":"wp_get_attachment_metadata()"},{"name":"param","content":"<p>An array of post data.</p>","types":["array"],"variable":"$post"},{"name":"param","content":"<p>An array of attachment metadata.</p>","types":["array"],"variable":"$attachment"}]},"args":2},{"name":"media_send_to_editor","file":"wp-admin/includes/media.php","type":"filter","doc":{"description":"Filters the HTML markup for a media item sent to the editor.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.5.0"},{"name":"see","content":"","refers":"wp_get_attachment_metadata()"},{"name":"param","content":"<p>HTML markup for a media item sent to the editor.</p>","types":["string"],"variable":"$html"},{"name":"param","content":"<p>The first key from the $_POST['send'] data.</p>","types":["int"],"variable":"$send_id"},{"name":"param","content":"<p>Array of attachment metadata.</p>","types":["array"],"variable":"$attachment"}]},"args":3},{"name":"{$type}_send_to_editor_url","aliases":["audio_send_to_editor_url","file_send_to_editor_url","video_send_to_editor_url"],"file":"wp-admin/includes/media.php","type":"filter","doc":{"description":"Filters the URL sent to the editor for a specific media type.","long_description":"The dynamic portion of the hook name, `$type`, refers to the type of media being sent.\n Possible hook names include:\n\n  - `audio_send_to_editor_url`\n  - `file_send_to_editor_url`\n  - `video_send_to_editor_url`","long_description_html":"<p>The dynamic portion of the hook name, <code>$type</code>, refers to the type of media being sent.</p> <p>Possible hook names include:</p> <ul> <li><code>audio_send_to_editor_url</code></li> <li><code>file_send_to_editor_url</code></li> <li><code>video_send_to_editor_url</code></li> </ul>","tags":[{"name":"since","content":"3.3.0"},{"name":"param","content":"<p>HTML markup sent to the editor.</p>","types":["string"],"variable":"$html"},{"name":"param","content":"<p>Media source URL.</p>","types":["string"],"variable":"$src"},{"name":"param","content":"<p>Media title.</p>","types":["string"],"variable":"$title"}]},"args":3},{"name":"image_send_to_editor_url","file":"wp-admin/includes/media.php","type":"filter","doc":{"description":"Filters the image URL sent to the editor.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.8.0"},{"name":"param","content":"<p>HTML markup sent to the editor for an image.</p>","types":["string"],"variable":"$html"},{"name":"param","content":"<p>Image source URL.</p>","types":["string"],"variable":"$src"},{"name":"param","content":"<p>Image alternate, or alt, text.</p>","types":["string"],"variable":"$alt"},{"name":"param","content":"<p>The image alignment. Default 'alignnone'. Possible values include 'alignleft', 'aligncenter', 'alignright', 'alignnone'.</p>","types":["string"],"variable":"$align"}]},"args":4},{"name":"image_sideload_extensions","file":"wp-admin/includes/media.php","type":"filter","doc":{"description":"Filters the list of allowed file extensions when sideloading an image from a URL.","long_description":"The default allowed extensions are:\n - `jpg` - `jpeg` - `jpe` - `png` - `gif` - `webp`","long_description_html":"<p>The default allowed extensions are:</p> <ul> <li><code>jpg</code></li> <li><code>jpeg</code></li> <li><code>jpe</code></li> <li><code>png</code></li> <li><code>gif</code></li> <li><code>webp</code></li> </ul>","tags":[{"name":"since","content":"5.6.0"},{"name":"since","content":"5.8.0","description":"<p>Added 'webp' to the default list of allowed file extensions.</p>"},{"name":"param","content":"<p>Array of allowed file extensions.</p>","types":["string[]"],"variable":"$allowed_extensions"},{"name":"param","content":"<p>The URL of the image to download.</p>","types":["string"],"variable":"$file"}]},"args":2},{"name":"image_size_names_choose","file":"wp-admin/includes/media.php","type":"filter","doc":{"description":"Filters the names and labels of the default image sizes.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.3.0"},{"name":"param","content":"<p>Array of image size labels keyed by their name. Default values include 'Thumbnail', 'Medium', 'Large', and 'Full Size'.</p>","types":["string[]"],"variable":"$size_names"}]},"args":1},{"name":"attachment_fields_to_edit","file":"wp-admin/includes/media.php","type":"filter","doc":{"description":"Filters the attachment fields to edit.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.5.0"},{"name":"param","content":"<p>An array of attachment form fields.</p>","types":["array"],"variable":"$form_fields"},{"name":"param","content":"<p>The WP_Post attachment object.</p>","types":["\\WP_Post"],"variable":"$post"}]},"args":2},{"name":"get_media_item_args","file":"wp-admin/includes/media.php","type":"filter","doc":{"description":"Filters the arguments used to retrieve an image for the edit image form.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.1.0"},{"name":"see","content":"","refers":"get_media_item"},{"name":"param","content":"<p>An array of arguments.</p>","types":["array"],"variable":"$parsed_args"}]},"args":1},{"name":"media_meta","file":"wp-admin/includes/media.php","type":"filter","doc":{"description":"Filters the media metadata.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.5.0"},{"name":"param","content":"<p>The HTML markup containing the media dimensions.</p>","types":["string"],"variable":"$media_dims"},{"name":"param","content":"<p>The WP_Post attachment object.</p>","types":["\\WP_Post"],"variable":"$post"}]},"args":2},{"name":"upload_post_params","file":"wp-admin/includes/media.php","type":"filter","doc":{"description":"Filters the media upload post parameters.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.1.0","description":"<p>As 'swfupload_post_params'</p>"},{"name":"since","content":"3.3.0"},{"name":"param","content":"<p>An array of media upload parameters used by Plupload.</p>","types":["array"],"variable":"$post_params"}]},"args":1},{"name":"plupload_init","file":"wp-admin/includes/media.php","type":"filter","doc":{"description":"Filters the default Plupload settings.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.3.0"},{"name":"param","content":"<p>An array of default settings used by Plupload.</p>","types":["array"],"variable":"$plupload_init"}]},"args":1},{"name":"media_upload_form_url","file":"wp-admin/includes/media.php","type":"filter","doc":{"description":"Filters the media upload form action URL.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.6.0"},{"name":"param","content":"<p>The media upload form action URL.</p>","types":["string"],"variable":"$form_action_url"},{"name":"param","content":"<p>The type of media. Default 'file'.</p>","types":["string"],"variable":"$type"}]},"args":2},{"name":"type_url_form_media","file":"wp-admin/includes/media.php","type":"filter","doc":{"description":"Filters the insert media from URL form HTML.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.3.0"},{"name":"param","content":"<p>The insert from URL form HTML.</p>","types":["string"],"variable":"$form_html"}]},"args":1},{"name":"media_upload_mime_type_links","file":"wp-admin/includes/media.php","type":"filter","doc":{"description":"Filters the media upload mime type list items.","long_description":"Returned values should begin with an `<li>` tag.","long_description_html":"<p>Returned values should begin with an <code>&lt;li&gt;</code> tag.</p>","tags":[{"name":"since","content":"3.1.0"},{"name":"param","content":"<p>An array of list items containing mime type link HTML.</p>","types":["string[]"],"variable":"$type_links"}]},"args":1},{"name":"activate_tinymce_for_media_description","file":"wp-admin/includes/media.php","type":"filter","doc":{"description":"Filters the TinyMCE argument for the media description field on the attachment details screen.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"6.6.0"},{"name":"param","content":"<p>Whether to activate TinyMCE in media description field. Default false.</p>","types":["bool"],"variable":"$tinymce"}]},"args":1},{"name":"media_submitbox_misc_sections","file":"wp-admin/includes/media.php","type":"filter","doc":{"description":"Filters the audio and video metadata fields to be shown in the publish meta box.","long_description":"The key for each item in the array should correspond to an attachment metadata key, and the value should be the desired label.","long_description_html":"<p>The key for each item in the array should correspond to an attachment metadata key, and the value should be the desired label.</p>","tags":[{"name":"since","content":"3.7.0"},{"name":"since","content":"4.9.0","description":"<p>Added the <code>$post</code> parameter.</p>"},{"name":"param","content":"<p>An array of the attachment metadata keys and labels.</p>","types":["array"],"variable":"$fields"},{"name":"param","content":"<p>WP_Post object for the current attachment.</p>","types":["\\WP_Post"],"variable":"$post"}]},"args":2},{"name":"audio_submitbox_misc_sections","file":"wp-admin/includes/media.php","type":"filter","doc":{"description":"Filters the audio attachment metadata fields to be shown in the publish meta box.","long_description":"The key for each item in the array should correspond to an attachment metadata key, and the value should be the desired label.","long_description_html":"<p>The key for each item in the array should correspond to an attachment metadata key, and the value should be the desired label.</p>","tags":[{"name":"since","content":"3.7.0"},{"name":"since","content":"4.9.0","description":"<p>Added the <code>$post</code> parameter.</p>"},{"name":"param","content":"<p>An array of the attachment metadata keys and labels.</p>","types":["array"],"variable":"$fields"},{"name":"param","content":"<p>WP_Post object for the current attachment.</p>","types":["\\WP_Post"],"variable":"$post"}]},"args":2},{"name":"wp_read_video_metadata","file":"wp-admin/includes/media.php","type":"filter","doc":{"description":"Filters the array of metadata retrieved from a video.","long_description":"In core, usually this selection is what is stored. More complete data can be parsed from the `$data` parameter.","long_description_html":"<p>In core, usually this selection is what is stored. More complete data can be parsed from the <code>$data</code> parameter.</p>","tags":[{"name":"since","content":"4.9.0"},{"name":"param","content":"<p>Filtered video metadata.</p>","types":["array"],"variable":"$metadata"},{"name":"param","content":"<p>Path to video file.</p>","types":["string"],"variable":"$file"},{"name":"param","content":"<p>File format of video, as analyzed by getID3. Null if unknown.</p>","types":["string","null"],"variable":"$file_format"},{"name":"param","content":"<p>Raw metadata from getID3.</p>","types":["array"],"variable":"$data"}]},"args":4},{"name":"wp_read_audio_metadata","file":"wp-admin/includes/media.php","type":"filter","doc":{"description":"Filters the array of metadata retrieved from an audio file.","long_description":"In core, usually this selection is what is stored. More complete data can be parsed from the `$data` parameter.","long_description_html":"<p>In core, usually this selection is what is stored. More complete data can be parsed from the <code>$data</code> parameter.</p>","tags":[{"name":"since","content":"6.1.0"},{"name":"param","content":"<p>Filtered audio metadata.</p>","types":["array"],"variable":"$metadata"},{"name":"param","content":"<p>Path to audio file.</p>","types":["string"],"variable":"$file"},{"name":"param","content":"<p>File format of audio, as analyzed by getID3. Null if unknown.</p>","types":["string","null"],"variable":"$file_format"},{"name":"param","content":"<p>Raw metadata from getID3.</p>","types":["array"],"variable":"$data"}]},"args":4},{"name":"plugin_files_exclusions","file":"wp-admin/includes/plugin.php","type":"filter","doc":{"description":"Filters the array of excluded directories and files while scanning the folder.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.9.0"},{"name":"param","content":"<p>Array of excluded directories and files.</p>","types":["string[]"],"variable":"$exclusions"}]},"args":1},{"name":"update_bulk_theme_complete_actions","file":"wp-admin/includes/class-bulk-theme-upgrader-skin.php","type":"filter","doc":{"description":"Filters the list of action links available following bulk theme updates.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.0.0"},{"name":"param","content":"<p>Array of theme action links.</p>","types":["string[]"],"variable":"$update_actions"},{"name":"param","content":"<p>Theme object for the last-updated theme.</p>","types":["\\WP_Theme"],"variable":"$theme_info"}]},"args":2},{"name":"views_{$this->screen->id}","file":"wp-admin/includes/class-wp-list-table.php","type":"filter","doc":{"description":"Filters the list of available list table views.","long_description":"The dynamic portion of the hook name, `$this->screen->id`, refers to the ID of the current screen.","long_description_html":"<p>The dynamic portion of the hook name, <code>$this-&gt;screen-&gt;id</code>, refers to the ID of the current screen.</p>","tags":[{"name":"since","content":"3.1.0"},{"name":"param","content":"<p>An array of available list table views.</p>","types":["string[]"],"variable":"$views"}]},"args":1},{"name":"bulk_actions-{$this->screen->id}","file":"wp-admin/includes/class-wp-list-table.php","type":"filter","doc":{"description":"Filters the items in the bulk actions menu of the list table.","long_description":"The dynamic portion of the hook name, `$this->screen->id`, refers to the ID of the current screen.","long_description_html":"<p>The dynamic portion of the hook name, <code>$this-&gt;screen-&gt;id</code>, refers to the ID of the current screen.</p>","tags":[{"name":"since","content":"3.1.0"},{"name":"since","content":"5.6.0","description":"<p>A bulk action can now contain an array of options in order to create an optgroup.</p>"},{"name":"param","content":"<p>An array of the available bulk actions.</p>","types":["array"],"variable":"$actions"}]},"args":1},{"name":"disable_months_dropdown","file":"wp-admin/includes/class-wp-list-table.php","type":"filter","doc":{"description":"Filters whether to remove the 'Months' drop-down from the post list table.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.2.0"},{"name":"param","content":"<p>Whether to disable the drop-down. Default false.</p>","types":["bool"],"variable":"$disable"},{"name":"param","content":"<p>The post type.</p>","types":["string"],"variable":"$post_type"}]},"args":2},{"name":"pre_months_dropdown_query","file":"wp-admin/includes/class-wp-list-table.php","type":"filter","doc":{"description":"Filters whether to short-circuit performing the months dropdown query.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.7.0"},{"name":"param","content":"<p>'Months' drop-down results. Default false.</p>","types":["object[]","false"],"variable":"$months"},{"name":"param","content":"<p>The post type.</p>","types":["string"],"variable":"$post_type"}]},"args":2},{"name":"months_dropdown_results","file":"wp-admin/includes/class-wp-list-table.php","type":"filter","doc":{"description":"Filters the 'Months' drop-down results.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.7.0"},{"name":"param","content":"<p>Array of the months drop-down query results.</p>","types":["object[]"],"variable":"$months"},{"name":"param","content":"<p>The post type.</p>","types":["string"],"variable":"$post_type"}]},"args":2},{"name":"{$option}","file":"wp-admin/includes/class-wp-list-table.php","type":"filter","doc":{"description":"Filters the number of items to be displayed on each page of the list table.","long_description":"The dynamic hook name, `$option`, refers to the `per_page` option depending on the type of list table in use. Possible filter names include:\n\n  - `edit_comments_per_page`\n  - `sites_network_per_page`\n  - `site_themes_network_per_page`\n  - `themes_network_per_page`\n  - `users_network_per_page`\n  - `edit_post_per_page`\n  - `edit_page_per_page`\n  - `edit_{$post_type}_per_page`\n  - `edit_post_tag_per_page`\n  - `edit_category_per_page`\n  - `edit_{$taxonomy}_per_page`\n  - `site_users_network_per_page`\n  - `users_per_page`","long_description_html":"<p>The dynamic hook name, <code>$option</code>, refers to the <code>per_page</code> option depending on the type of list table in use. Possible filter names include:</p> <ul> <li><code>edit_comments_per_page</code></li> <li><code>sites_network_per_page</code></li> <li><code>site_themes_network_per_page</code></li> <li><code>themes_network_per_page</code></li> <li><code>users_network_per_page</code></li> <li><code>edit_post_per_page</code></li> <li><code>edit_page_per_page</code></li> <li><code>edit_{$post_type}_per_page</code></li> <li><code>edit_post_tag_per_page</code></li> <li><code>edit_category_per_page</code></li> <li><code>edit_{$taxonomy}_per_page</code></li> <li><code>site_users_network_per_page</code></li> <li><code>users_per_page</code></li> </ul>","tags":[{"name":"since","content":"2.9.0"},{"name":"param","content":"<p>Number of items to be displayed. Default 20.</p>","types":["int"],"variable":"$per_page"}]},"args":1},{"name":"list_table_primary_column","file":"wp-admin/includes/class-wp-list-table.php","type":"filter","doc":{"description":"Filters the name of the primary column for the current list table.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.3.0"},{"name":"param","content":"<p>Column name default for the specific list table, e.g. 'name'.</p>","types":["string"],"variable":"$default"},{"name":"param","content":"<p>Screen ID for specific list table, e.g. 'plugins'.</p>","types":["string"],"variable":"$context"}]},"args":2},{"name":"manage_{$this->screen->id}_sortable_columns","file":"wp-admin/includes/class-wp-list-table.php","type":"filter","doc":{"description":"Filters the list table sortable columns for a specific screen.","long_description":"The dynamic portion of the hook name, `$this->screen->id`, refers to the ID of the current screen.","long_description_html":"<p>The dynamic portion of the hook name, <code>$this-&gt;screen-&gt;id</code>, refers to the ID of the current screen.</p>","tags":[{"name":"since","content":"3.1.0"},{"name":"param","content":"<p>An array of sortable columns.</p>","types":["array"],"variable":"$sortable_columns"}]},"args":1},{"name":"comment_edit_pre","file":"wp-admin/includes/comment.php","type":"filter","doc":{"description":"Filters the comment content before editing.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.0.0"},{"name":"param","content":"<p>Comment content.</p>","types":["string"],"variable":"$comment_content"}]},"args":1},{"name":"nav_menu_meta_box_object","file":"wp-admin/includes/nav-menu.php","type":"filter","doc":{"description":"Filters whether a menu items meta box will be added for the current object type.","long_description":"If a falsey value is returned instead of an object, the menu items meta box for the current meta box object will not be added.","long_description_html":"<p>If a falsey value is returned instead of an object, the menu items meta box for the current meta box object will not be added.</p>","tags":[{"name":"since","content":"3.0.0"},{"name":"param","content":"<p>The current object to add a menu items meta box for.</p>","types":["\\WP_Post_Type","false"],"variable":"$post_type"}]},"args":1},{"name":"nav_menu_items_{$post_type_name}_recent","aliases":["nav_menu_items_page_recent","nav_menu_items_post_recent"],"file":"wp-admin/includes/nav-menu.php","type":"filter","doc":{"description":"Filters the posts displayed in the 'Most Recent' tab of the current post type's menu items meta box.","long_description":"The dynamic portion of the hook name, `$post_type_name`, refers to the post type name.\n Possible hook names include:\n\n  - `nav_menu_items_post_recent`\n  - `nav_menu_items_page_recent`","long_description_html":"<p>The dynamic portion of the hook name, <code>$post_type_name</code>, refers to the post type name.</p> <p>Possible hook names include:</p> <ul> <li><code>nav_menu_items_post_recent</code></li> <li><code>nav_menu_items_page_recent</code></li> </ul>","tags":[{"name":"since","content":"4.3.0"},{"name":"since","content":"4.9.0","description":"<p>Added the <code>$recent_args</code> parameter.</p>"},{"name":"param","content":"<p>An array of post objects being listed.</p>","types":["\\WP_Post[]"],"variable":"$most_recent"},{"name":"param","content":"<p>An array of <code>WP_Query</code> arguments for the meta box.</p>","types":["array"],"variable":"$args"},{"name":"param","content":"<p>Arguments passed to <code>wp_nav_menu_item_post_type_meta_box()</code>.</p>","types":["array"],"variable":"$box"},{"name":"param","content":"<p>An array of <code>WP_Query</code> arguments for 'Most Recent' tab.</p>","types":["array"],"variable":"$recent_args"}]},"args":4},{"name":"nav_menu_items_{$post_type_name}","aliases":["nav_menu_items_page","nav_menu_items_post"],"file":"wp-admin/includes/nav-menu.php","type":"filter","doc":{"description":"Filters the posts displayed in the 'View All' tab of the current post type's menu items meta box.","long_description":"The dynamic portion of the hook name, `$post_type_name`, refers to the slug of the current post type.\n Possible hook names include:\n\n  - `nav_menu_items_post`\n  - `nav_menu_items_page`","long_description_html":"<p>The dynamic portion of the hook name, <code>$post_type_name</code>, refers to the slug of the current post type.</p> <p>Possible hook names include:</p> <ul> <li><code>nav_menu_items_post</code></li> <li><code>nav_menu_items_page</code></li> </ul>","tags":[{"name":"since","content":"3.2.0"},{"name":"since","content":"4.6.0","description":"<p>Converted the <code>$post_type</code> parameter to accept a WP_Post_Type object.</p>"},{"name":"see","content":"","refers":"WP_Query::query()"},{"name":"param","content":"<p>The posts for the current post type. Mostly <code>WP_Post</code> objects, but can also contain &quot;fake&quot; post objects to represent other menu items.</p>","types":["object[]"],"variable":"$posts"},{"name":"param","content":"<p>An array of <code>WP_Query</code> arguments.</p>","types":["array"],"variable":"$args"},{"name":"param","content":"<p>The current post type object for this menu item meta box.</p>","types":["\\WP_Post_Type"],"variable":"$post_type"}]},"args":3},{"name":"wp_edit_nav_menu_walker","file":"wp-admin/includes/nav-menu.php","type":"filter","doc":{"description":"Filters the Walker class used when adding nav menu items.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.0.0"},{"name":"param","content":"<p>The walker class to use. Default 'Walker_Nav_Menu_Edit'.</p>","types":["string"],"variable":"$class"},{"name":"param","content":"<p>ID of the menu being rendered.</p>","types":["int"],"variable":"$menu_id"}]},"args":2},{"name":"update_bulk_plugins_complete_actions","file":"wp-admin/includes/class-bulk-plugin-upgrader-skin.php","type":"filter","doc":{"description":"Filters the list of action links available following bulk plugin updates.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.0.0"},{"name":"param","content":"<p>Array of plugin action links.</p>","types":["string[]"],"variable":"$update_actions"},{"name":"param","content":"<p>Array of information for the last-updated plugin.</p>","types":["array"],"variable":"$plugin_info"}]},"args":2},{"name":"image_edit_thumbnails_separately","file":"wp-admin/includes/image-edit.php","type":"filter","doc":{"description":"Shows the settings in the Image Editor that allow selecting to edit only the thumbnail of an image.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"6.3.0"},{"name":"param","content":"<p>Whether to show the settings in the Image Editor. Default false.</p>","types":["bool"],"variable":"$show"}]},"args":1},{"name":"image_editor_save_pre","file":"wp-admin/includes/image-edit.php","type":"filter","doc":{"description":"Filters the WP_Image_Editor instance for the image to be streamed to the browser.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.5.0"},{"name":"param","content":"<p>The image editor instance.</p>","types":["\\WP_Image_Editor"],"variable":"$image"},{"name":"param","content":"<p>The attachment post ID.</p>","types":["int"],"variable":"$attachment_id"}]},"args":2},{"name":"wp_save_image_editor_file","file":"wp-admin/includes/image-edit.php","type":"filter","doc":{"description":"Filters whether to skip saving the image file.","long_description":"Returning a non-null value will short-circuit the save method, returning that value instead.","long_description_html":"<p>Returning a non-null value will short-circuit the save method, returning that value instead.</p>","tags":[{"name":"since","content":"3.5.0"},{"name":"param","content":"<p>Value to return instead of saving. Default null.</p>","types":["bool","null"],"variable":"$override"},{"name":"param","content":"<p>Name of the file to be saved.</p>","types":["string"],"variable":"$filename"},{"name":"param","content":"<p>The image editor instance.</p>","types":["\\WP_Image_Editor"],"variable":"$image"},{"name":"param","content":"<p>The mime type of the image.</p>","types":["string"],"variable":"$mime_type"},{"name":"param","content":"<p>Attachment post ID.</p>","types":["int"],"variable":"$post_id"}]},"args":5},{"name":"wp_image_editor_before_change","file":"wp-admin/includes/image-edit.php","type":"filter","doc":{"description":"Filters the WP_Image_Editor instance before applying changes to the image.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.5.0"},{"name":"param","content":"<p>WP_Image_Editor instance.</p>","types":["\\WP_Image_Editor"],"variable":"$image"},{"name":"param","content":"<p>Array of change operations.</p>","types":["array"],"variable":"$changes"}]},"args":2},{"name":"allow_dev_auto_core_updates","file":"wp-admin/includes/class-core-upgrader.php","type":"filter","doc":{"description":"Filters whether to enable automatic core updates for development versions.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.7.0"},{"name":"param","content":"<p>Whether to enable automatic updates for development versions.</p>","types":["bool"],"variable":"$upgrade_dev"}]},"args":1},{"name":"allow_minor_auto_core_updates","file":"wp-admin/includes/class-core-upgrader.php","type":"filter","doc":{"description":"Filters whether to enable minor automatic core updates.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.7.0"},{"name":"param","content":"<p>Whether to enable minor automatic core updates.</p>","types":["bool"],"variable":"$upgrade_minor"}]},"args":1},{"name":"allow_major_auto_core_updates","file":"wp-admin/includes/class-core-upgrader.php","type":"filter","doc":{"description":"Filters whether to enable major automatic core updates.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.7.0"},{"name":"param","content":"<p>Whether to enable major automatic core updates.</p>","types":["bool"],"variable":"$upgrade_major"}]},"args":1},{"name":"install_plugins_tabs","file":"wp-admin/includes/class-wp-plugin-install-list-table.php","type":"filter","doc":{"description":"Filters the tabs shown on the Add Plugins screen.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.7.0"},{"name":"param","content":"<p>The tabs shown on the Add Plugins screen. Defaults include 'featured', 'popular', 'recommended', 'favorites', and 'upload'.</p>","types":["string[]"],"variable":"$tabs"}]},"args":1},{"name":"install_plugins_nonmenu_tabs","file":"wp-admin/includes/class-wp-plugin-install-list-table.php","type":"filter","doc":{"description":"Filters tabs not associated with a menu item on the Add Plugins screen.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.7.0"},{"name":"param","content":"<p>The tabs that don't have a menu item on the Add Plugins screen.</p>","types":["string[]"],"variable":"$nonmenu_tabs"}]},"args":1},{"name":"install_plugins_table_api_args_{$tab}","aliases":["install_plugins_table_api_args_beta","install_plugins_table_api_args_favorites","install_plugins_table_api_args_featured","install_plugins_table_api_args_popular","install_plugins_table_api_args_recommended","install_plugins_table_api_args_search","install_plugins_table_api_args_upload"],"file":"wp-admin/includes/class-wp-plugin-install-list-table.php","type":"filter","doc":{"description":"Filters API request arguments for each Add Plugins screen tab.","long_description":"The dynamic portion of the hook name, `$tab`, refers to the plugin install tabs.\n Possible hook names include:\n\n  - `install_plugins_table_api_args_favorites`\n  - `install_plugins_table_api_args_featured`\n  - `install_plugins_table_api_args_popular`\n  - `install_plugins_table_api_args_recommended`\n  - `install_plugins_table_api_args_upload`\n  - `install_plugins_table_api_args_search`\n  - `install_plugins_table_api_args_beta`","long_description_html":"<p>The dynamic portion of the hook name, <code>$tab</code>, refers to the plugin install tabs.</p> <p>Possible hook names include:</p> <ul> <li><code>install_plugins_table_api_args_favorites</code></li> <li><code>install_plugins_table_api_args_featured</code></li> <li><code>install_plugins_table_api_args_popular</code></li> <li><code>install_plugins_table_api_args_recommended</code></li> <li><code>install_plugins_table_api_args_upload</code></li> <li><code>install_plugins_table_api_args_search</code></li> <li><code>install_plugins_table_api_args_beta</code></li> </ul>","tags":[{"name":"since","content":"3.7.0"},{"name":"param","content":"<p>Plugin install API arguments.</p>","types":["array","false"],"variable":"$args"}]},"args":1},{"name":"plugin_install_description","file":"wp-admin/includes/class-wp-plugin-install-list-table.php","type":"filter","doc":{"description":"Filters the plugin card description on the Add Plugins screen.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"6.0.0"},{"name":"param","content":"<p>Plugin card description.</p>","types":["string"],"variable":"$description"},{"name":"param","content":"<p>An array of plugin data. See {@see \\plugins_api()} for the list of possible values.</p>","types":["array"],"variable":"$plugin"}]},"args":2},{"name":"plugin_install_action_links","file":"wp-admin/includes/class-wp-plugin-install-list-table.php","type":"filter","doc":{"description":"Filters the install action links for a plugin.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.7.0"},{"name":"param","content":"<p>An array of plugin action links. Defaults are links to Details and Install Now.</p>","types":["string[]"],"variable":"$action_links"},{"name":"param","content":"<p>An array of plugin data. See {@see \\plugins_api()} for the list of possible values.</p>","types":["array"],"variable":"$plugin"}]},"args":2},{"name":"ms_sites_list_table_query_args","file":"wp-admin/includes/class-wp-ms-sites-list-table.php","type":"filter","doc":{"description":"Filters the arguments for the site query in the sites list table.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.6.0"},{"name":"param","content":"<p>An array of get_sites() arguments.</p>","types":["array"],"variable":"$args"}]},"args":1},{"name":"wpmu_blogs_columns","file":"wp-admin/includes/class-wp-ms-sites-list-table.php","type":"filter","doc":{"description":"Filters the displayed site columns in Sites list table.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"MU (3.0.0)","description":"MU (3.0.0)"},{"name":"param","content":"<p>An array of displayed site columns. Default 'cb', 'blogname', 'lastupdated', 'registered', 'users'.</p>","types":["string[]"],"variable":"$sites_columns"}]},"args":1},{"name":"display_site_states","file":"wp-admin/includes/class-wp-ms-sites-list-table.php","type":"filter","doc":{"description":"Filters the default site display states for items in the Sites list table.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.3.0"},{"name":"param","content":"<p>An array of site states. Default 'Main', 'Archived', 'Mature', 'Spam', 'Deleted'.</p>","types":["string[]"],"variable":"$site_states"},{"name":"param","content":"<p>The current site object.</p>","types":["\\WP_Site"],"variable":"$site"}]},"args":2},{"name":"manage_sites_action_links","file":"wp-admin/includes/class-wp-ms-sites-list-table.php","type":"filter","doc":{"description":"Filters the action links displayed for each site in the Sites list table.","long_description":"The 'Edit', 'Dashboard', 'Delete', and 'Visit' links are displayed by default for each site. The site's status determines whether to show the 'Activate' or 'Deactivate' link, 'Unarchive' or 'Archive' links, and 'Not Spam' or 'Spam' link for each site.","long_description_html":"<p>The 'Edit', 'Dashboard', 'Delete', and 'Visit' links are displayed by default for each site. The site's status determines whether to show the 'Activate' or 'Deactivate' link, 'Unarchive' or 'Archive' links, and 'Not Spam' or 'Spam' link for each site.</p>","tags":[{"name":"since","content":"3.1.0"},{"name":"param","content":"<p>An array of action links to be displayed.</p>","types":["string[]"],"variable":"$actions"},{"name":"param","content":"<p>The site ID.</p>","types":["int"],"variable":"$blog_id"},{"name":"param","content":"<p>Site path, formatted depending on whether it is a sub-domain or subdirectory multisite installation.</p>","types":["string"],"variable":"$blogname"}]},"args":3},{"name":"update_plugin_complete_actions","file":"wp-admin/includes/class-plugin-upgrader-skin.php","type":"filter","doc":{"description":"Filters the list of action links available following a single plugin update.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.7.0"},{"name":"param","content":"<p>Array of plugin action links.</p>","types":["string[]"],"variable":"$update_actions"},{"name":"param","content":"<p>Path to the plugin file relative to the plugins directory.</p>","types":["string"],"variable":"$plugin"}]},"args":2},{"name":"update_feedback","file":"wp-admin/includes/update-core.php","type":"filter","doc":{"description":"Filters feedback messages displayed during the core update process.","long_description":"The filter is first evaluated after the zip file for the latest version has been downloaded and unzipped. It is evaluated five more times during the process:\n\n 1. Before WordPress begins the core upgrade process.\n 2. Before Maintenance Mode is enabled.\n 3. Before WordPress begins copying over the necessary files.\n 4. Before Maintenance Mode is disabled.\n 5. Before the database is upgraded.","long_description_html":"<p>The filter is first evaluated after the zip file for the latest version has been downloaded and unzipped. It is evaluated five more times during the process:</p> <ol> <li>Before WordPress begins the core upgrade process.</li> <li>Before Maintenance Mode is enabled.</li> <li>Before WordPress begins copying over the necessary files.</li> <li>Before Maintenance Mode is disabled.</li> <li>Before the database is upgraded.</li> </ol>","tags":[{"name":"since","content":"2.5.0"},{"name":"param","content":"<p>The core update feedback messages.</p>","types":["string"],"variable":"$feedback"}]},"args":1},{"name":"translations_api","file":"wp-admin/includes/translation-install.php","type":"filter","doc":{"description":"Allows a plugin to override the WordPress.org Translation Installation API entirely.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.0.0"},{"name":"param","content":"<p>The result array. Default false.</p>","types":["false","array"],"variable":"$result"},{"name":"param","content":"<p>The type of translations being requested.</p>","types":["string"],"variable":"$type"},{"name":"param","content":"<p>Translation API arguments.</p>","types":["object"],"variable":"$args"}]},"args":3},{"name":"translations_api_result","file":"wp-admin/includes/translation-install.php","type":"filter","doc":{"description":"Filters the Translation Installation API response results.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.0.0"},{"name":"param","content":"<p>{ On success an associative array of translations, WP_Error on failure.</p>","types":["array","\\WP_Error"],"variable":"$res"},{"name":"param","content":"<p>The type of translations being requested.</p>","types":["string"],"variable":"$type"},{"name":"param","content":"<p>Translation API arguments.</p>","types":["object"],"variable":"$args"}]},"args":3},{"name":"_wp_post_revision_field_{$field}","aliases":["_wp_post_revision_field_post_content","_wp_post_revision_field_post_excerpt","_wp_post_revision_field_post_title"],"file":"wp-admin/includes/revision.php","type":"filter","doc":{"description":"Contextually filter a post revision field.","long_description":"The dynamic portion of the hook name, `$field`, corresponds to a name of a field of the revision object.\n Possible hook names include:\n\n  - `_wp_post_revision_field_post_title`\n  - `_wp_post_revision_field_post_content`\n  - `_wp_post_revision_field_post_excerpt`","long_description_html":"<p>The dynamic portion of the hook name, <code>$field</code>, corresponds to a name of a field of the revision object.</p> <p>Possible hook names include:</p> <ul> <li><code>_wp_post_revision_field_post_title</code></li> <li><code>_wp_post_revision_field_post_content</code></li> <li><code>_wp_post_revision_field_post_excerpt</code></li> </ul>","tags":[{"name":"since","content":"3.6.0"},{"name":"param","content":"<p>The current revision field to compare to or from.</p>","types":["string"],"variable":"$revision_field"},{"name":"param","content":"<p>The current revision field.</p>","types":["string"],"variable":"$field"},{"name":"param","content":"<p>The revision post object to compare to or from.</p>","types":["\\WP_Post"],"variable":"$compare_from"},{"name":"param","content":"<p>The context of whether the current revision is the old or the new one. Either 'to' or 'from'.</p>","types":["string"],"variable":"$context"}]},"args":4},{"name":"revision_text_diff_options","file":"wp-admin/includes/revision.php","type":"filter","doc":{"description":"Filters revisions text diff options.","long_description":"Filters the options passed to wp_text_diff() when viewing a post revision.","long_description_html":"<p>Filters the options passed to wp_text_diff() when viewing a post revision.</p>","tags":[{"name":"since","content":"4.1.0"},{"name":"param","content":"<p>{ Associative array of options to pass to wp_text_diff().</p>","types":["array"],"variable":"$args"},{"name":"param","content":"<p>The current revision field.</p>","types":["string"],"variable":"$field"},{"name":"param","content":"<p>The revision post to compare from.</p>","types":["\\WP_Post"],"variable":"$compare_from"},{"name":"param","content":"<p>The revision post to compare to.</p>","types":["\\WP_Post"],"variable":"$compare_to"}]},"args":4},{"name":"wp_get_revision_ui_diff","file":"wp-admin/includes/revision.php","type":"filter","doc":{"description":"Filters the fields displayed in the post revision diff UI.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.1.0"},{"name":"param","content":"<p>Array of revision UI fields. Each item is an array of id, name, and diff.</p>","types":["array[]"],"variable":"$return"},{"name":"param","content":"<p>The revision post to compare from.</p>","types":["\\WP_Post"],"variable":"$compare_from"},{"name":"param","content":"<p>The revision post to compare to.</p>","types":["\\WP_Post"],"variable":"$compare_to"}]},"args":3},{"name":"wp_prepare_revision_for_js","file":"wp-admin/includes/revision.php","type":"filter","doc":{"description":"Filters the array of revisions used on the revisions screen.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.4.0"},{"name":"param","content":"<p>{ The bootstrapped data for the revisions screen.</p>","types":["array"],"variable":"$revisions_data"},{"name":"param","content":"<p>The revision's WP_Post object.</p>","types":["\\WP_Post"],"variable":"$revision"},{"name":"param","content":"<p>The revision's parent WP_Post object.</p>","types":["\\WP_Post"],"variable":"$post"}]},"args":3},{"name":"allow_subdirectory_install","file":"wp-admin/includes/network.php","type":"filter","doc":{"description":"Filters whether to enable the subdirectory installation feature in Multisite.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.0.0"},{"name":"param","content":"<p>Whether to enable the subdirectory installation feature in Multisite. Default false.</p>","types":["bool"],"variable":"$allow"}]},"args":1},{"name":"disable_categories_dropdown","file":"wp-admin/includes/class-wp-posts-list-table.php","type":"filter","doc":{"description":"Filters whether to remove the 'Categories' drop-down from the post list table.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.6.0"},{"name":"param","content":"<p>Whether to disable the categories drop-down. Default false.</p>","types":["bool"],"variable":"$disable"},{"name":"param","content":"<p>Post type slug.</p>","types":["string"],"variable":"$post_type"}]},"args":2},{"name":"disable_formats_dropdown","file":"wp-admin/includes/class-wp-posts-list-table.php","type":"filter","doc":{"description":"Filters whether to remove the 'Formats' drop-down from the post list table.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.2.0"},{"name":"since","content":"5.5.0","description":"<p>The <code>$post_type</code> parameter was added.</p>"},{"name":"param","content":"<p>Whether to disable the drop-down. Default false.</p>","types":["bool"],"variable":"$disable"},{"name":"param","content":"<p>Post type slug.</p>","types":["string"],"variable":"$post_type"}]},"args":2},{"name":"manage_taxonomies_for_{$post_type}_columns","aliases":["manage_taxonomies_for_page_columns","manage_taxonomies_for_post_columns"],"file":"wp-admin/includes/class-wp-posts-list-table.php","type":"filter","doc":{"description":"Filters the taxonomy columns in the Posts list table.","long_description":"The dynamic portion of the hook name, `$post_type`, refers to the post type slug.\n Possible hook names include:\n\n  - `manage_taxonomies_for_post_columns`\n  - `manage_taxonomies_for_page_columns`","long_description_html":"<p>The dynamic portion of the hook name, <code>$post_type</code>, refers to the post type slug.</p> <p>Possible hook names include:</p> <ul> <li><code>manage_taxonomies_for_post_columns</code></li> <li><code>manage_taxonomies_for_page_columns</code></li> </ul>","tags":[{"name":"since","content":"3.5.0"},{"name":"param","content":"<p>Array of taxonomy names to show columns for.</p>","types":["string[]"],"variable":"$taxonomies"},{"name":"param","content":"<p>The post type.</p>","types":["string"],"variable":"$post_type"}]},"args":2},{"name":"manage_pages_columns","file":"wp-admin/includes/class-wp-posts-list-table.php","type":"filter","doc":{"description":"Filters the columns displayed in the Pages list table.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.5.0"},{"name":"param","content":"<p>An associative array of column headings.</p>","types":["string[]"],"variable":"$posts_columns"}]},"args":1},{"name":"manage_posts_columns","file":"wp-admin/includes/class-wp-posts-list-table.php","type":"filter","doc":{"description":"Filters the columns displayed in the Posts list table.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"1.5.0"},{"name":"param","content":"<p>An associative array of column headings.</p>","types":["string[]"],"variable":"$posts_columns"},{"name":"param","content":"<p>The post type slug.</p>","types":["string"],"variable":"$post_type"}]},"args":2},{"name":"manage_{$post_type}_posts_columns","aliases":["manage_page_posts_columns","manage_post_posts_columns"],"file":"wp-admin/includes/class-wp-posts-list-table.php","type":"filter","doc":{"description":"Filters the columns displayed in the Posts list table for a specific post type.","long_description":"The dynamic portion of the hook name, `$post_type`, refers to the post type slug.\n Possible hook names include:\n\n  - `manage_post_posts_columns`\n  - `manage_page_posts_columns`","long_description_html":"<p>The dynamic portion of the hook name, <code>$post_type</code>, refers to the post type slug.</p> <p>Possible hook names include:</p> <ul> <li><code>manage_post_posts_columns</code></li> <li><code>manage_page_posts_columns</code></li> </ul>","tags":[{"name":"since","content":"3.0.0"},{"name":"param","content":"<p>An associative array of column headings.</p>","types":["string[]"],"variable":"$posts_columns"}]},"args":1},{"name":"wp_list_table_show_post_checkbox","file":"wp-admin/includes/class-wp-posts-list-table.php","type":"filter","doc":{"description":"Filters whether to show the bulk edit checkbox for a post in its list table.","long_description":"By default the checkbox is only shown if the current user can edit the post.","long_description_html":"<p>By default the checkbox is only shown if the current user can edit the post.</p>","tags":[{"name":"since","content":"5.7.0"},{"name":"param","content":"<p>Whether to show the checkbox.</p>","types":["bool"],"variable":"$show"},{"name":"param","content":"<p>The current WP_Post object.</p>","types":["\\WP_Post"],"variable":"$post"}]},"args":2},{"name":"post_date_column_status","file":"wp-admin/includes/class-wp-posts-list-table.php","type":"filter","doc":{"description":"Filters the status text of the post.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.8.0"},{"name":"param","content":"<p>The status text.</p>","types":["string"],"variable":"$status"},{"name":"param","content":"<p>Post object.</p>","types":["\\WP_Post"],"variable":"$post"},{"name":"param","content":"<p>The column name.</p>","types":["string"],"variable":"$column_name"},{"name":"param","content":"<p>The list display mode ('excerpt' or 'list').</p>","types":["string"],"variable":"$mode"}]},"args":4},{"name":"post_date_column_time","file":"wp-admin/includes/class-wp-posts-list-table.php","type":"filter","doc":{"description":"Filters the published, scheduled, or unpublished time of the post.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.5.1"},{"name":"since","content":"5.5.0","description":"<p>Removed the difference between 'excerpt' and 'list' modes. The published time and date are both displayed now, which is equivalent to the previous 'excerpt' mode.</p>"},{"name":"param","content":"<p>The published time.</p>","types":["string"],"variable":"$t_time"},{"name":"param","content":"<p>Post object.</p>","types":["\\WP_Post"],"variable":"$post"},{"name":"param","content":"<p>The column name.</p>","types":["string"],"variable":"$column_name"},{"name":"param","content":"<p>The list display mode ('excerpt' or 'list').</p>","types":["string"],"variable":"$mode"}]},"args":4},{"name":"post_column_taxonomy_links","file":"wp-admin/includes/class-wp-posts-list-table.php","type":"filter","doc":{"description":"Filters the links in `$taxonomy` column of edit.php.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.2.0"},{"name":"param","content":"<p>Array of term editing links.</p>","types":["string[]"],"variable":"$term_links"},{"name":"param","content":"<p>Taxonomy name.</p>","types":["string"],"variable":"$taxonomy"},{"name":"param","content":"<p>Array of term objects appearing in the post row.</p>","types":["\\WP_Term[]"],"variable":"$terms"}]},"args":3},{"name":"quick_edit_enabled_for_post_type","file":"wp-admin/includes/class-wp-posts-list-table.php","type":"filter","doc":{"description":"Filters whether Quick Edit should be enabled for the given post type.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"6.4.0"},{"name":"param","content":"<p>Whether to enable the Quick Edit functionality. Default true.</p>","types":["bool"],"variable":"$enable"},{"name":"param","content":"<p>Post type name.</p>","types":["string"],"variable":"$post_type"}]},"args":2},{"name":"page_row_actions","file":"wp-admin/includes/class-wp-posts-list-table.php","type":"filter","doc":{"description":"Filters the array of row action links on the Pages list table.","long_description":"The filter is evaluated only for hierarchical post types.","long_description_html":"<p>The filter is evaluated only for hierarchical post types.</p>","tags":[{"name":"since","content":"2.8.0"},{"name":"param","content":"<p>An array of row action links. Defaults are 'Edit', 'Quick Edit', 'Restore', 'Trash', 'Delete Permanently', 'Preview', and 'View'.</p>","types":["string[]"],"variable":"$actions"},{"name":"param","content":"<p>The post object.</p>","types":["\\WP_Post"],"variable":"$post"}]},"args":2},{"name":"post_row_actions","file":"wp-admin/includes/class-wp-posts-list-table.php","type":"filter","doc":{"description":"Filters the array of row action links on the Posts list table.","long_description":"The filter is evaluated only for non-hierarchical post types.","long_description_html":"<p>The filter is evaluated only for non-hierarchical post types.</p>","tags":[{"name":"since","content":"2.8.0"},{"name":"param","content":"<p>An array of row action links. Defaults are 'Edit', 'Quick Edit', 'Restore', 'Trash', 'Delete Permanently', 'Preview', and 'View'.</p>","types":["string[]"],"variable":"$actions"},{"name":"param","content":"<p>The post object.</p>","types":["\\WP_Post"],"variable":"$post"}]},"args":2},{"name":"quick_edit_show_taxonomy","file":"wp-admin/includes/class-wp-posts-list-table.php","type":"filter","doc":{"description":"Filters whether the current taxonomy should be shown in the Quick Edit panel.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.2.0"},{"name":"param","content":"<p>Whether to show the current taxonomy in Quick Edit.</p>","types":["bool"],"variable":"$show_in_quick_edit"},{"name":"param","content":"<p>Taxonomy name.</p>","types":["string"],"variable":"$taxonomy_name"},{"name":"param","content":"<p>Post type of current Quick Edit post.</p>","types":["string"],"variable":"$post_type"}]},"args":3},{"name":"quick_edit_dropdown_authors_args","file":"wp-admin/includes/class-wp-posts-list-table.php","type":"filter","doc":{"description":"Filters the arguments used to generate the Quick Edit authors drop-down.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.6.0"},{"name":"see","content":"","refers":"wp_dropdown_users()"},{"name":"param","content":"<p>An array of arguments passed to wp_dropdown_users().</p>","types":["array"],"variable":"$users_opt"},{"name":"param","content":"<p>A flag to denote if it's a bulk action.</p>","types":["bool"],"variable":"$bulk"}]},"args":2},{"name":"quick_edit_dropdown_pages_args","file":"wp-admin/includes/class-wp-posts-list-table.php","type":"filter","doc":{"description":"Filters the arguments used to generate the Quick Edit page-parent drop-down.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.7.0"},{"name":"since","content":"5.6.0","description":"<p>The <code>$bulk</code> parameter was added.</p>"},{"name":"see","content":"","refers":"wp_dropdown_pages()"},{"name":"param","content":"<p>An array of arguments passed to wp_dropdown_pages().</p>","types":["array"],"variable":"$dropdown_args"},{"name":"param","content":"<p>A flag to denote if it's a bulk action.</p>","types":["bool"],"variable":"$bulk"}]},"args":2},{"name":"install_theme_complete_actions","file":"wp-admin/includes/class-theme-installer-skin.php","type":"filter","doc":{"description":"Filters the list of action links available following a single theme installation.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.8.0"},{"name":"param","content":"<p>Array of theme action links.</p>","types":["string[]"],"variable":"$install_actions"},{"name":"param","content":"<p>Object containing WordPress.org API theme data.</p>","types":["object"],"variable":"$api"},{"name":"param","content":"<p>Theme directory name.</p>","types":["string"],"variable":"$stylesheet"},{"name":"param","content":"<p>Theme object.</p>","types":["\\WP_Theme"],"variable":"$theme_info"}]},"args":4},{"name":"install_theme_overwrite_comparison","file":"wp-admin/includes/class-theme-installer-skin.php","type":"filter","doc":{"description":"Filters the compare table output for overwriting a theme package on upload.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.5.0"},{"name":"param","content":"<p>The output table with Name, Version, Author, RequiresWP, and RequiresPHP info.</p>","types":["string"],"variable":"$table"},{"name":"param","content":"<p>Active theme data.</p>","types":["\\WP_Theme"],"variable":"$current_theme_data"},{"name":"param","content":"<p>Array with uploaded theme data.</p>","types":["array"],"variable":"$new_theme_data"}]},"args":3},{"name":"install_theme_overwrite_actions","file":"wp-admin/includes/class-theme-installer-skin.php","type":"filter","doc":{"description":"Filters the list of action links available following a single theme installation failure when overwriting is allowed.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.5.0"},{"name":"param","content":"<p>Array of theme action links.</p>","types":["string[]"],"variable":"$install_actions"},{"name":"param","content":"<p>Object containing WordPress.org API theme data.</p>","types":["object"],"variable":"$api"},{"name":"param","content":"<p>Array with uploaded theme data.</p>","types":["array"],"variable":"$new_theme_data"}]},"args":3},{"name":"install_plugin_complete_actions","file":"wp-admin/includes/class-plugin-installer-skin.php","type":"filter","doc":{"description":"Filters the list of action links available following a single plugin installation.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.7.0"},{"name":"param","content":"<p>Array of plugin action links.</p>","types":["string[]"],"variable":"$install_actions"},{"name":"param","content":"<p>Object containing WordPress.org API plugin data. Empty for non-API installs, such as when a plugin is installed via upload.</p>","types":["object"],"variable":"$api"},{"name":"param","content":"<p>Path to the plugin file relative to the plugins directory.</p>","types":["string"],"variable":"$plugin_file"}]},"args":3},{"name":"install_plugin_overwrite_comparison","file":"wp-admin/includes/class-plugin-installer-skin.php","type":"filter","doc":{"description":"Filters the compare table output for overwriting a plugin package on upload.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.5.0"},{"name":"param","content":"<p>The output table with Name, Version, Author, RequiresWP, and RequiresPHP info.</p>","types":["string"],"variable":"$table"},{"name":"param","content":"<p>Array with current plugin data.</p>","types":["array"],"variable":"$current_plugin_data"},{"name":"param","content":"<p>Array with uploaded plugin data.</p>","types":["array"],"variable":"$new_plugin_data"}]},"args":3},{"name":"install_plugin_overwrite_actions","file":"wp-admin/includes/class-plugin-installer-skin.php","type":"filter","doc":{"description":"Filters the list of action links available following a single plugin installation failure when overwriting is allowed.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.5.0"},{"name":"param","content":"<p>Array of plugin action links.</p>","types":["string[]"],"variable":"$install_actions"},{"name":"param","content":"<p>Object containing WordPress.org API plugin data.</p>","types":["object"],"variable":"$api"},{"name":"param","content":"<p>Array with uploaded plugin data.</p>","types":["array"],"variable":"$new_plugin_data"}]},"args":3},{"name":"got_rewrite","file":"wp-admin/includes/misc.php","type":"filter","doc":{"description":"Filters whether Apache and mod_rewrite are present.","long_description":"This filter was previously used to force URL rewriting for other servers, like nginx. Use the {@see 'got_url_rewrite'} filter in got_url_rewrite() instead.","long_description_html":"<p>This filter was previously used to force URL rewriting for other servers, like nginx. Use the {@see 'got_url_rewrite'} filter in got_url_rewrite() instead.</p>","tags":[{"name":"since","content":"2.5.0"},{"name":"see","content":"","refers":"got_url_rewrite()"},{"name":"param","content":"<p>Whether Apache and mod_rewrite are present.</p>","types":["bool"],"variable":"$got_rewrite"}]},"args":1},{"name":"got_url_rewrite","file":"wp-admin/includes/misc.php","type":"filter","doc":{"description":"Filters whether URL rewriting is available.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.7.0"},{"name":"param","content":"<p>Whether URL rewriting is available.</p>","types":["bool"],"variable":"$got_url_rewrite"}]},"args":1},{"name":"insert_with_markers_inline_instructions","file":"wp-admin/includes/misc.php","type":"filter","doc":{"description":"Filters the inline instructions inserted before the dynamically generated content.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.3.0"},{"name":"param","content":"<p>Array of lines with inline instructions.</p>","types":["string[]"],"variable":"$instructions"},{"name":"param","content":"<p>The marker being inserted.</p>","types":["string"],"variable":"$marker"}]},"args":2},{"name":"documentation_ignore_functions","file":"wp-admin/includes/misc.php","type":"filter","doc":{"description":"Filters the list of functions and classes to be ignored from the documentation lookup.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.8.0"},{"name":"param","content":"<p>Array of names of functions and classes to be ignored.</p>","types":["string[]"],"variable":"$ignore_functions"}]},"args":1},{"name":"set-screen-option","file":"wp-admin/includes/misc.php","type":"filter","doc":{"description":"Filters a screen option value before it is set.","long_description":"The filter can also be used to modify non-standard `[items]_per_page` settings. See the parent function for a full list of standard options.\n Returning false from the filter will skip saving the current option.","long_description_html":"<p>The filter can also be used to modify non-standard <code>[items]_per_page</code> settings. See the parent function for a full list of standard options.</p> <p>Returning false from the filter will skip saving the current option.</p>","tags":[{"name":"since","content":"2.8.0"},{"name":"since","content":"5.4.2","description":"<p>Only applied to options ending with '_page', or the 'layout_columns' option.</p>"},{"name":"see","content":"","refers":"set_screen_options()"},{"name":"param","content":"<p>The value to save instead of the option value. Default false (to skip saving the current option).</p>","types":["mixed"],"variable":"$screen_option"},{"name":"param","content":"<p>The option name.</p>","types":["string"],"variable":"$option"},{"name":"param","content":"<p>The option value.</p>","types":["int"],"variable":"$value"}]},"args":3},{"name":"set_screen_option_{$option}","file":"wp-admin/includes/misc.php","type":"filter","doc":{"description":"Filters a screen option value before it is set.","long_description":"The dynamic portion of the hook name, `$option`, refers to the option name.\n Returning false from the filter will skip saving the current option.","long_description_html":"<p>The dynamic portion of the hook name, <code>$option</code>, refers to the option name.</p> <p>Returning false from the filter will skip saving the current option.</p>","tags":[{"name":"since","content":"5.4.2"},{"name":"see","content":"","refers":"set_screen_options()"},{"name":"param","content":"<p>The value to save instead of the option value. Default false (to skip saving the current option).</p>","types":["mixed"],"variable":"$screen_option"},{"name":"param","content":"<p>The option name.</p>","types":["string"],"variable":"$option"},{"name":"param","content":"<p>The option value.</p>","types":["int"],"variable":"$value"}]},"args":3},{"name":"admin_viewport_meta","file":"wp-admin/includes/misc.php","type":"filter","doc":{"description":"Filters the viewport meta in the admin.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.5.0"},{"name":"param","content":"<p>The viewport meta.</p>","types":["string"],"variable":"$viewport_meta"}]},"args":1},{"name":"wp_admin_canonical_url","file":"wp-admin/includes/misc.php","type":"filter","doc":{"description":"Filters the admin canonical URL value.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"6.5.0"},{"name":"param","content":"<p>The admin canonical URL value.</p>","types":["string"],"variable":"$filtered_url"}]},"args":1},{"name":"admin_referrer_policy","file":"wp-admin/includes/misc.php","type":"filter","doc":{"description":"Filters the admin referrer policy header value.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.9.0"},{"name":"since","content":"4.9.5","description":"<p>The default value was changed to 'strict-origin-when-cross-origin'.</p>"},{"name":"link","content":"<a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referrer-Policy\">https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referrer-Policy</a>","link":"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referrer-Policy"},{"name":"param","content":"<p>The admin referrer policy header value. Default 'strict-origin-when-cross-origin'.</p>","types":["string"],"variable":"$policy"}]},"args":1},{"name":"new_admin_email_content","file":"wp-admin/includes/misc.php","type":"filter","doc":{"description":"Filters the text of the email sent when a change of site admin email address is attempted.","long_description":"The following strings have a special meaning and will get replaced dynamically: - ###USERNAME###  The current user's username. - ###ADMIN_URL### The link to click on to confirm the email change. - ###EMAIL###     The proposed new site admin email address. - ###SITENAME###  The name of the site. - ###SITEURL###   The URL to the site.","long_description_html":"<p>The following strings have a special meaning and will get replaced dynamically:</p> <ul> <li> <h3>USERNAME###  The current user's username.</h3> </li> <li> <h3>ADMIN_URL### The link to click on to confirm the email change.</h3> </li> <li> <h3>EMAIL###     The proposed new site admin email address.</h3> </li> <li> <h3>SITENAME###  The name of the site.</h3> </li> <li> <h3>SITEURL###   The URL to the site.</h3> </li> </ul>","tags":[{"name":"since","content":"MU (3.0.0)","description":"MU (3.0.0)"},{"name":"since","content":"4.9.0","description":"<p>This filter is no longer Multisite specific.</p>"},{"name":"param","content":"<p>Text in the email.</p>","types":["string"],"variable":"$email_text"},{"name":"param","content":"<p>{ Data relating to the new site admin email address.</p>","types":["array"],"variable":"$new_admin_email"}]},"args":2},{"name":"new_admin_email_subject","file":"wp-admin/includes/misc.php","type":"filter","doc":{"description":"Filters the subject of the email sent when a change of site admin email address is attempted.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"6.5.0"},{"name":"param","content":"<p>Subject of the email.</p>","types":["string"],"variable":"$subject"}]},"args":1},{"name":"wp_is_php_version_acceptable","file":"wp-admin/includes/misc.php","type":"filter","doc":{"description":"Filters whether the active PHP version is considered acceptable by WordPress.","long_description":"Returning false will trigger a PHP version warning to show up in the admin dashboard to administrators.\n This filter is only run if the wordpress.org Serve Happy API considers the PHP version acceptable, ensuring that this filter can only make this check stricter, but not loosen it.","long_description_html":"<p>Returning false will trigger a PHP version warning to show up in the admin dashboard to administrators.</p> <p>This filter is only run if the wordpress.org Serve Happy API considers the PHP version acceptable, ensuring that this filter can only make this check stricter, but not loosen it.</p>","tags":[{"name":"since","content":"5.1.1"},{"name":"param","content":"<p>Whether the PHP version is considered acceptable. Default true.</p>","types":["bool"],"variable":"$is_acceptable"},{"name":"param","content":"<p>PHP version checked.</p>","types":["string"],"variable":"$version"}]},"args":2},{"name":"site_icon_attachment_metadata","file":"wp-admin/includes/class-wp-site-icon.php","type":"filter","doc":{"description":"Filters the site icon attachment metadata.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.3.0"},{"name":"see","content":"","refers":"wp_generate_attachment_metadata()"},{"name":"param","content":"<p>Attachment metadata.</p>","types":["array"],"variable":"$metadata"}]},"args":1},{"name":"site_icon_image_sizes","file":"wp-admin/includes/class-wp-site-icon.php","type":"filter","doc":{"description":"Filters the different dimensions that a site icon is saved in.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.3.0"},{"name":"param","content":"<p>Array of sizes available for the Site Icon.</p>","types":["int[]"],"variable":"$site_icon_sizes"}]},"args":1},{"name":"debug_information","file":"wp-admin/includes/class-wp-debug-data.php","type":"filter","doc":{"description":"Filters the debug information shown on the Tools -> Site Health -> Info screen.","long_description":"Plugin or themes may wish to introduce their own debug information without creating additional admin pages. They can utilize this filter to introduce their own sections or add more data to existing sections.\n Array keys for sections added by core are all prefixed with `wp-`. Plugins and themes should use their own slug as a prefix, both for consistency as well as avoiding key collisions. Note that the array keys are used as labels for the copied data.\n All strings are expected to be plain text except `$description` that can contain inline HTML tags (see below).","long_description_html":"<p>Plugin or themes may wish to introduce their own debug information without creating additional admin pages. They can utilize this filter to introduce their own sections or add more data to existing sections.</p> <p>Array keys for sections added by core are all prefixed with <code>wp-</code>. Plugins and themes should use their own slug as a prefix, both for consistency as well as avoiding key collisions. Note that the array keys are used as labels for the copied data.</p> <p>All strings are expected to be plain text except <code>$description</code> that can contain inline HTML tags (see below).</p>","tags":[{"name":"since","content":"5.2.0"},{"name":"param","content":"<p>{ The debug information to be added to the core information page. This is an associative multi-dimensional array, up to three levels deep. The topmost array holds the sections, keyed by section ID.</p>","types":["array"],"variable":"$args"}]},"args":1},{"name":"plugin_auto_update_debug_string","file":"wp-admin/includes/class-wp-debug-data.php","type":"filter","doc":{"description":"Filters the text string of the auto-updates setting for each plugin in the Site Health debug data.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.5.0"},{"name":"param","content":"<p>The string output for the auto-updates column.</p>","types":["string"],"variable":"$auto_updates_string"},{"name":"param","content":"<p>The path to the plugin file.</p>","types":["string"],"variable":"$plugin_path"},{"name":"param","content":"<p>An array of plugin data.</p>","types":["array"],"variable":"$plugin"},{"name":"param","content":"<p>Whether auto-updates are enabled for this item.</p>","types":["bool"],"variable":"$enabled"}]},"args":4},{"name":"theme_auto_update_debug_string","file":"wp-admin/includes/class-wp-debug-data.php","type":"filter","doc":{"description":"Filters the text string of the auto-updates setting for each theme in the Site Health debug data.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.5.0"},{"name":"param","content":"<p>The string output for the auto-updates column.</p>","types":["string"],"variable":"$auto_updates_string"},{"name":"param","content":"<p>An object of theme data.</p>","types":["\\WP_Theme"],"variable":"$theme"},{"name":"param","content":"<p>Whether auto-updates are enabled for this item.</p>","types":["bool"],"variable":"$enabled"}]},"args":3},{"name":"wp_create_file_in_uploads","file":"wp-admin/includes/class-custom-image-header.php","type":"filter","doc":{"description":"Filters the attachment file path after the custom header or background image is set.","long_description":"Used for file replication.","long_description_html":"<p>Used for file replication.</p>","tags":[{"name":"since","content":"2.1.0"},{"name":"param","content":"<p>Path to the file.</p>","types":["string"],"variable":"$file"},{"name":"param","content":"<p>Attachment ID.</p>","types":["int"],"variable":"$attachment_id"}]},"args":2},{"name":"wp_header_image_attachment_metadata","file":"wp-admin/includes/class-custom-image-header.php","type":"filter","doc":{"description":"Filters the header image attachment metadata.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.9.0"},{"name":"see","content":"","refers":"wp_generate_attachment_metadata()"},{"name":"param","content":"<p>Attachment metadata.</p>","types":["array"],"variable":"$metadata"}]},"args":1},{"name":"add_menu_classes","file":"wp-admin/includes/menu.php","type":"filter","doc":{"description":"Filters administration menu array with classes added for top-level items.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.7.0"},{"name":"param","content":"<p>Associative array of administration menu items.</p>","types":["array"],"variable":"$menu"}]},"args":1},{"name":"custom_menu_order","file":"wp-admin/includes/menu.php","type":"filter","doc":{"description":"Filters whether to enable custom ordering of the administration menu.","long_description":"See the {@see 'menu_order'} filter for reordering menu items.","long_description_html":"<p>See the {@see 'menu_order'} filter for reordering menu items.</p>","tags":[{"name":"since","content":"2.8.0"},{"name":"param","content":"<p>Whether custom ordering is enabled. Default false.</p>","types":["bool"],"variable":"$custom"}]},"args":1},{"name":"menu_order","file":"wp-admin/includes/menu.php","type":"filter","doc":{"description":"Filters the order of administration menu items.","long_description":"A truthy value must first be passed to the {@see 'custom_menu_order'} filter for this filter to work. Use the following to enable custom menu ordering:\n     add_filter( 'custom_menu_order', '__return_true' );","long_description_html":"<p>A truthy value must first be passed to the {@see 'custom_menu_order'} filter for this filter to work. Use the following to enable custom menu ordering:</p> <pre><code>add_filter( 'custom_menu_order', '__return_true' );</code></pre>","tags":[{"name":"since","content":"2.8.0"},{"name":"param","content":"<p>An ordered array of menu items.</p>","types":["array"],"variable":"$menu_order"}]},"args":1},{"name":"editable_extensions","file":"wp-admin/includes/file.php","type":"filter","doc":{"description":"Filters the list of file types allowed for editing in the plugin file editor.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.8.0"},{"name":"since","content":"4.9.0","description":"<p>Added the <code>$plugin</code> parameter.</p>"},{"name":"param","content":"<p>An array of editable plugin file extensions.</p>","types":["string[]"],"variable":"$default_types"},{"name":"param","content":"<p>Path to the plugin file relative to the plugins directory.</p>","types":["string"],"variable":"$plugin"}]},"args":2},{"name":"wp_theme_editor_filetypes","file":"wp-admin/includes/file.php","type":"filter","doc":{"description":"Filters the list of file types allowed for editing in the theme file editor.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.4.0"},{"name":"param","content":"<p>An array of editable theme file extensions.</p>","types":["string[]"],"variable":"$default_types"},{"name":"param","content":"<p>The active theme object.</p>","types":["\\WP_Theme"],"variable":"$theme"}]},"args":2},{"name":"{$action}_prefilter","aliases":["wp_handle_sideload_prefilter","wp_handle_upload_prefilter"],"file":"wp-admin/includes/file.php","type":"filter","doc":{"description":"Filters the data for a file before it is uploaded to WordPress.","long_description":"The dynamic portion of the hook name, `$action`, refers to the post action.\n Possible hook names include:\n\n  - `wp_handle_sideload_prefilter`\n  - `wp_handle_upload_prefilter`","long_description_html":"<p>The dynamic portion of the hook name, <code>$action</code>, refers to the post action.</p> <p>Possible hook names include:</p> <ul> <li><code>wp_handle_sideload_prefilter</code></li> <li><code>wp_handle_upload_prefilter</code></li> </ul>","tags":[{"name":"since","content":"2.9.0","description":"<p>as 'wp_handle_upload_prefilter'.</p>"},{"name":"since","content":"4.0.0","description":"<p>Converted to a dynamic hook with <code>$action</code>.</p>"},{"name":"param","content":"<p>{ Reference to a single element from <code>$_FILES</code>.</p>","types":["array"],"variable":"$file"}]},"args":1},{"name":"{$action}_overrides","aliases":["wp_handle_sideload_overrides","wp_handle_upload_overrides"],"file":"wp-admin/includes/file.php","type":"filter","doc":{"description":"Filters the override parameters for a file before it is uploaded to WordPress.","long_description":"The dynamic portion of the hook name, `$action`, refers to the post action.\n Possible hook names include:\n\n  - `wp_handle_sideload_overrides`\n  - `wp_handle_upload_overrides`","long_description_html":"<p>The dynamic portion of the hook name, <code>$action</code>, refers to the post action.</p> <p>Possible hook names include:</p> <ul> <li><code>wp_handle_sideload_overrides</code></li> <li><code>wp_handle_upload_overrides</code></li> </ul>","tags":[{"name":"since","content":"5.7.0"},{"name":"param","content":"<p>An array of override parameters for this file. Boolean false if none are provided. See {@see _wp_handle_upload()}.</p>","types":["array","false"],"variable":"$overrides"},{"name":"param","content":"<p>{ Reference to a single element from <code>$_FILES</code>.</p>","types":["array"],"variable":"$file"}]},"args":2},{"name":"pre_move_uploaded_file","file":"wp-admin/includes/file.php","type":"filter","doc":{"description":"Filters whether to short-circuit moving the uploaded file after passing all checks.","long_description":"If a non-null value is returned from the filter, moving the file and any related error reporting will be completely skipped.","long_description_html":"<p>If a non-null value is returned from the filter, moving the file and any related error reporting will be completely skipped.</p>","tags":[{"name":"since","content":"4.9.0"},{"name":"param","content":"<p>If null (default) move the file after the upload.</p>","types":["mixed"],"variable":"$move_new_file"},{"name":"param","content":"<p>{ Reference to a single element from <code>$_FILES</code>.</p>","types":["array"],"variable":"$file"},{"name":"param","content":"<p>Filename of the newly-uploaded file.</p>","types":["string"],"variable":"$new_file"},{"name":"param","content":"<p>Mime type of the newly-uploaded file.</p>","types":["string"],"variable":"$type"}]},"args":4},{"name":"wp_handle_upload","file":"wp-admin/includes/file.php","type":"filter","doc":{"description":"Filters the data array for the uploaded file.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.1.0"},{"name":"param","content":"<p>{ Array of upload data.</p>","types":["array"],"variable":"$upload"},{"name":"param","content":"<p>The type of upload action. Values include 'upload' or 'sideload'.</p>","types":["string"],"variable":"$context"}]},"args":2},{"name":"download_url_error_max_body_size","file":"wp-admin/includes/file.php","type":"filter","doc":{"description":"Filters the maximum error response body size in `download_url()`.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.1.0"},{"name":"see","content":"","refers":"download_url()"},{"name":"param","content":"<p>The maximum error response body size. Default 1 KB.</p>","types":["int"],"variable":"$size"}]},"args":1},{"name":"wp_signature_hosts","file":"wp-admin/includes/file.php","type":"filter","doc":{"description":"Filters the list of hosts which should have Signature Verification attempted on.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.2.0"},{"name":"param","content":"<p>List of hostnames.</p>","types":["string[]"],"variable":"$hostnames"}]},"args":1},{"name":"wp_signature_url","file":"wp-admin/includes/file.php","type":"filter","doc":{"description":"Filters the URL where the signature for a file is located.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.2.0"},{"name":"param","content":"<p>The URL where signatures can be found for a file, or false if none are known.</p>","types":["false","string"],"variable":"$signature_url"},{"name":"param","content":"<p>The URL being verified.</p>","types":["string"],"variable":"$url"}]},"args":2},{"name":"wp_signature_softfail","file":"wp-admin/includes/file.php","type":"filter","doc":{"description":"Filters whether Signature Verification failures should be allowed to soft fail.","long_description":"WARNING: This may be removed from a future release.","long_description_html":"<p>WARNING: This may be removed from a future release.</p>","tags":[{"name":"since","content":"5.2.0"},{"name":"param","content":"<p>If a softfail is allowed.</p>","types":["bool"],"variable":"$signature_softfail"},{"name":"param","content":"<p>The url being accessed.</p>","types":["string"],"variable":"$url"}]},"args":2},{"name":"wp_trusted_keys","file":"wp-admin/includes/file.php","type":"filter","doc":{"description":"Filters the valid signing keys used to verify the contents of files.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.2.0"},{"name":"param","content":"<p>The trusted keys that may sign packages.</p>","types":["string[]"],"variable":"$trusted_keys"}]},"args":1},{"name":"unzip_file_use_ziparchive","file":"wp-admin/includes/file.php","type":"filter","doc":{"description":"Filters whether to use ZipArchive to unzip archives.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.0.0"},{"name":"param","content":"<p>Whether to use ZipArchive. Default true.</p>","types":["bool"],"variable":"$ziparchive"}]},"args":1},{"name":"pre_unzip_file","file":"wp-admin/includes/file.php","type":"filter","doc":{"description":"Filters archive unzipping to override with a custom process.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"6.4.0"},{"name":"param","content":"<p>The result of the override. True on success, otherwise WP Error. Default null.</p>","types":["null","true","\\WP_Error"],"variable":"$result"},{"name":"param","content":"<p>Full path and filename of ZIP archive.</p>","types":["string"],"variable":"$file"},{"name":"param","content":"<p>Full path on the filesystem to extract archive to.</p>","types":["string"],"variable":"$to"},{"name":"param","content":"<p>A full list of required folders that need to be created.</p>","types":["string[]"],"variable":"$needed_dirs"},{"name":"param","content":"<p>The space required to unzip the file and copy its contents, with a 10% buffer.</p>","types":["float"],"variable":"$required_space"}]},"args":5},{"name":"unzip_file","file":"wp-admin/includes/file.php","type":"filter","doc":{"description":"Filters the result of unzipping an archive.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"6.4.0"},{"name":"param","content":"<p>The result of unzipping the archive. True on success, otherwise WP_Error. Default true.</p>","types":["true","\\WP_Error"],"variable":"$result"},{"name":"param","content":"<p>Full path and filename of ZIP archive.</p>","types":["string"],"variable":"$file"},{"name":"param","content":"<p>Full path on the filesystem the archive was extracted to.</p>","types":["string"],"variable":"$to"},{"name":"param","content":"<p>A full list of required folders that were created.</p>","types":["string[]"],"variable":"$needed_dirs"},{"name":"param","content":"<p>The space required to unzip the file and copy its contents, with a 10% buffer.</p>","types":["float"],"variable":"$required_space"}]},"args":5},{"name":"unzip_file","file":"wp-admin/includes/file.php","type":"filter","doc":{"description":"This action is documented in src/wp-admin/includes/file.php","long_description":"","long_description_html":"","tags":[]},"args":5},{"name":"filesystem_method_file","file":"wp-admin/includes/file.php","type":"filter","doc":{"description":"Filters the path for a specific filesystem method class file.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.6.0"},{"name":"see","content":"","refers":"get_filesystem_method()"},{"name":"param","content":"<p>Path to the specific filesystem method class file.</p>","types":["string"],"variable":"$path"},{"name":"param","content":"<p>The filesystem method to use.</p>","types":["string"],"variable":"$method"}]},"args":2},{"name":"filesystem_method","file":"wp-admin/includes/file.php","type":"filter","doc":{"description":"Filters the filesystem method to use.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.6.0"},{"name":"param","content":"<p>Filesystem method to return.</p>","types":["string"],"variable":"$method"},{"name":"param","content":"<p>An array of connection details for the method.</p>","types":["array"],"variable":"$args"},{"name":"param","content":"<p>Full path to the directory that is tested for being writable.</p>","types":["string"],"variable":"$context"},{"name":"param","content":"<p>Whether to allow Group/World writable.</p>","types":["bool"],"variable":"$allow_relaxed_file_ownership"}]},"args":4},{"name":"request_filesystem_credentials","file":"wp-admin/includes/file.php","type":"filter","doc":{"description":"Filters the filesystem credentials.","long_description":"Returning anything other than an empty string will effectively short-circuit output of the filesystem credentials form, returning that value instead.\n A filter should return true if no filesystem credentials are required, false if they are required but have not been provided, or an array of credentials if they are required and have been provided.","long_description_html":"<p>Returning anything other than an empty string will effectively short-circuit output of the filesystem credentials form, returning that value instead.</p> <p>A filter should return true if no filesystem credentials are required, false if they are required but have not been provided, or an array of credentials if they are required and have been provided.</p>","tags":[{"name":"since","content":"2.5.0"},{"name":"since","content":"4.6.0","description":"<p>The <code>$context</code> parameter default changed from <code>false</code> to an empty string.</p>"},{"name":"param","content":"<p>Credentials to return instead. Default empty string.</p>","types":["mixed"],"variable":"$credentials"},{"name":"param","content":"<p>The URL to post the form to.</p>","types":["string"],"variable":"$form_post"},{"name":"param","content":"<p>Chosen type of filesystem.</p>","types":["string"],"variable":"$type"},{"name":"param","content":"<p>Whether the current request has failed to connect, or an error object.</p>","types":["bool","\\WP_Error"],"variable":"$error"},{"name":"param","content":"<p>Full path to the directory that is tested for being writable.</p>","types":["string"],"variable":"$context"},{"name":"param","content":"<p>Extra POST fields.</p>","types":["array"],"variable":"$extra_fields"},{"name":"param","content":"<p>Whether to allow Group/World writable.</p>","types":["bool"],"variable":"$allow_relaxed_file_ownership"}]},"args":7},{"name":"fs_ftp_connection_types","file":"wp-admin/includes/file.php","type":"filter","doc":{"description":"Filters the connection types to output to the filesystem credentials form.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.9.0"},{"name":"since","content":"4.6.0","description":"<p>The <code>$context</code> parameter default changed from <code>false</code> to an empty string.</p>"},{"name":"param","content":"<p>Types of connections.</p>","types":["string[]"],"variable":"$types"},{"name":"param","content":"<p>Credentials to connect with.</p>","types":["array"],"variable":"$credentials"},{"name":"param","content":"<p>Chosen filesystem method.</p>","types":["string"],"variable":"$type"},{"name":"param","content":"<p>Whether the current request has failed to connect, or an error object.</p>","types":["bool","\\WP_Error"],"variable":"$error"},{"name":"param","content":"<p>Full path to the directory that is tested for being writable.</p>","types":["string"],"variable":"$context"}]},"args":5},{"name":"wp_opcache_invalidate_file","file":"wp-admin/includes/file.php","type":"filter","doc":{"description":"Filters whether to invalidate a file from the opcode cache.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.5.0"},{"name":"param","content":"<p>Whether WordPress will invalidate <code>$filepath</code>. Default true.</p>","types":["bool"],"variable":"$will_invalidate"},{"name":"param","content":"<p>The path to the PHP file to invalidate.</p>","types":["string"],"variable":"$filepath"}]},"args":2},{"name":"wp_network_dashboard_widgets","file":"wp-admin/includes/dashboard.php","type":"filter","doc":{"description":"Filters the list of widgets to load for the Network Admin dashboard.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.1.0"},{"name":"param","content":"<p>An array of dashboard widget IDs.</p>","types":["string[]"],"variable":"$dashboard_widgets"}]},"args":1},{"name":"wp_user_dashboard_widgets","file":"wp-admin/includes/dashboard.php","type":"filter","doc":{"description":"Filters the list of widgets to load for the User Admin dashboard.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.1.0"},{"name":"param","content":"<p>An array of dashboard widget IDs.</p>","types":["string[]"],"variable":"$dashboard_widgets"}]},"args":1},{"name":"wp_dashboard_widgets","file":"wp-admin/includes/dashboard.php","type":"filter","doc":{"description":"Filters the list of widgets to load for the admin dashboard.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.5.0"},{"name":"param","content":"<p>An array of dashboard widget IDs.</p>","types":["string[]"],"variable":"$dashboard_widgets"}]},"args":1},{"name":"dashboard_glance_items","file":"wp-admin/includes/dashboard.php","type":"filter","doc":{"description":"Filters the array of extra elements to list in the 'At a Glance' dashboard widget.","long_description":"Prior to 3.8.0, the widget was named 'Right Now'. Each element is wrapped in list-item tags on output.","long_description_html":"<p>Prior to 3.8.0, the widget was named 'Right Now'. Each element is wrapped in list-item tags on output.</p>","tags":[{"name":"since","content":"3.8.0"},{"name":"param","content":"<p>Array of extra 'At a Glance' widget items.</p>","types":["string[]"],"variable":"$items"}]},"args":1},{"name":"privacy_on_link_title","file":"wp-admin/includes/dashboard.php","type":"filter","doc":{"description":"Filters the link title attribute for the 'Search engines discouraged' message displayed in the 'At a Glance' dashboard widget.","long_description":"Prior to 3.8.0, the widget was named 'Right Now'.","long_description_html":"<p>Prior to 3.8.0, the widget was named 'Right Now'.</p>","tags":[{"name":"since","content":"3.0.0"},{"name":"since","content":"4.5.0","description":"<p>The default for <code>$title</code> was updated to an empty string.</p>"},{"name":"param","content":"<p>Default attribute text.</p>","types":["string"],"variable":"$title"}]},"args":1},{"name":"privacy_on_link_text","file":"wp-admin/includes/dashboard.php","type":"filter","doc":{"description":"Filters the link label for the 'Search engines discouraged' message displayed in the 'At a Glance' dashboard widget.","long_description":"Prior to 3.8.0, the widget was named 'Right Now'.","long_description_html":"<p>Prior to 3.8.0, the widget was named 'Right Now'.</p>","tags":[{"name":"since","content":"3.0.0"},{"name":"param","content":"<p>Default text.</p>","types":["string"],"variable":"$content"}]},"args":1},{"name":"dashboard_recent_drafts_query_args","file":"wp-admin/includes/dashboard.php","type":"filter","doc":{"description":"Filters the post query arguments for the 'Recent Drafts' dashboard widget.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.4.0"},{"name":"param","content":"<p>The query arguments for the 'Recent Drafts' dashboard widget.</p>","types":["array"],"variable":"$query_args"}]},"args":1},{"name":"dashboard_recent_posts_query_args","file":"wp-admin/includes/dashboard.php","type":"filter","doc":{"description":"Filters the query arguments used for the Recent Posts widget.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.2.0"},{"name":"param","content":"<p>The arguments passed to WP_Query to produce the list of posts.</p>","types":["array"],"variable":"$query_args"}]},"args":1},{"name":"dashboard_primary_link","file":"wp-admin/includes/dashboard.php","type":"filter","doc":{"description":"Filters the primary link URL for the 'WordPress Events and News' dashboard widget.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.5.0"},{"name":"param","content":"<p>The widget's primary link URL.</p>","types":["string"],"variable":"$link"}]},"args":1},{"name":"dashboard_primary_feed","file":"wp-admin/includes/dashboard.php","type":"filter","doc":{"description":"Filters the primary feed URL for the 'WordPress Events and News' dashboard widget.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.3.0"},{"name":"param","content":"<p>The widget's primary feed URL.</p>","types":["string"],"variable":"$url"}]},"args":1},{"name":"dashboard_primary_title","file":"wp-admin/includes/dashboard.php","type":"filter","doc":{"description":"Filters the primary link title for the 'WordPress Events and News' dashboard widget.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.3.0"},{"name":"param","content":"<p>Title attribute for the widget's primary link.</p>","types":["string"],"variable":"$title"}]},"args":1},{"name":"dashboard_secondary_link","file":"wp-admin/includes/dashboard.php","type":"filter","doc":{"description":"Filters the secondary link URL for the 'WordPress Events and News' dashboard widget.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.3.0"},{"name":"param","content":"<p>The widget's secondary link URL.</p>","types":["string"],"variable":"$link"}]},"args":1},{"name":"dashboard_secondary_feed","file":"wp-admin/includes/dashboard.php","type":"filter","doc":{"description":"Filters the secondary feed URL for the 'WordPress Events and News' dashboard widget.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.3.0"},{"name":"param","content":"<p>The widget's secondary feed URL.</p>","types":["string"],"variable":"$url"}]},"args":1},{"name":"dashboard_secondary_title","file":"wp-admin/includes/dashboard.php","type":"filter","doc":{"description":"Filters the secondary link title for the 'WordPress Events and News' dashboard widget.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.3.0"},{"name":"param","content":"<p>Title attribute for the widget's secondary link.</p>","types":["string"],"variable":"$title"}]},"args":1},{"name":"dashboard_secondary_items","file":"wp-admin/includes/dashboard.php","type":"filter","doc":{"description":"Filters the number of secondary link items for the 'WordPress Events and News' dashboard widget.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.4.0"},{"name":"param","content":"<p>How many items to show in the secondary feed.</p>","types":["string"],"variable":"$items"}]},"args":1},{"name":"browse-happy-notice","file":"wp-admin/includes/dashboard.php","type":"filter","doc":{"description":"Filters the notice output for the 'Browse Happy' nag meta box.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.2.0"},{"name":"param","content":"<p>The notice content.</p>","types":["string"],"variable":"$notice"},{"name":"param","content":"<p>An array containing web browser information, or false on failure. See wp_check_browser_version().</p>","types":["array","false"],"variable":"$response"}]},"args":2},{"name":"install_themes_nonmenu_tabs","file":"wp-admin/includes/class-wp-theme-install-list-table.php","type":"filter","doc":{"description":"Filters tabs not associated with a menu item on the Install Themes screen.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.8.0"},{"name":"param","content":"<p>The tabs that don't have a menu item on the Install Themes screen.</p>","types":["string[]"],"variable":"$nonmenu_tabs"}]},"args":1},{"name":"install_themes_table_api_args_{$tab}","aliases":["install_themes_table_api_args_dashboard","install_themes_table_api_args_featured","install_themes_table_api_args_new","install_themes_table_api_args_search","install_themes_table_api_args_updated","install_themes_table_api_args_upload"],"file":"wp-admin/includes/class-wp-theme-install-list-table.php","type":"filter","doc":{"description":"Filters API request arguments for each Install Themes screen tab.","long_description":"The dynamic portion of the hook name, `$tab`, refers to the theme install tab.\n Possible hook names include:\n\n  - `install_themes_table_api_args_dashboard`\n  - `install_themes_table_api_args_featured`\n  - `install_themes_table_api_args_new`\n  - `install_themes_table_api_args_search`\n  - `install_themes_table_api_args_updated`\n  - `install_themes_table_api_args_upload`","long_description_html":"<p>The dynamic portion of the hook name, <code>$tab</code>, refers to the theme install tab.</p> <p>Possible hook names include:</p> <ul> <li><code>install_themes_table_api_args_dashboard</code></li> <li><code>install_themes_table_api_args_featured</code></li> <li><code>install_themes_table_api_args_new</code></li> <li><code>install_themes_table_api_args_search</code></li> <li><code>install_themes_table_api_args_updated</code></li> <li><code>install_themes_table_api_args_upload</code></li> </ul>","tags":[{"name":"since","content":"3.7.0"},{"name":"param","content":"<p>Theme install API arguments.</p>","types":["array","false"],"variable":"$args"}]},"args":1},{"name":"theme_install_actions","file":"wp-admin/includes/class-wp-theme-install-list-table.php","type":"filter","doc":{"description":"Filters the install action links for a theme in the Install Themes list table.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.4.0"},{"name":"param","content":"<p>An array of theme action links. Defaults are links to Install Now, Preview, and Details.</p>","types":["string[]"],"variable":"$actions"},{"name":"param","content":"<p>An object that contains theme data returned by the WordPress.org API.</p>","types":["\\stdClass"],"variable":"$theme"}]},"args":2},{"name":"lang_codes","file":"wp-admin/includes/ms.php","type":"filter","doc":{"description":"Filters the language codes.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"MU (3.0.0)","description":"MU (3.0.0)"},{"name":"param","content":"<p>Array of key/value pairs of language codes where key is the short version.</p>","types":["string[]"],"variable":"$lang_codes"},{"name":"param","content":"<p>A two-letter designation of the language.</p>","types":["string"],"variable":"$code"}]},"args":2},{"name":"mu_dropdown_languages","file":"wp-admin/includes/ms.php","type":"filter","doc":{"description":"Filters the languages available in the dropdown.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"MU (3.0.0)","description":"MU (3.0.0)"},{"name":"param","content":"<p>Array of HTML output for the dropdown.</p>","types":["string[]"],"variable":"$output"},{"name":"param","content":"<p>Array of available language files.</p>","types":["string[]"],"variable":"$lang_files"},{"name":"param","content":"<p>The current language code.</p>","types":["string"],"variable":"$current"}]},"args":3},{"name":"can_edit_network","file":"wp-admin/includes/ms.php","type":"filter","doc":{"description":"Filters whether this network can be edited from this page.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.1.0"},{"name":"param","content":"<p>Whether the network can be edited from this page.</p>","types":["bool"],"variable":"$result"},{"name":"param","content":"<p>The network ID to check.</p>","types":["int"],"variable":"$network_id"}]},"args":2},{"name":"network_edit_site_nav_links","file":"wp-admin/includes/ms.php","type":"filter","doc":{"description":"Filters the links that appear on site-editing network pages.","long_description":"Default links: 'site-info', 'site-users', 'site-themes', and 'site-settings'.","long_description_html":"<p>Default links: 'site-info', 'site-users', 'site-themes', and 'site-settings'.</p>","tags":[{"name":"since","content":"4.6.0"},{"name":"param","content":"<p>{ An array of link data representing individual network admin pages.</p>","types":["array"],"variable":"$links"}]},"args":1},{"name":"themes_api_args","file":"wp-admin/includes/theme.php","type":"filter","doc":{"description":"Filters arguments used to query for installer pages from the WordPress.org Themes API.","long_description":"Important: An object MUST be returned to this filter.","long_description_html":"<p>Important: An object MUST be returned to this filter.</p>","tags":[{"name":"since","content":"2.8.0"},{"name":"param","content":"<p>Arguments used to query for installer pages from the WordPress.org Themes API.</p>","types":["object"],"variable":"$args"},{"name":"param","content":"<p>Requested action. Likely values are 'theme_information', 'feature_list', or 'query_themes'.</p>","types":["string"],"variable":"$action"}]},"args":2},{"name":"themes_api","file":"wp-admin/includes/theme.php","type":"filter","doc":{"description":"Filters whether to override the WordPress.org Themes API.","long_description":"Returning a non-false value will effectively short-circuit the WordPress.org API request.\n If `$action` is 'query_themes', 'theme_information', or 'feature_list', an object MUST be passed. If `$action` is 'hot_tags', an array should be passed.","long_description_html":"<p>Returning a non-false value will effectively short-circuit the WordPress.org API request.</p> <p>If <code>$action</code> is 'query_themes', 'theme_information', or 'feature_list', an object MUST be passed. If <code>$action</code> is 'hot_tags', an array should be passed.</p>","tags":[{"name":"since","content":"2.8.0"},{"name":"param","content":"<p>Whether to override the WordPress.org Themes API. Default false.</p>","types":["false","object","array"],"variable":"$override"},{"name":"param","content":"<p>Requested action. Likely values are 'theme_information', 'feature_list', or 'query_themes'.</p>","types":["string"],"variable":"$action"},{"name":"param","content":"<p>Arguments used to query for installer pages from the Themes API.</p>","types":["object"],"variable":"$args"}]},"args":3},{"name":"themes_api_result","file":"wp-admin/includes/theme.php","type":"filter","doc":{"description":"Filters the returned WordPress.org Themes API response.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.8.0"},{"name":"param","content":"<p>WordPress.org Themes API response.</p>","types":["array","\\stdClass","\\WP_Error"],"variable":"$res"},{"name":"param","content":"<p>Requested action. Likely values are 'theme_information', 'feature_list', or 'query_themes'.</p>","types":["string"],"variable":"$action"},{"name":"param","content":"<p>Arguments used to query for installer pages from the WordPress.org Themes API.</p>","types":["\\stdClass"],"variable":"$args"}]},"args":3},{"name":"pre_prepare_themes_for_js","file":"wp-admin/includes/theme.php","type":"filter","doc":{"description":"Filters theme data before it is prepared for JavaScript.","long_description":"Passing a non-empty array will result in wp_prepare_themes_for_js() returning early with that value instead.","long_description_html":"<p>Passing a non-empty array will result in wp_prepare_themes_for_js() returning early with that value instead.</p>","tags":[{"name":"since","content":"4.2.0"},{"name":"param","content":"<p>An associative array of theme data. Default empty array.</p>","types":["array"],"variable":"$prepared_themes"},{"name":"param","content":"<p>An array of theme objects to prepare, if any.</p>","types":["\\WP_Theme[]","null"],"variable":"$themes"},{"name":"param","content":"<p>The active theme slug.</p>","types":["string"],"variable":"$current_theme"}]},"args":3},{"name":"wp_prepare_themes_for_js","file":"wp-admin/includes/theme.php","type":"filter","doc":{"description":"Filters the themes prepared for JavaScript, for themes.php.","long_description":"Could be useful for changing the order, which is by name by default.","long_description_html":"<p>Could be useful for changing the order, which is by name by default.</p>","tags":[{"name":"since","content":"3.8.0"},{"name":"param","content":"<p>Array of theme data.</p>","types":["array"],"variable":"$prepared_themes"}]},"args":1},{"name":"heartbeat_nopriv_received","file":"wp-admin/includes/ajax-actions.php","type":"filter","doc":{"description":"Filters Heartbeat Ajax response in no-privilege environments.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.6.0"},{"name":"param","content":"<p>The no-priv Heartbeat response.</p>","types":["array"],"variable":"$response"},{"name":"param","content":"<p>The $_POST data sent.</p>","types":["array"],"variable":"$data"},{"name":"param","content":"<p>The screen ID.</p>","types":["string"],"variable":"$screen_id"}]},"args":3},{"name":"heartbeat_nopriv_send","file":"wp-admin/includes/ajax-actions.php","type":"filter","doc":{"description":"Filters Heartbeat Ajax response in no-privilege environments when no data is passed.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.6.0"},{"name":"param","content":"<p>The no-priv Heartbeat response.</p>","types":["array"],"variable":"$response"},{"name":"param","content":"<p>The screen ID.</p>","types":["string"],"variable":"$screen_id"}]},"args":2},{"name":"term_search_min_chars","file":"wp-admin/includes/ajax-actions.php","type":"filter","doc":{"description":"Filters the minimum number of characters required to fire a tag search via Ajax.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.0.0"},{"name":"param","content":"<p>The minimum number of characters required. Default 2.</p>","types":["int"],"variable":"$characters"},{"name":"param","content":"<p>The taxonomy object.</p>","types":["\\WP_Taxonomy"],"variable":"$taxonomy_object"},{"name":"param","content":"<p>The search term.</p>","types":["string"],"variable":"$search"}]},"args":3},{"name":"ajax_term_search_results","file":"wp-admin/includes/ajax-actions.php","type":"filter","doc":{"description":"Filters the Ajax term search results.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"6.1.0"},{"name":"param","content":"<p>Array of term names.</p>","types":["string[]"],"variable":"$results"},{"name":"param","content":"<p>The taxonomy object.</p>","types":["\\WP_Taxonomy"],"variable":"$taxonomy_object"},{"name":"param","content":"<p>The search term.</p>","types":["string"],"variable":"$search"}]},"args":3},{"name":"wp_check_post_lock_window","file":"wp-admin/includes/ajax-actions.php","type":"filter","doc":{"description":"Filters the post lock window duration.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.3.0"},{"name":"param","content":"<p>The interval in seconds the post lock duration should last, plus 5 seconds. Default 150.</p>","types":["int"],"variable":"$interval"}]},"args":1},{"name":"ajax_query_attachments_args","file":"wp-admin/includes/ajax-actions.php","type":"filter","doc":{"description":"Filters the arguments passed to WP_Query during an Ajax call for querying attachments.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.7.0"},{"name":"see","content":"","refers":"WP_Query::parse_query()"},{"name":"param","content":"<p>An array of query variables.</p>","types":["array"],"variable":"$query"}]},"args":1},{"name":"wp_refresh_nonces","file":"wp-admin/includes/ajax-actions.php","type":"filter","doc":{"description":"Filters the nonces to send to the New/Edit Post screen.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.3.0"},{"name":"param","content":"<p>The Heartbeat response.</p>","types":["array"],"variable":"$response"},{"name":"param","content":"<p>The $_POST data sent.</p>","types":["array"],"variable":"$data"},{"name":"param","content":"<p>The screen ID.</p>","types":["string"],"variable":"$screen_id"}]},"args":3},{"name":"heartbeat_received","file":"wp-admin/includes/ajax-actions.php","type":"filter","doc":{"description":"Filters the Heartbeat response received.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.6.0"},{"name":"param","content":"<p>The Heartbeat response.</p>","types":["array"],"variable":"$response"},{"name":"param","content":"<p>The $_POST data sent.</p>","types":["array"],"variable":"$data"},{"name":"param","content":"<p>The screen ID.</p>","types":["string"],"variable":"$screen_id"}]},"args":3},{"name":"heartbeat_send","file":"wp-admin/includes/ajax-actions.php","type":"filter","doc":{"description":"Filters the Heartbeat response sent.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.6.0"},{"name":"param","content":"<p>The Heartbeat response.</p>","types":["array"],"variable":"$response"},{"name":"param","content":"<p>The screen ID.</p>","types":["string"],"variable":"$screen_id"}]},"args":2},{"name":"wp_ajax_cropped_attachment_metadata","file":"wp-admin/includes/ajax-actions.php","type":"filter","doc":{"description":"Filters the cropped image attachment metadata.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.3.0"},{"name":"see","content":"","refers":"wp_generate_attachment_metadata()"},{"name":"param","content":"<p>Attachment metadata.</p>","types":["array"],"variable":"$metadata"}]},"args":1},{"name":"wp_ajax_cropped_attachment_id","file":"wp-admin/includes/ajax-actions.php","type":"filter","doc":{"description":"Filters the attachment ID for a cropped image.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.3.0"},{"name":"param","content":"<p>The attachment ID of the cropped image.</p>","types":["int"],"variable":"$attachment_id"},{"name":"param","content":"<p>The Customizer control requesting the cropped image.</p>","types":["string"],"variable":"$context"}]},"args":2},{"name":"wp_privacy_personal_data_exporters","file":"wp-admin/includes/ajax-actions.php","type":"filter","doc":{"description":"Filters the array of exporter callbacks.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.9.6"},{"name":"param","content":"<p>{ An array of callable exporters of personal data. Default empty array.</p>","types":["array"],"variable":"$args"}]},"args":1},{"name":"wp_privacy_personal_data_export_page","file":"wp-admin/includes/ajax-actions.php","type":"filter","doc":{"description":"Filters a page of personal data exporter data. Used to build the export report.","long_description":"Allows the export response to be consumed by destinations in addition to Ajax.","long_description_html":"<p>Allows the export response to be consumed by destinations in addition to Ajax.</p>","tags":[{"name":"since","content":"4.9.6"},{"name":"param","content":"<p>The personal data for the given exporter and page number.</p>","types":["array"],"variable":"$response"},{"name":"param","content":"<p>The index of the exporter that provided this data.</p>","types":["int"],"variable":"$exporter_index"},{"name":"param","content":"<p>The email address associated with this personal data.</p>","types":["string"],"variable":"$email_address"},{"name":"param","content":"<p>The page number for this response.</p>","types":["int"],"variable":"$page"},{"name":"param","content":"<p>The privacy request post ID associated with this request.</p>","types":["int"],"variable":"$request_id"},{"name":"param","content":"<p>Whether the final results of the export should be emailed to the user.</p>","types":["bool"],"variable":"$send_as_email"},{"name":"param","content":"<p>The key (slug) of the exporter that provided this data.</p>","types":["string"],"variable":"$exporter_key"}]},"args":7},{"name":"wp_privacy_personal_data_erasers","file":"wp-admin/includes/ajax-actions.php","type":"filter","doc":{"description":"Filters the array of personal data eraser callbacks.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.9.6"},{"name":"param","content":"<p>{ An array of callable erasers of personal data. Default empty array.</p>","types":["array"],"variable":"$args"}]},"args":1},{"name":"wp_privacy_personal_data_erasure_page","file":"wp-admin/includes/ajax-actions.php","type":"filter","doc":{"description":"Filters a page of personal data eraser data.","long_description":"Allows the erasure response to be consumed by destinations in addition to Ajax.","long_description_html":"<p>Allows the erasure response to be consumed by destinations in addition to Ajax.</p>","tags":[{"name":"since","content":"4.9.6"},{"name":"param","content":"<p>{ The personal data for the given exporter and page number.</p>","types":["array"],"variable":"$response"},{"name":"param","content":"<p>The index of the eraser that provided this data.</p>","types":["int"],"variable":"$eraser_index"},{"name":"param","content":"<p>The email address associated with this personal data.</p>","types":["string"],"variable":"$email_address"},{"name":"param","content":"<p>The page number for this response.</p>","types":["int"],"variable":"$page"},{"name":"param","content":"<p>The privacy request post ID associated with this request.</p>","types":["int"],"variable":"$request_id"},{"name":"param","content":"<p>The key (slug) of the eraser that provided this data.</p>","types":["string"],"variable":"$eraser_key"}]},"args":6},{"name":"get_editable_authors","file":"wp-admin/includes/deprecated.php","type":"filter","doc":{"description":"","long_description":"","long_description_html":"","tags":[]},"args":1},{"name":"get_others_drafts","file":"wp-admin/includes/deprecated.php","type":"filter","doc":{"description":"","long_description":"","long_description_html":"","tags":[]},"args":1},{"name":"wp_create_thumbnail","file":"wp-admin/includes/deprecated.php","type":"filter","doc":{"description":"","long_description":"","long_description_html":"","tags":[]},"args":1},{"name":"automatic_updater_disabled","file":"wp-admin/includes/class-wp-automatic-updater.php","type":"filter","doc":{"description":"Filters whether to entirely disable background updates.","long_description":"There are more fine-grained filters and controls for selective disabling. This filter parallels the AUTOMATIC_UPDATER_DISABLED constant in name.\n This also disables update notification emails. That may change in the future.","long_description_html":"<p>There are more fine-grained filters and controls for selective disabling. This filter parallels the AUTOMATIC_UPDATER_DISABLED constant in name.</p> <p>This also disables update notification emails. That may change in the future.</p>","tags":[{"name":"since","content":"3.7.0"},{"name":"param","content":"<p>Whether the updater should be disabled.</p>","types":["bool"],"variable":"$disabled"}]},"args":1},{"name":"automatic_updates_is_vcs_checkout","file":"wp-admin/includes/class-wp-automatic-updater.php","type":"filter","doc":{"description":"Filters whether the automatic updater should consider a filesystem location to be potentially managed by a version control system.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.7.0"},{"name":"param","content":"<p>Whether a VCS checkout was discovered at <code>$context</code> or ABSPATH, or anywhere higher.</p>","types":["bool"],"variable":"$checkout"},{"name":"param","content":"<p>The filesystem context (a path) against which filesystem status should be checked.</p>","types":["string"],"variable":"$context"}]},"args":2},{"name":"auto_update_{$type}","aliases":["auto_update_core","auto_update_plugin","auto_update_theme","auto_update_translation"],"file":"wp-admin/includes/class-wp-automatic-updater.php","type":"filter","doc":{"description":"Filters whether to automatically update core, a plugin, a theme, or a language.","long_description":"The dynamic portion of the hook name, `$type`, refers to the type of update being checked.\n Possible hook names include:\n\n  - `auto_update_core`\n  - `auto_update_plugin`\n  - `auto_update_theme`\n  - `auto_update_translation`\n Since WordPress 3.7, minor and development versions of core, and translations have been auto-updated by default. New installs on WordPress 5.6 or higher will also auto-update major versions by default. Starting in 5.6, older sites can opt-in to major version auto-updates, and auto-updates for plugins and themes.\n See the {@see 'allow_dev_auto_core_updates'}, {@see 'allow_minor_auto_core_updates'}, and {@see 'allow_major_auto_core_updates'} filters for a more straightforward way to adjust core updates.","long_description_html":"<p>The dynamic portion of the hook name, <code>$type</code>, refers to the type of update being checked.</p> <p>Possible hook names include:</p> <ul> <li><code>auto_update_core</code></li> <li><code>auto_update_plugin</code></li> <li><code>auto_update_theme</code></li> <li><code>auto_update_translation</code></li> </ul> <p>Since WordPress 3.7, minor and development versions of core, and translations have been auto-updated by default. New installs on WordPress 5.6 or higher will also auto-update major versions by default. Starting in 5.6, older sites can opt-in to major version auto-updates, and auto-updates for plugins and themes.</p> <p>See the {@see 'allow_dev_auto_core_updates'}, {@see 'allow_minor_auto_core_updates'}, and {@see 'allow_major_auto_core_updates'} filters for a more straightforward way to adjust core updates.</p>","tags":[{"name":"since","content":"3.7.0"},{"name":"since","content":"5.5.0","description":"<p>The <code>$update</code> parameter accepts the value of null.</p>"},{"name":"param","content":"<p>Whether to update. The value of null is internally used to detect whether nothing has hooked into this filter.</p>","types":["bool","null"],"variable":"$update"},{"name":"param","content":"<p>The update offer.</p>","types":["object"],"variable":"$item"}]},"args":2},{"name":"send_core_update_notification_email","file":"wp-admin/includes/class-wp-automatic-updater.php","type":"filter","doc":{"description":"Filters whether to notify the site administrator of a new core update.","long_description":"By default, administrators are notified when the update offer received from WordPress.org sets a particular flag. This allows some discretion in if and when to notify.\n This filter is only evaluated once per release. If the same email address was already notified of the same new version, WordPress won't repeatedly email the administrator.\n This filter is also used on about.php to check if a plugin has disabled these notifications.","long_description_html":"<p>By default, administrators are notified when the update offer received from WordPress.org sets a particular flag. This allows some discretion in if and when to notify.</p> <p>This filter is only evaluated once per release. If the same email address was already notified of the same new version, WordPress won't repeatedly email the administrator.</p> <p>This filter is also used on about.php to check if a plugin has disabled these notifications.</p>","tags":[{"name":"since","content":"3.7.0"},{"name":"param","content":"<p>Whether the site administrator is notified.</p>","types":["bool"],"variable":"$notify"},{"name":"param","content":"<p>The update offer.</p>","types":["object"],"variable":"$item"}]},"args":2},{"name":"automatic_updates_send_debug_email","file":"wp-admin/includes/class-wp-automatic-updater.php","type":"filter","doc":{"description":"Filters whether to send a debugging email for each automatic background update.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.7.0"},{"name":"param","content":"<p>By default, emails are sent if the install is a development version. Return false to avoid the email.</p>","types":["bool"],"variable":"$development_version"}]},"args":1},{"name":"auto_core_update_send_email","file":"wp-admin/includes/class-wp-automatic-updater.php","type":"filter","doc":{"description":"Filters whether to send an email following an automatic background core update.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.7.0"},{"name":"param","content":"<p>Whether to send the email. Default true.</p>","types":["bool"],"variable":"$send"},{"name":"param","content":"<p>The type of email to send. Can be one of 'success', 'fail', 'critical'.</p>","types":["string"],"variable":"$type"},{"name":"param","content":"<p>The update offer that was attempted.</p>","types":["object"],"variable":"$core_update"},{"name":"param","content":"<p>The result for the core update. Can be WP_Error.</p>","types":["mixed"],"variable":"$result"}]},"args":4},{"name":"auto_core_update_email","file":"wp-admin/includes/class-wp-automatic-updater.php","type":"filter","doc":{"description":"Filters the email sent following an automatic background core update.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.7.0"},{"name":"param","content":"<p>{ Array of email arguments that will be passed to wp_mail().</p>","types":["array"],"variable":"$email"},{"name":"param","content":"<p>The type of email being sent. Can be one of 'success', 'fail', 'manual', 'critical'.</p>","types":["string"],"variable":"$type"},{"name":"param","content":"<p>The update offer that was attempted.</p>","types":["object"],"variable":"$core_update"},{"name":"param","content":"<p>The result for the core update. Can be WP_Error.</p>","types":["mixed"],"variable":"$result"}]},"args":4},{"name":"auto_plugin_update_send_email","file":"wp-admin/includes/class-wp-automatic-updater.php","type":"filter","doc":{"description":"Filters whether to send an email following an automatic background plugin update.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.5.0"},{"name":"since","content":"5.5.1","description":"<p>Added the <code>$update_results</code> parameter.</p>"},{"name":"param","content":"<p>True if plugin update notifications are enabled, false otherwise.</p>","types":["bool"],"variable":"$enabled"},{"name":"param","content":"<p>The results of plugins update tasks.</p>","types":["array"],"variable":"$update_results"}]},"args":2},{"name":"auto_theme_update_send_email","file":"wp-admin/includes/class-wp-automatic-updater.php","type":"filter","doc":{"description":"Filters whether to send an email following an automatic background theme update.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.5.0"},{"name":"since","content":"5.5.1","description":"<p>Added the <code>$update_results</code> parameter.</p>"},{"name":"param","content":"<p>True if theme update notifications are enabled, false otherwise.</p>","types":["bool"],"variable":"$enabled"},{"name":"param","content":"<p>The results of theme update tasks.</p>","types":["array"],"variable":"$update_results"}]},"args":2},{"name":"auto_plugin_theme_update_email","file":"wp-admin/includes/class-wp-automatic-updater.php","type":"filter","doc":{"description":"Filters the email sent following an automatic background update for plugins and themes.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.5.0"},{"name":"param","content":"<p>{ Array of email arguments that will be passed to wp_mail().</p>","types":["array"],"variable":"$email"},{"name":"param","content":"<p>The type of email being sent. Can be one of 'success', 'fail', 'mixed'.</p>","types":["string"],"variable":"$type"},{"name":"param","content":"<p>A list of updates that succeeded.</p>","types":["array"],"variable":"$successful_updates"},{"name":"param","content":"<p>A list of updates that failed.</p>","types":["array"],"variable":"$failed_updates"}]},"args":4},{"name":"automatic_updates_debug_email","file":"wp-admin/includes/class-wp-automatic-updater.php","type":"filter","doc":{"description":"Filters the debug email that can be sent following an automatic background core update.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.8.0"},{"name":"param","content":"<p>{ Array of email arguments that will be passed to wp_mail().</p>","types":["array"],"variable":"$email"},{"name":"param","content":"<p>The number of failures encountered while upgrading.</p>","types":["int"],"variable":"$failures"},{"name":"param","content":"<p>The results of all attempted updates.</p>","types":["mixed"],"variable":"$results"}]},"args":3},{"name":"wp_get_missing_image_subsizes","file":"wp-admin/includes/image.php","type":"filter","doc":{"description":"Filters the array of missing image sub-sizes for an uploaded image.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.3.0"},{"name":"param","content":"<p>Associative array of arrays of image sub-size information for missing image sizes, keyed by image size name.</p>","types":["array[]"],"variable":"$missing_sizes"},{"name":"param","content":"<p>The image meta data.</p>","types":["array"],"variable":"$image_meta"},{"name":"param","content":"<p>The image attachment post ID.</p>","types":["int"],"variable":"$attachment_id"}]},"args":3},{"name":"big_image_size_threshold","file":"wp-admin/includes/image.php","type":"filter","doc":{"description":"Filters the \"BIG image\" threshold value.","long_description":"If the original image width or height is above the threshold, it will be scaled down. The threshold is used as max width and max height. The scaled down image will be used as the largest available size, including the `_wp_attached_file` post meta value.\n Returning `false` from the filter callback will disable the scaling.","long_description_html":"<p>If the original image width or height is above the threshold, it will be scaled down. The threshold is used as max width and max height. The scaled down image will be used as the largest available size, including the <code>_wp_attached_file</code> post meta value.</p> <p>Returning <code>false</code> from the filter callback will disable the scaling.</p>","tags":[{"name":"since","content":"5.3.0"},{"name":"param","content":"<p>The threshold value in pixels. Default 2560.</p>","types":["int"],"variable":"$threshold"},{"name":"param","content":"<p>{ Indexed array of the image width and height in pixels.</p>","types":["array"],"variable":"$imagesize"},{"name":"param","content":"<p>Full path to the uploaded image file.</p>","types":["string"],"variable":"$file"},{"name":"param","content":"<p>Attachment post ID.</p>","types":["int"],"variable":"$attachment_id"}]},"args":4},{"name":"intermediate_image_sizes_advanced","file":"wp-admin/includes/image.php","type":"filter","doc":{"description":"Filters the image sizes automatically generated when uploading an image.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.9.0"},{"name":"since","content":"4.4.0","description":"<p>Added the <code>$image_meta</code> argument.</p>"},{"name":"since","content":"5.3.0","description":"<p>Added the <code>$attachment_id</code> argument.</p>"},{"name":"param","content":"<p>Associative array of image sizes to be created.</p>","types":["array"],"variable":"$new_sizes"},{"name":"param","content":"<p>The image meta data: width, height, file, sizes, etc.</p>","types":["array"],"variable":"$image_meta"},{"name":"param","content":"<p>The attachment post ID for the image.</p>","types":["int"],"variable":"$attachment_id"}]},"args":3},{"name":"attachment_thumbnail_args","file":"wp-admin/includes/image.php","type":"filter","doc":{"description":"Filters the parameters for the attachment thumbnail creation.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.9.0"},{"name":"param","content":"<p>An array of parameters to create the thumbnail.</p>","types":["array"],"variable":"$image_attachment"},{"name":"param","content":"<p>Current attachment metadata.</p>","types":["array"],"variable":"$metadata"},{"name":"param","content":"<p>{ Information about the newly-uploaded file.</p>","types":["array"],"variable":"$uploaded"}]},"args":3},{"name":"fallback_intermediate_image_sizes","file":"wp-admin/includes/image.php","type":"filter","doc":{"description":"Filters the image sizes generated for non-image mime types.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.7.0"},{"name":"param","content":"<p>An array of image size names.</p>","types":["string[]"],"variable":"$fallback_sizes"},{"name":"param","content":"<p>Current attachment metadata.</p>","types":["array"],"variable":"$metadata"}]},"args":2},{"name":"wp_generate_attachment_metadata","file":"wp-admin/includes/image.php","type":"filter","doc":{"description":"Filters the generated attachment meta data.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.1.0"},{"name":"since","content":"5.3.0","description":"<p>The <code>$context</code> parameter was added.</p>"},{"name":"param","content":"<p>An array of attachment meta data.</p>","types":["array"],"variable":"$metadata"},{"name":"param","content":"<p>Current attachment ID.</p>","types":["int"],"variable":"$attachment_id"},{"name":"param","content":"<p>Additional context. Can be 'create' when metadata was initially created for new attachment or 'update' when the metadata was updated.</p>","types":["string"],"variable":"$context"}]},"args":3},{"name":"wp_read_image_metadata_types","file":"wp-admin/includes/image.php","type":"filter","doc":{"description":"Filters the image types to check for exif data.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.5.0"},{"name":"param","content":"<p>Array of image types to check for exif data. Each value is usually one of the <code>IMAGETYPE_*</code> constants.</p>","types":["int[]"],"variable":"$image_types"}]},"args":1},{"name":"wp_read_image_metadata","file":"wp-admin/includes/image.php","type":"filter","doc":{"description":"Filters the array of meta data read from an image's exif data.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.5.0"},{"name":"since","content":"4.4.0","description":"<p>The <code>$iptc</code> parameter was added.</p>"},{"name":"since","content":"5.0.0","description":"<p>The <code>$exif</code> parameter was added.</p>"},{"name":"param","content":"<p>Image meta data.</p>","types":["array"],"variable":"$meta"},{"name":"param","content":"<p>Path to image file.</p>","types":["string"],"variable":"$file"},{"name":"param","content":"<p>Type of image, one of the <code>IMAGETYPE_XXX</code> constants.</p>","types":["int"],"variable":"$image_type"},{"name":"param","content":"<p>IPTC data.</p>","types":["array"],"variable":"$iptc"},{"name":"param","content":"<p>EXIF data.</p>","types":["array"],"variable":"$exif"}]},"args":5},{"name":"file_is_displayable_image","file":"wp-admin/includes/image.php","type":"filter","doc":{"description":"Filters whether the current image is displayable in the browser.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.5.0"},{"name":"param","content":"<p>Whether the image can be displayed. Default true.</p>","types":["bool"],"variable":"$result"},{"name":"param","content":"<p>Path to the image.</p>","types":["string"],"variable":"$path"}]},"args":2},{"name":"load_image_to_edit","file":"wp-admin/includes/image.php","type":"filter","doc":{"description":"Filters the current image being loaded for editing.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.9.0"},{"name":"param","content":"<p>Current image.</p>","types":["resource","\\GdImage"],"variable":"$image"},{"name":"param","content":"<p>Attachment ID.</p>","types":["int"],"variable":"$attachment_id"},{"name":"param","content":"<p>Requested image size. Can be any registered image size name, or an array of width and height values in pixels (in that order).</p>","types":["string","int[]"],"variable":"$size"}]},"args":3},{"name":"load_image_to_edit_filesystempath","file":"wp-admin/includes/image.php","type":"filter","doc":{"description":"Filters the path to an attachment's file when editing the image.","long_description":"The filter is evaluated for all image sizes except 'full'.","long_description_html":"<p>The filter is evaluated for all image sizes except 'full'.</p>","tags":[{"name":"since","content":"3.1.0"},{"name":"param","content":"<p>Path to the current image.</p>","types":["string"],"variable":"$path"},{"name":"param","content":"<p>Attachment ID.</p>","types":["int"],"variable":"$attachment_id"},{"name":"param","content":"<p>Requested image size. Can be any registered image size name, or an array of width and height values in pixels (in that order).</p>","types":["string","int[]"],"variable":"$size"}]},"args":3},{"name":"load_image_to_edit_attachmenturl","file":"wp-admin/includes/image.php","type":"filter","doc":{"description":"Filters the path to an attachment's URL when editing the image.","long_description":"The filter is only evaluated if the file isn't stored locally and `allow_url_fopen` is enabled on the server.","long_description_html":"<p>The filter is only evaluated if the file isn't stored locally and <code>allow_url_fopen</code> is enabled on the server.</p>","tags":[{"name":"since","content":"3.1.0"},{"name":"param","content":"<p>Current image URL.</p>","types":["string","false"],"variable":"$image_url"},{"name":"param","content":"<p>Attachment ID.</p>","types":["int"],"variable":"$attachment_id"},{"name":"param","content":"<p>Requested image size. Can be any registered image size name, or an array of width and height values in pixels (in that order).</p>","types":["string","int[]"],"variable":"$size"}]},"args":3},{"name":"load_image_to_edit_path","file":"wp-admin/includes/image.php","type":"filter","doc":{"description":"Filters the returned path or URL of the current image.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.9.0"},{"name":"param","content":"<p>File path or URL to current image, or false.</p>","types":["string","false"],"variable":"$filepath"},{"name":"param","content":"<p>Attachment ID.</p>","types":["int"],"variable":"$attachment_id"},{"name":"param","content":"<p>Requested image size. Can be any registered image size name, or an array of width and height values in pixels (in that order).</p>","types":["string","int[]"],"variable":"$size"}]},"args":3},{"name":"users_list_table_query_args","file":"wp-admin/includes/class-wp-users-list-table.php","type":"filter","doc":{"description":"Filters the query arguments used to retrieve users for the current users list table.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.4.0"},{"name":"param","content":"<p>Arguments passed to WP_User_Query to retrieve items for the current users list table.</p>","types":["array"],"variable":"$args"}]},"args":1},{"name":"user_row_actions","file":"wp-admin/includes/class-wp-users-list-table.php","type":"filter","doc":{"description":"Filters the action links displayed under each user in the Users list table.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.8.0"},{"name":"param","content":"<p>An array of action links to be displayed. Default 'Edit', 'Delete' for single site, and 'Edit', 'Remove' for Multisite.</p>","types":["string[]"],"variable":"$actions"},{"name":"param","content":"<p>WP_User object for the currently listed user.</p>","types":["\\WP_User"],"variable":"$user_object"}]},"args":2},{"name":"manage_users_custom_column","file":"wp-admin/includes/class-wp-users-list-table.php","type":"filter","doc":{"description":"Filters the display output of custom columns in the Users list table.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.8.0"},{"name":"param","content":"<p>Custom column output. Default empty.</p>","types":["string"],"variable":"$output"},{"name":"param","content":"<p>Column name.</p>","types":["string"],"variable":"$column_name"},{"name":"param","content":"<p>ID of the currently-listed user.</p>","types":["int"],"variable":"$user_id"}]},"args":3},{"name":"get_role_list","file":"wp-admin/includes/class-wp-users-list-table.php","type":"filter","doc":{"description":"Filters the returned array of translated role names for a user.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.4.0"},{"name":"param","content":"<p>An array of translated user role names keyed by role.</p>","types":["string[]"],"variable":"$role_list"},{"name":"param","content":"<p>A WP_User object.</p>","types":["\\WP_User"],"variable":"$user_object"}]},"args":2},{"name":"manage_{$screen->id}_columns","file":"wp-admin/includes/screen.php","type":"filter","doc":{"description":"Filters the column headers for a list table on a specific screen.","long_description":"The dynamic portion of the hook name, `$screen->id`, refers to the ID of a specific screen. For example, the screen ID for the Posts list table is edit-post, so the filter for that screen would be manage_edit-post_columns.","long_description_html":"<p>The dynamic portion of the hook name, <code>$screen-&gt;id</code>, refers to the ID of a specific screen. For example, the screen ID for the Posts list table is edit-post, so the filter for that screen would be manage_edit-post_columns.</p>","tags":[{"name":"since","content":"3.0.0"},{"name":"param","content":"<p>The column header labels keyed by column ID.</p>","types":["string[]"],"variable":"$columns"}]},"args":1},{"name":"default_hidden_columns","file":"wp-admin/includes/screen.php","type":"filter","doc":{"description":"Filters the default list of hidden columns.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.4.0"},{"name":"param","content":"<p>Array of IDs of columns hidden by default.</p>","types":["string[]"],"variable":"$hidden"},{"name":"param","content":"<p>WP_Screen object of the current screen.</p>","types":["\\WP_Screen"],"variable":"$screen"}]},"args":2},{"name":"hidden_columns","file":"wp-admin/includes/screen.php","type":"filter","doc":{"description":"Filters the list of hidden columns.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.4.0"},{"name":"since","content":"4.4.1","description":"<p>Added the <code>use_defaults</code> parameter.</p>"},{"name":"param","content":"<p>Array of IDs of hidden columns.</p>","types":["string[]"],"variable":"$hidden"},{"name":"param","content":"<p>WP_Screen object of the current screen.</p>","types":["\\WP_Screen"],"variable":"$screen"},{"name":"param","content":"<p>Whether to show the default columns.</p>","types":["bool"],"variable":"$use_defaults"}]},"args":3},{"name":"default_hidden_meta_boxes","file":"wp-admin/includes/screen.php","type":"filter","doc":{"description":"Filters the default list of hidden meta boxes.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.1.0"},{"name":"param","content":"<p>An array of IDs of meta boxes hidden by default.</p>","types":["string[]"],"variable":"$hidden"},{"name":"param","content":"<p>WP_Screen object of the current screen.</p>","types":["\\WP_Screen"],"variable":"$screen"}]},"args":2},{"name":"hidden_meta_boxes","file":"wp-admin/includes/screen.php","type":"filter","doc":{"description":"Filters the list of hidden meta boxes.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.3.0"},{"name":"param","content":"<p>An array of IDs of hidden meta boxes.</p>","types":["string[]"],"variable":"$hidden"},{"name":"param","content":"<p>WP_Screen object of the current screen.</p>","types":["\\WP_Screen"],"variable":"$screen"},{"name":"param","content":"<p>Whether to show the default meta boxes. Default true.</p>","types":["bool"],"variable":"$use_defaults"}]},"args":3},{"name":"wp_list_table_class_name","file":"wp-admin/includes/list-table.php","type":"filter","doc":{"description":"Filters the list table class to instantiate.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"6.1.0"},{"name":"param","content":"<p>The list table class to use.</p>","types":["string"],"variable":"$class_name"},{"name":"param","content":"<p>An array containing _get_list_table() arguments.</p>","types":["array"],"variable":"$args"}]},"args":2},{"name":"export_wp_filename","file":"wp-admin/includes/export.php","type":"filter","doc":{"description":"Filters the export filename.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.4.0"},{"name":"param","content":"<p>The name of the file for download.</p>","types":["string"],"variable":"$wp_filename"},{"name":"param","content":"<p>The site name.</p>","types":["string"],"variable":"$sitename"},{"name":"param","content":"<p>Today's date, formatted.</p>","types":["string"],"variable":"$date"}]},"args":3},{"name":"wxr_export_skip_termmeta","file":"wp-admin/includes/export.php","type":"filter","doc":{"description":"Filters whether to selectively skip term meta used for WXR exports.","long_description":"Returning a truthy value from the filter will skip the current meta object from being exported.","long_description_html":"<p>Returning a truthy value from the filter will skip the current meta object from being exported.</p>","tags":[{"name":"since","content":"4.6.0"},{"name":"param","content":"<p>Whether to skip the current piece of term meta. Default false.</p>","types":["bool"],"variable":"$skip"},{"name":"param","content":"<p>Current meta key.</p>","types":["string"],"variable":"$meta_key"},{"name":"param","content":"<p>Current meta object.</p>","types":["object"],"variable":"$meta"}]},"args":3},{"name":"the_title_export","file":"wp-admin/includes/export.php","type":"filter","doc":{"description":"Filters the post title used for WXR exports.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.7.0"},{"name":"param","content":"<p>Title of the current post.</p>","types":["string"],"variable":"$post_title"}]},"args":1},{"name":"the_content_export","file":"wp-admin/includes/export.php","type":"filter","doc":{"description":"Filters the post content used for WXR exports.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.5.0"},{"name":"param","content":"<p>Content of the current post.</p>","types":["string"],"variable":"$post_content"}]},"args":1},{"name":"the_excerpt_export","file":"wp-admin/includes/export.php","type":"filter","doc":{"description":"Filters the post excerpt used for WXR exports.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.6.0"},{"name":"param","content":"<p>Excerpt for the current post.</p>","types":["string"],"variable":"$post_excerpt"}]},"args":1},{"name":"wxr_export_skip_postmeta","file":"wp-admin/includes/export.php","type":"filter","doc":{"description":"Filters whether to selectively skip post meta used for WXR exports.","long_description":"Returning a truthy value from the filter will skip the current meta object from being exported.","long_description_html":"<p>Returning a truthy value from the filter will skip the current meta object from being exported.</p>","tags":[{"name":"since","content":"3.3.0"},{"name":"param","content":"<p>Whether to skip the current post meta. Default false.</p>","types":["bool"],"variable":"$skip"},{"name":"param","content":"<p>Current meta key.</p>","types":["string"],"variable":"$meta_key"},{"name":"param","content":"<p>Current meta object.</p>","types":["object"],"variable":"$meta"}]},"args":3},{"name":"wxr_export_skip_commentmeta","file":"wp-admin/includes/export.php","type":"filter","doc":{"description":"Filters whether to selectively skip comment meta used for WXR exports.","long_description":"Returning a truthy value from the filter will skip the current meta object from being exported.","long_description_html":"<p>Returning a truthy value from the filter will skip the current meta object from being exported.</p>","tags":[{"name":"since","content":"4.0.0"},{"name":"param","content":"<p>Whether to skip the current comment meta. Default false.</p>","types":["bool"],"variable":"$skip"},{"name":"param","content":"<p>Current meta key.</p>","types":["string"],"variable":"$meta_key"},{"name":"param","content":"<p>Current meta object.</p>","types":["object"],"variable":"$meta"}]},"args":3},{"name":"async_update_translation","file":"wp-admin/includes/class-language-pack-upgrader.php","type":"filter","doc":{"description":"Filters whether to asynchronously update translation for core, a plugin, or a theme.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.0.0"},{"name":"param","content":"<p>Whether to update.</p>","types":["bool"],"variable":"$update"},{"name":"param","content":"<p>The update offer.</p>","types":["object"],"variable":"$language_update"}]},"args":2},{"name":"plugins_api_args","file":"wp-admin/includes/plugin-install.php","type":"filter","doc":{"description":"Filters the WordPress.org Plugin Installation API arguments.","long_description":"Important: An object MUST be returned to this filter.","long_description_html":"<p>Important: An object MUST be returned to this filter.</p>","tags":[{"name":"since","content":"2.7.0"},{"name":"param","content":"<p>Plugin API arguments.</p>","types":["object"],"variable":"$args"},{"name":"param","content":"<p>The type of information being requested from the Plugin Installation API.</p>","types":["string"],"variable":"$action"}]},"args":2},{"name":"plugins_api","file":"wp-admin/includes/plugin-install.php","type":"filter","doc":{"description":"Filters the response for the current WordPress.org Plugin Installation API request.","long_description":"Returning a non-false value will effectively short-circuit the WordPress.org API request.\n If `$action` is 'query_plugins' or 'plugin_information', an object MUST be passed. If `$action` is 'hot_tags', an array should be passed.","long_description_html":"<p>Returning a non-false value will effectively short-circuit the WordPress.org API request.</p> <p>If <code>$action</code> is 'query_plugins' or 'plugin_information', an object MUST be passed. If <code>$action</code> is 'hot_tags', an array should be passed.</p>","tags":[{"name":"since","content":"2.7.0"},{"name":"param","content":"<p>The result object or array. Default false.</p>","types":["false","object","array"],"variable":"$result"},{"name":"param","content":"<p>The type of information being requested from the Plugin Installation API.</p>","types":["string"],"variable":"$action"},{"name":"param","content":"<p>Plugin API arguments.</p>","types":["object"],"variable":"$args"}]},"args":3},{"name":"plugins_api_result","file":"wp-admin/includes/plugin-install.php","type":"filter","doc":{"description":"Filters the Plugin Installation API response results.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.7.0"},{"name":"param","content":"<p>Response object or WP_Error.</p>","types":["object","\\WP_Error"],"variable":"$res"},{"name":"param","content":"<p>The type of information being requested from the Plugin Installation API.</p>","types":["string"],"variable":"$action"},{"name":"param","content":"<p>Plugin API arguments.</p>","types":["object"],"variable":"$args"}]},"args":3},{"name":"default_content","file":"wp-admin/includes/post.php","type":"filter","doc":{"description":"Filters the default post content initially used in the \"Write Post\" form.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"1.5.0"},{"name":"param","content":"<p>Default post content.</p>","types":["string"],"variable":"$post_content"},{"name":"param","content":"<p>Post object.</p>","types":["\\WP_Post"],"variable":"$post"}]},"args":2},{"name":"default_title","file":"wp-admin/includes/post.php","type":"filter","doc":{"description":"Filters the default post title initially used in the \"Write Post\" form.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"1.5.0"},{"name":"param","content":"<p>Default post title.</p>","types":["string"],"variable":"$post_title"},{"name":"param","content":"<p>Post object.</p>","types":["\\WP_Post"],"variable":"$post"}]},"args":2},{"name":"default_excerpt","file":"wp-admin/includes/post.php","type":"filter","doc":{"description":"Filters the default post excerpt initially used in the \"Write Post\" form.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"1.5.0"},{"name":"param","content":"<p>Default post excerpt.</p>","types":["string"],"variable":"$post_excerpt"},{"name":"param","content":"<p>Post object.</p>","types":["\\WP_Post"],"variable":"$post"}]},"args":2},{"name":"edit_{$post_type}_per_page","aliases":["edit_attachment_per_page","edit_page_per_page","edit_post_per_page"],"file":"wp-admin/includes/post.php","type":"filter","doc":{"description":"Filters the number of items per page to show for a specific 'per_page' type.","long_description":"The dynamic portion of the hook name, `$post_type`, refers to the post type.\n Possible hook names include:\n\n  - `edit_post_per_page`\n  - `edit_page_per_page`\n  - `edit_attachment_per_page`","long_description_html":"<p>The dynamic portion of the hook name, <code>$post_type</code>, refers to the post type.</p> <p>Possible hook names include:</p> <ul> <li><code>edit_post_per_page</code></li> <li><code>edit_page_per_page</code></li> <li><code>edit_attachment_per_page</code></li> </ul>","tags":[{"name":"since","content":"3.0.0"},{"name":"param","content":"<p>Number of posts to display per page for the given post type. Default 20.</p>","types":["int"],"variable":"$posts_per_page"}]},"args":1},{"name":"edit_posts_per_page","file":"wp-admin/includes/post.php","type":"filter","doc":{"description":"Filters the number of posts displayed per page when specifically listing \"posts\".","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.8.0"},{"name":"param","content":"<p>Number of posts to be displayed. Default 20.</p>","types":["int"],"variable":"$posts_per_page"},{"name":"param","content":"<p>The post type.</p>","types":["string"],"variable":"$post_type"}]},"args":2},{"name":"upload_per_page","file":"wp-admin/includes/post.php","type":"filter","doc":{"description":"Filters the number of items to list per page when listing media items.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.9.0"},{"name":"param","content":"<p>Number of media to list. Default 20.</p>","types":["int"],"variable":"$media_per_page"}]},"args":1},{"name":"postbox_classes_{$screen_id}_{$box_id}","file":"wp-admin/includes/post.php","type":"filter","doc":{"description":"Filters the postbox classes for a specific screen and box ID combo.","long_description":"The dynamic portions of the hook name, `$screen_id` and `$box_id`, refer to the screen ID and meta box ID, respectively.","long_description_html":"<p>The dynamic portions of the hook name, <code>$screen_id</code> and <code>$box_id</code>, refer to the screen ID and meta box ID, respectively.</p>","tags":[{"name":"since","content":"3.2.0"},{"name":"param","content":"<p>An array of postbox classes.</p>","types":["string[]"],"variable":"$classes"}]},"args":1},{"name":"get_sample_permalink","file":"wp-admin/includes/post.php","type":"filter","doc":{"description":"Filters the sample permalink.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.4.0"},{"name":"param","content":"<p>{ Array containing the sample permalink with placeholder for the post name, and the post name.</p>","types":["array"],"variable":"$permalink"},{"name":"param","content":"<p>Post ID.</p>","types":["int"],"variable":"$post_id"},{"name":"param","content":"<p>Post title.</p>","types":["string"],"variable":"$title"},{"name":"param","content":"<p>Post name (slug).</p>","types":["string"],"variable":"$name"},{"name":"param","content":"<p>Post object.</p>","types":["\\WP_Post"],"variable":"$post"}]},"args":5},{"name":"get_sample_permalink_html","file":"wp-admin/includes/post.php","type":"filter","doc":{"description":"Filters the sample permalink HTML markup.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.9.0"},{"name":"since","content":"4.4.0","description":"<p>Added <code>$post</code> parameter.</p>"},{"name":"param","content":"<p>Sample permalink HTML markup.</p>","types":["string"],"variable":"$return"},{"name":"param","content":"<p>Post ID.</p>","types":["int"],"variable":"$post_id"},{"name":"param","content":"<p>New sample permalink title.</p>","types":["string","null"],"variable":"$new_title"},{"name":"param","content":"<p>New sample permalink slug.</p>","types":["string","null"],"variable":"$new_slug"},{"name":"param","content":"<p>Post object.</p>","types":["\\WP_Post"],"variable":"$post"}]},"args":5},{"name":"admin_post_thumbnail_size","file":"wp-admin/includes/post.php","type":"filter","doc":{"description":"Filters the size used to display the post thumbnail image in the 'Featured image' meta box.","long_description":"Note: When a theme adds 'post-thumbnail' support, a special 'post-thumbnail' image size is registered, which differs from the 'thumbnail' image size managed via the Settings > Media screen.","long_description_html":"<p>Note: When a theme adds 'post-thumbnail' support, a special 'post-thumbnail' image size is registered, which differs from the 'thumbnail' image size managed via the Settings &gt; Media screen.</p>","tags":[{"name":"since","content":"4.4.0"},{"name":"param","content":"<p>Requested image size. Can be any registered image size name, or an array of width and height values in pixels (in that order).</p>","types":["string","int[]"],"variable":"$size"},{"name":"param","content":"<p>Post thumbnail attachment ID.</p>","types":["int"],"variable":"$thumbnail_id"},{"name":"param","content":"<p>The post object associated with the thumbnail.</p>","types":["\\WP_Post"],"variable":"$post"}]},"args":3},{"name":"admin_post_thumbnail_html","file":"wp-admin/includes/post.php","type":"filter","doc":{"description":"Filters the admin post thumbnail HTML markup to return.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.9.0"},{"name":"since","content":"3.5.0","description":"<p>Added the <code>$post_id</code> parameter.</p>"},{"name":"since","content":"4.6.0","description":"<p>Added the <code>$thumbnail_id</code> parameter.</p>"},{"name":"param","content":"<p>Admin post thumbnail HTML markup.</p>","types":["string"],"variable":"$content"},{"name":"param","content":"<p>Post ID.</p>","types":["int"],"variable":"$post_id"},{"name":"param","content":"<p>Thumbnail attachment ID, or null if there isn't one.</p>","types":["int","null"],"variable":"$thumbnail_id"}]},"args":3},{"name":"show_post_locked_dialog","file":"wp-admin/includes/post.php","type":"filter","doc":{"description":"Filters whether to show the post locked dialog.","long_description":"Returning false from the filter will prevent the dialog from being displayed.","long_description_html":"<p>Returning false from the filter will prevent the dialog from being displayed.</p>","tags":[{"name":"since","content":"3.6.0"},{"name":"param","content":"<p>Whether to display the dialog. Default true.</p>","types":["bool"],"variable":"$display"},{"name":"param","content":"<p>Post object.</p>","types":["\\WP_Post"],"variable":"$post"},{"name":"param","content":"<p>The user with the lock for the post.</p>","types":["\\WP_User"],"variable":"$user"}]},"args":3},{"name":"override_post_lock","file":"wp-admin/includes/post.php","type":"filter","doc":{"description":"Filters whether to allow the post lock to be overridden.","long_description":"Returning false from the filter will disable the ability to override the post lock.","long_description_html":"<p>Returning false from the filter will disable the ability to override the post lock.</p>","tags":[{"name":"since","content":"3.6.0"},{"name":"param","content":"<p>Whether to allow the post lock to be overridden. Default true.</p>","types":["bool"],"variable":"$override"},{"name":"param","content":"<p>Post object.</p>","types":["\\WP_Post"],"variable":"$post"},{"name":"param","content":"<p>The user with the lock for the post.</p>","types":["\\WP_User"],"variable":"$user"}]},"args":3},{"name":"redirect_post_location","file":"wp-admin/includes/post.php","type":"filter","doc":{"description":"Filters the post redirect destination URL.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.9.0"},{"name":"param","content":"<p>The destination URL.</p>","types":["string"],"variable":"$location"},{"name":"param","content":"<p>The post ID.</p>","types":["int"],"variable":"$post_id"}]},"args":2},{"name":"filter_block_editor_meta_boxes","file":"wp-admin/includes/post.php","type":"filter","doc":{"description":"Fires right before the meta boxes are rendered.","long_description":"This allows for the filtering of meta box data, that should already be present by this point. Do not use as a means of adding meta box data.","long_description_html":"<p>This allows for the filtering of meta box data, that should already be present by this point. Do not use as a means of adding meta box data.</p>","tags":[{"name":"since","content":"5.0.0"},{"name":"param","content":"<p>Global meta box state.</p>","types":["array"],"variable":"$wp_meta_boxes"}]},"args":1},{"name":"edit_tags_per_page","file":"wp-admin/includes/class-wp-terms-list-table.php","type":"filter","doc":{"description":"Filters the number of terms displayed per page for the Tags list table.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.8.0"},{"name":"param","content":"<p>Number of tags to be displayed. Default 20.</p>","types":["int"],"variable":"$tags_per_page"}]},"args":1},{"name":"edit_categories_per_page","file":"wp-admin/includes/class-wp-terms-list-table.php","type":"filter","doc":{"description":"Filters the number of terms displayed per page for the Categories list table.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.8.0"},{"name":"param","content":"<p>Number of categories to be displayed. Default 20.</p>","types":["int"],"variable":"$tags_per_page"}]},"args":1},{"name":"term_name","file":"wp-admin/includes/class-wp-terms-list-table.php","type":"filter","doc":{"description":"Filters display of the term name in the terms list table.","long_description":"The default output may include padding due to the term's current level in the term hierarchy.","long_description_html":"<p>The default output may include padding due to the term's current level in the term hierarchy.</p>","tags":[{"name":"since","content":"2.5.0"},{"name":"see","content":"","refers":"WP_Terms_List_Table::column_name()"},{"name":"param","content":"<p>The term name, padded if not top-level.</p>","types":["string"],"variable":"$pad_tag_name"},{"name":"param","content":"<p>Term object.</p>","types":["\\WP_Term"],"variable":"$tag"}]},"args":2},{"name":"quick_edit_enabled_for_taxonomy","file":"wp-admin/includes/class-wp-terms-list-table.php","type":"filter","doc":{"description":"Filters whether Quick Edit should be enabled for the given taxonomy.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"6.4.0"},{"name":"param","content":"<p>Whether to enable the Quick Edit functionality. Default true.</p>","types":["bool"],"variable":"$enable"},{"name":"param","content":"<p>Taxonomy name.</p>","types":["string"],"variable":"$taxonomy"}]},"args":2},{"name":"tag_row_actions","file":"wp-admin/includes/class-wp-terms-list-table.php","type":"filter","doc":{"description":"Filters the action links displayed for each term in the Tags list table.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.8.0"},{"name":"since","content":"3.0.0","description":"<p>Deprecated in favor of {@see '{$taxonomy}_row_actions'} filter.</p>"},{"name":"since","content":"5.4.2","description":"<p>Restored (un-deprecated).</p>"},{"name":"param","content":"<p>An array of action links to be displayed. Default 'Edit', 'Quick Edit', 'Delete', and 'View'.</p>","types":["string[]"],"variable":"$actions"},{"name":"param","content":"<p>Term object.</p>","types":["\\WP_Term"],"variable":"$tag"}]},"args":2},{"name":"{$taxonomy}_row_actions","aliases":["category_row_actions","post_tag_row_actions"],"file":"wp-admin/includes/class-wp-terms-list-table.php","type":"filter","doc":{"description":"Filters the action links displayed for each term in the terms list table.","long_description":"The dynamic portion of the hook name, `$taxonomy`, refers to the taxonomy slug.\n Possible hook names include:\n\n  - `category_row_actions`\n  - `post_tag_row_actions`","long_description_html":"<p>The dynamic portion of the hook name, <code>$taxonomy</code>, refers to the taxonomy slug.</p> <p>Possible hook names include:</p> <ul> <li><code>category_row_actions</code></li> <li><code>post_tag_row_actions</code></li> </ul>","tags":[{"name":"since","content":"3.0.0"},{"name":"param","content":"<p>An array of action links to be displayed. Default 'Edit', 'Quick Edit', 'Delete', and 'View'.</p>","types":["string[]"],"variable":"$actions"},{"name":"param","content":"<p>Term object.</p>","types":["\\WP_Term"],"variable":"$tag"}]},"args":2},{"name":"manage_{$this->screen->taxonomy}_custom_column","aliases":["manage_category_custom_column","manage_post_tag_custom_column"],"file":"wp-admin/includes/class-wp-terms-list-table.php","type":"filter","doc":{"description":"Filters the displayed columns in the terms list table.","long_description":"The dynamic portion of the hook name, `$this->screen->taxonomy`, refers to the slug of the current taxonomy.\n Possible hook names include:\n\n  - `manage_category_custom_column`\n  - `manage_post_tag_custom_column`","long_description_html":"<p>The dynamic portion of the hook name, <code>$this-&gt;screen-&gt;taxonomy</code>, refers to the slug of the current taxonomy.</p> <p>Possible hook names include:</p> <ul> <li><code>manage_category_custom_column</code></li> <li><code>manage_post_tag_custom_column</code></li> </ul>","tags":[{"name":"since","content":"2.8.0"},{"name":"param","content":"<p>Custom column output. Default empty.</p>","types":["string"],"variable":"$string"},{"name":"param","content":"<p>Name of the column.</p>","types":["string"],"variable":"$column_name"},{"name":"param","content":"<p>Term ID.</p>","types":["int"],"variable":"$term_id"}]},"args":3},{"name":"screen_layout_columns","file":"wp-admin/includes/class-wp-screen.php","type":"filter","doc":{"description":"Filters the array of screen layout columns.","long_description":"This hook provides back-compat for plugins using the back-compat Filters instead of add_screen_option().","long_description_html":"<p>This hook provides back-compat for plugins using the back-compat Filters instead of add_screen_option().</p>","tags":[{"name":"since","content":"2.8.0"},{"name":"param","content":"<p>Empty array.</p>","types":["array"],"variable":"$empty_columns"},{"name":"param","content":"<p>Screen ID.</p>","types":["string"],"variable":"$screen_id"},{"name":"param","content":"<p>Current WP_Screen instance.</p>","types":["\\WP_Screen"],"variable":"$screen"}]},"args":3},{"name":"screen_settings","file":"wp-admin/includes/class-wp-screen.php","type":"filter","doc":{"description":"Filters the screen settings text displayed in the Screen Options tab.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.0.0"},{"name":"param","content":"<p>Screen settings.</p>","types":["string"],"variable":"$screen_settings"},{"name":"param","content":"<p>WP_Screen object.</p>","types":["\\WP_Screen"],"variable":"$screen"}]},"args":2},{"name":"screen_options_show_screen","file":"wp-admin/includes/class-wp-screen.php","type":"filter","doc":{"description":"Filters whether to show the Screen Options tab.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.2.0"},{"name":"param","content":"<p>Whether to show Screen Options tab. Default true.</p>","types":["bool"],"variable":"$show_screen"},{"name":"param","content":"<p>Current WP_Screen instance.</p>","types":["\\WP_Screen"],"variable":"$screen"}]},"args":2},{"name":"screen_options_show_submit","file":"wp-admin/includes/class-wp-screen.php","type":"filter","doc":{"description":"Filters whether to show the Screen Options submit button.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.4.0"},{"name":"param","content":"<p>Whether to show Screen Options submit button. Default false.</p>","types":["bool"],"variable":"$show_button"},{"name":"param","content":"<p>Current WP_Screen instance.</p>","types":["\\WP_Screen"],"variable":"$screen"}]},"args":2},{"name":"view_mode_post_types","file":"wp-admin/includes/class-wp-screen.php","type":"filter","doc":{"description":"Filters the post types that have different view mode options.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.4.0"},{"name":"param","content":"<p>Array of post types that can change view modes. Default post types with show_ui on.</p>","types":["string[]"],"variable":"$view_mode_post_types"}]},"args":1},{"name":"post_edit_category_parent_dropdown_args","file":"wp-admin/includes/meta-boxes.php","type":"filter","doc":{"description":"Filters the arguments for the taxonomy parent dropdown on the Post Edit page.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.4.0"},{"name":"param","content":"<p>{ Optional. Array of arguments to generate parent dropdown.</p>","types":["array"],"variable":"$parent_dropdown_args"}]},"args":1},{"name":"page_attributes_dropdown_pages_args","file":"wp-admin/includes/meta-boxes.php","type":"filter","doc":{"description":"Filters the arguments used to generate a Pages drop-down element.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.3.0"},{"name":"see","content":"","refers":"wp_dropdown_pages()"},{"name":"param","content":"<p>Array of arguments used to generate the pages drop-down.</p>","types":["array"],"variable":"$dropdown_args"},{"name":"param","content":"<p>The current post.</p>","types":["\\WP_Post"],"variable":"$post"}]},"args":2},{"name":"default_page_template_title","file":"wp-admin/includes/meta-boxes.php","type":"filter","doc":{"description":"Filters the title of the default page template displayed in the drop-down.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.1.0"},{"name":"param","content":"<p>The display value for the default page template title.</p>","types":["string"],"variable":"$label"},{"name":"param","content":"<p>Where the option label is displayed. Possible values include 'meta-box' or 'quick-edit'.</p>","types":["string"],"variable":"$context"}]},"args":2},{"name":"wp_privacy_personal_data_email_to","file":"wp-admin/includes/privacy-tools.php","type":"filter","doc":{"description":"Filters the recipient of the personal data export email notification.","long_description":"Should be used with great caution to avoid sending the data export link to wrong emails.","long_description_html":"<p>Should be used with great caution to avoid sending the data export link to wrong emails.</p>","tags":[{"name":"since","content":"5.3.0"},{"name":"param","content":"<p>The email address of the notification recipient.</p>","types":["string"],"variable":"$request_email"},{"name":"param","content":"<p>The request that is initiating the notification.</p>","types":["\\WP_User_Request"],"variable":"$request"}]},"args":2},{"name":"wp_privacy_personal_data_email_subject","file":"wp-admin/includes/privacy-tools.php","type":"filter","doc":{"description":"Filters the subject of the email sent when an export request is completed.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.3.0"},{"name":"param","content":"<p>The email subject.</p>","types":["string"],"variable":"$subject"},{"name":"param","content":"<p>The name of the site.</p>","types":["string"],"variable":"$sitename"},{"name":"param","content":"<p>{ Data relating to the account action email.</p>","types":["array"],"variable":"$email_data"}]},"args":3},{"name":"wp_privacy_personal_data_email_content","file":"wp-admin/includes/privacy-tools.php","type":"filter","doc":{"description":"Filters the text of the email sent with a personal data export file.","long_description":"The following strings have a special meaning and will get replaced dynamically: ###EXPIRATION###         The date when the URL will be automatically deleted. ###LINK###               URL of the personal data export file for the user. ###SITENAME###           The name of the site. ###SITEURL###            The URL to the site.","long_description_html":"<p>The following strings have a special meaning and will get replaced dynamically:</p> <h3>EXPIRATION###         The date when the URL will be automatically deleted.</h3> <h3>LINK###               URL of the personal data export file for the user.</h3> <h3>SITENAME###           The name of the site.</h3> <h3>SITEURL###            The URL to the site.</h3>","tags":[{"name":"since","content":"4.9.6"},{"name":"since","content":"5.3.0","description":"<p>Introduced the <code>$email_data</code> array.</p>"},{"name":"param","content":"<p>Text in the email.</p>","types":["string"],"variable":"$email_text"},{"name":"param","content":"<p>The request ID for this personal data export.</p>","types":["int"],"variable":"$request_id"},{"name":"param","content":"<p>{ Data relating to the account action email.</p>","types":["array"],"variable":"$email_data"}]},"args":3},{"name":"wp_privacy_personal_data_email_headers","file":"wp-admin/includes/privacy-tools.php","type":"filter","doc":{"description":"Filters the headers of the email sent with a personal data export file.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.4.0"},{"name":"param","content":"<p>The email headers.</p>","types":["string","array"],"variable":"$headers"},{"name":"param","content":"<p>The email subject.</p>","types":["string"],"variable":"$subject"},{"name":"param","content":"<p>The email content.</p>","types":["string"],"variable":"$content"},{"name":"param","content":"<p>The request ID.</p>","types":["int"],"variable":"$request_id"},{"name":"param","content":"<p>{ Data relating to the account action email.</p>","types":["array"],"variable":"$email_data"}]},"args":5},{"name":"update_right_now_text","file":"wp-admin/includes/update.php","type":"filter","doc":{"description":"Filters the text displayed in the 'At a Glance' dashboard widget.","long_description":"Prior to 3.8.0, the widget was named 'Right Now'.","long_description_html":"<p>Prior to 3.8.0, the widget was named 'Right Now'.</p>","tags":[{"name":"since","content":"4.4.0"},{"name":"param","content":"<p>Default text.</p>","types":["string"],"variable":"$content"}]},"args":1},{"name":"plugins_auto_update_enabled","file":"wp-admin/includes/update.php","type":"filter","doc":{"description":"Filters whether plugins auto-update is enabled.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.5.0"},{"name":"param","content":"<p>True if plugins auto-update is enabled, false otherwise.</p>","types":["bool"],"variable":"$enabled"}]},"args":1},{"name":"themes_auto_update_enabled","file":"wp-admin/includes/update.php","type":"filter","doc":{"description":"Filters whether themes auto-update is enabled.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.5.0"},{"name":"param","content":"<p>True if themes auto-update is enabled, false otherwise.</p>","types":["bool"],"variable":"$enabled"}]},"args":1},{"name":"upgrader_pre_download","file":"wp-admin/includes/class-wp-upgrader.php","type":"filter","doc":{"description":"Filters whether to return the package.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.7.0"},{"name":"since","content":"5.5.0","description":"<p>Added the <code>$hook_extra</code> parameter.</p>"},{"name":"param","content":"<p>Whether to bail without returning the package. Default false.</p>","types":["bool"],"variable":"$reply"},{"name":"param","content":"<p>The package file name.</p>","types":["string"],"variable":"$package"},{"name":"param","content":"<p>The WP_Upgrader instance.</p>","types":["\\WP_Upgrader"],"variable":"$upgrader"},{"name":"param","content":"<p>Extra arguments passed to hooked filters.</p>","types":["array"],"variable":"$hook_extra"}]},"args":4},{"name":"upgrader_pre_install","file":"wp-admin/includes/class-wp-upgrader.php","type":"filter","doc":{"description":"Filters the installation response before the installation has started.","long_description":"Returning a value that could be evaluated as a `WP_Error` will effectively short-circuit the installation, returning that value instead.","long_description_html":"<p>Returning a value that could be evaluated as a <code>WP_Error</code> will effectively short-circuit the installation, returning that value instead.</p>","tags":[{"name":"since","content":"2.8.0"},{"name":"param","content":"<p>Installation response.</p>","types":["bool","\\WP_Error"],"variable":"$response"},{"name":"param","content":"<p>Extra arguments passed to hooked filters.</p>","types":["array"],"variable":"$hook_extra"}]},"args":2},{"name":"upgrader_source_selection","file":"wp-admin/includes/class-wp-upgrader.php","type":"filter","doc":{"description":"Filters the source file location for the upgrade package.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.8.0"},{"name":"since","content":"4.4.0","description":"<p>The $hook_extra parameter became available.</p>"},{"name":"param","content":"<p>File source location.</p>","types":["string"],"variable":"$source"},{"name":"param","content":"<p>Remote file source location.</p>","types":["string"],"variable":"$remote_source"},{"name":"param","content":"<p>WP_Upgrader instance.</p>","types":["\\WP_Upgrader"],"variable":"$upgrader"},{"name":"param","content":"<p>Extra arguments passed to hooked filters.</p>","types":["array"],"variable":"$hook_extra"}]},"args":4},{"name":"upgrader_clear_destination","file":"wp-admin/includes/class-wp-upgrader.php","type":"filter","doc":{"description":"Filters whether the upgrader cleared the destination.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.8.0"},{"name":"param","content":"<p>Whether the destination was cleared. True upon success, WP_Error on failure.</p>","types":["true","\\WP_Error"],"variable":"$removed"},{"name":"param","content":"<p>The local package destination.</p>","types":["string"],"variable":"$local_destination"},{"name":"param","content":"<p>The remote package destination.</p>","types":["string"],"variable":"$remote_destination"},{"name":"param","content":"<p>Extra arguments passed to hooked filters.</p>","types":["array"],"variable":"$hook_extra"}]},"args":4},{"name":"upgrader_post_install","file":"wp-admin/includes/class-wp-upgrader.php","type":"filter","doc":{"description":"Filters the installation response after the installation has finished.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.8.0"},{"name":"param","content":"<p>Installation response.</p>","types":["bool"],"variable":"$response"},{"name":"param","content":"<p>Extra arguments passed to hooked filters.</p>","types":["array"],"variable":"$hook_extra"},{"name":"param","content":"<p>Installation result data.</p>","types":["array"],"variable":"$result"}]},"args":3},{"name":"upgrader_package_options","file":"wp-admin/includes/class-wp-upgrader.php","type":"filter","doc":{"description":"Filters the package options before running an update.","long_description":"See also {@see 'upgrader_process_complete'}.","long_description_html":"<p>See also {@see 'upgrader_process_complete'}.</p>","tags":[{"name":"since","content":"4.3.0"},{"name":"param","content":"<p>{ Options used by the upgrader.</p>","types":["array"],"variable":"$options"}]},"args":1},{"name":"upgrader_install_package_result","file":"wp-admin/includes/class-wp-upgrader.php","type":"filter","doc":{"description":"Filters the result of WP_Upgrader::install_package().","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.7.0"},{"name":"param","content":"<p>Result from WP_Upgrader::install_package().</p>","types":["array","\\WP_Error"],"variable":"$result"},{"name":"param","content":"<p>Extra arguments passed to hooked filters.</p>","types":["array"],"variable":"$hook_extra"}]},"args":2},{"name":"all_themes","file":"wp-admin/includes/class-wp-ms-themes-list-table.php","type":"filter","doc":{"description":"Filters the full array of WP_Theme objects to list in the Multisite themes list table.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.1.0"},{"name":"param","content":"<p>Array of WP_Theme objects to display in the list table.</p>","types":["\\WP_Theme[]"],"variable":"$all"}]},"args":1},{"name":"theme_action_links","file":"wp-admin/includes/class-wp-ms-themes-list-table.php","type":"filter","doc":{"description":"Filters the action links displayed for each theme in the Multisite themes list table.","long_description":"The action links displayed are determined by the theme's status, and which Multisite themes list table is being displayed - the Network themes list table (themes.php), which displays all installed themes, or the Site themes list table (site-themes.php), which displays the non-network enabled themes when editing a site in the Network admin.\n The default action links for the Network themes list table include 'Network Enable', 'Network Disable', and 'Delete'.\n The default action links for the Site themes list table include 'Enable', and 'Disable'.","long_description_html":"<p>The action links displayed are determined by the theme's status, and which Multisite themes list table is being displayed - the Network themes list table (themes.php), which displays all installed themes, or the Site themes list table (site-themes.php), which displays the non-network enabled themes when editing a site in the Network admin.</p> <p>The default action links for the Network themes list table include 'Network Enable', 'Network Disable', and 'Delete'.</p> <p>The default action links for the Site themes list table include 'Enable', and 'Disable'.</p>","tags":[{"name":"since","content":"2.8.0"},{"name":"param","content":"<p>An array of action links.</p>","types":["string[]"],"variable":"$actions"},{"name":"param","content":"<p>The current WP_Theme object.</p>","types":["\\WP_Theme"],"variable":"$theme"},{"name":"param","content":"<p>Status of the theme, one of 'all', 'enabled', or 'disabled'.</p>","types":["string"],"variable":"$context"}]},"args":3},{"name":"theme_action_links_{$stylesheet}","file":"wp-admin/includes/class-wp-ms-themes-list-table.php","type":"filter","doc":{"description":"Filters the action links of a specific theme in the Multisite themes list table.","long_description":"The dynamic portion of the hook name, `$stylesheet`, refers to the directory name of the theme, which in most cases is synonymous with the template name.","long_description_html":"<p>The dynamic portion of the hook name, <code>$stylesheet</code>, refers to the directory name of the theme, which in most cases is synonymous with the template name.</p>","tags":[{"name":"since","content":"3.1.0"},{"name":"param","content":"<p>An array of action links.</p>","types":["string[]"],"variable":"$actions"},{"name":"param","content":"<p>The current WP_Theme object.</p>","types":["\\WP_Theme"],"variable":"$theme"},{"name":"param","content":"<p>Status of the theme, one of 'all', 'enabled', or 'disabled'.</p>","types":["string"],"variable":"$context"}]},"args":3},{"name":"theme_row_meta","file":"wp-admin/includes/class-wp-ms-themes-list-table.php","type":"filter","doc":{"description":"Filters the array of row meta for each theme in the Multisite themes list table.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.1.0"},{"name":"param","content":"<p>An array of the theme's metadata, including the version, author, and theme URI.</p>","types":["string[]"],"variable":"$theme_meta"},{"name":"param","content":"<p>Directory name of the theme.</p>","types":["string"],"variable":"$stylesheet"},{"name":"param","content":"<p>WP_Theme object.</p>","types":["\\WP_Theme"],"variable":"$theme"},{"name":"param","content":"<p>Status of the theme.</p>","types":["string"],"variable":"$status"}]},"args":4},{"name":"theme_auto_update_setting_html","file":"wp-admin/includes/class-wp-ms-themes-list-table.php","type":"filter","doc":{"description":"Filters the HTML of the auto-updates setting for each theme in the Themes list table.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.5.0"},{"name":"param","content":"<p>The HTML for theme's auto-update setting, including toggle auto-update action link and time to next update.</p>","types":["string"],"variable":"$html"},{"name":"param","content":"<p>Directory name of the theme.</p>","types":["string"],"variable":"$stylesheet"},{"name":"param","content":"<p>WP_Theme object.</p>","types":["\\WP_Theme"],"variable":"$theme"}]},"args":3},{"name":"update_theme_complete_actions","file":"wp-admin/includes/class-theme-upgrader-skin.php","type":"filter","doc":{"description":"Filters the list of action links available following a single theme update.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.8.0"},{"name":"param","content":"<p>Array of theme action links.</p>","types":["string[]"],"variable":"$update_actions"},{"name":"param","content":"<p>Theme directory name.</p>","types":["string"],"variable":"$theme"}]},"args":2},{"name":"term_updated_messages","file":"wp-admin/includes/edit-tag-messages.php","type":"filter","doc":{"description":"Filters the messages displayed when a tag is updated.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.7.0"},{"name":"param","content":"<p>Array of arrays of messages to be displayed, keyed by taxonomy name.</p>","types":["array[]"],"variable":"$messages"}]},"args":1},{"name":"all_plugins","file":"wp-admin/includes/class-wp-plugins-list-table.php","type":"filter","doc":{"description":"Filters the full array of plugins to list in the Plugins list table.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.0.0"},{"name":"see","content":"","refers":"get_plugins()"},{"name":"param","content":"<p>An array of plugins to display in the list table.</p>","types":["array"],"variable":"$all_plugins"}]},"args":1},{"name":"show_advanced_plugins","file":"wp-admin/includes/class-wp-plugins-list-table.php","type":"filter","doc":{"description":"Filters whether to display the advanced plugins list table.","long_description":"There are two types of advanced plugins - must-use and drop-ins - which can be used in a single site or Multisite network.\n The $type parameter allows you to differentiate between the type of advanced plugins to filter the display of. Contexts include 'mustuse' and 'dropins'.","long_description_html":"<p>There are two types of advanced plugins - must-use and drop-ins - which can be used in a single site or Multisite network.</p> <p>The $type parameter allows you to differentiate between the type of advanced plugins to filter the display of. Contexts include 'mustuse' and 'dropins'.</p>","tags":[{"name":"since","content":"3.0.0"},{"name":"param","content":"<p>Whether to show the advanced plugins for the specified plugin type. Default true.</p>","types":["bool"],"variable":"$show"},{"name":"param","content":"<p>The plugin type. Accepts 'mustuse', 'dropins'.</p>","types":["string"],"variable":"$type"}]},"args":2},{"name":"show_advanced_plugins","file":"wp-admin/includes/class-wp-plugins-list-table.php","type":"filter","doc":{"description":"This action is documented in wp-admin/includes/class-wp-plugins-list-table.php","long_description":"","long_description_html":"","tags":[]},"args":2},{"name":"show_network_active_plugins","file":"wp-admin/includes/class-wp-plugins-list-table.php","type":"filter","doc":{"description":"Filters whether to display network-active plugins alongside plugins active for the current site.","long_description":"This also controls the display of inactive network-only plugins (plugins with \"Network: true\" in the plugin header).\n Plugins cannot be network-activated or network-deactivated from this screen.","long_description_html":"<p>This also controls the display of inactive network-only plugins (plugins with &quot;Network: true&quot; in the plugin header).</p> <p>Plugins cannot be network-activated or network-deactivated from this screen.</p>","tags":[{"name":"since","content":"4.4.0"},{"name":"param","content":"<p>Whether to show network-active plugins. Default is whether the current user can manage network plugins (ie. a Super Admin).</p>","types":["bool"],"variable":"$show"}]},"args":1},{"name":"plugins_list","file":"wp-admin/includes/class-wp-plugins-list-table.php","type":"filter","doc":{"description":"Filters the array of plugins for the list table.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"6.3.0"},{"name":"param","content":"<p>An array of arrays of plugin data, keyed by context.</p>","types":["array[]"],"variable":"$plugins"}]},"args":1},{"name":"network_admin_plugin_action_links","file":"wp-admin/includes/class-wp-plugins-list-table.php","type":"filter","doc":{"description":"Filters the action links displayed for each plugin in the Network Admin Plugins list table.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.1.0"},{"name":"param","content":"<p>An array of plugin action links. By default this can include 'activate', 'deactivate', and 'delete'.</p>","types":["string[]"],"variable":"$actions"},{"name":"param","content":"<p>Path to the plugin file relative to the plugins directory.</p>","types":["string"],"variable":"$plugin_file"},{"name":"param","content":"<p>An array of plugin data. See get_plugin_data() and the {@see 'plugin_row_meta'} filter for the list of possible values.</p>","types":["array"],"variable":"$plugin_data"},{"name":"param","content":"<p>The plugin context. By default this can include 'all', 'active', 'inactive', 'recently_activated', 'upgrade', 'mustuse', 'dropins', and 'search'.</p>","types":["string"],"variable":"$context"}]},"args":4},{"name":"network_admin_plugin_action_links_{$plugin_file}","file":"wp-admin/includes/class-wp-plugins-list-table.php","type":"filter","doc":{"description":"Filters the list of action links displayed for a specific plugin in the Network Admin Plugins list table.","long_description":"The dynamic portion of the hook name, `$plugin_file`, refers to the path to the plugin file, relative to the plugins directory.","long_description_html":"<p>The dynamic portion of the hook name, <code>$plugin_file</code>, refers to the path to the plugin file, relative to the plugins directory.</p>","tags":[{"name":"since","content":"3.1.0"},{"name":"param","content":"<p>An array of plugin action links. By default this can include 'activate', 'deactivate', and 'delete'.</p>","types":["string[]"],"variable":"$actions"},{"name":"param","content":"<p>Path to the plugin file relative to the plugins directory.</p>","types":["string"],"variable":"$plugin_file"},{"name":"param","content":"<p>An array of plugin data. See get_plugin_data() and the {@see 'plugin_row_meta'} filter for the list of possible values.</p>","types":["array"],"variable":"$plugin_data"},{"name":"param","content":"<p>The plugin context. By default this can include 'all', 'active', 'inactive', 'recently_activated', 'upgrade', 'mustuse', 'dropins', and 'search'.</p>","types":["string"],"variable":"$context"}]},"args":4},{"name":"plugin_action_links","file":"wp-admin/includes/class-wp-plugins-list-table.php","type":"filter","doc":{"description":"Filters the action links displayed for each plugin in the Plugins list table.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.5.0"},{"name":"since","content":"2.6.0","description":"<p>The <code>$context</code> parameter was added.</p>"},{"name":"since","content":"4.9.0","description":"<p>The 'Edit' link was removed from the list of action links.</p>"},{"name":"param","content":"<p>An array of plugin action links. By default this can include 'activate', 'deactivate', and 'delete'. With Multisite active this can also include 'network_active' and 'network_only' items.</p>","types":["string[]"],"variable":"$actions"},{"name":"param","content":"<p>Path to the plugin file relative to the plugins directory.</p>","types":["string"],"variable":"$plugin_file"},{"name":"param","content":"<p>An array of plugin data. See get_plugin_data() and the {@see 'plugin_row_meta'} filter for the list of possible values.</p>","types":["array"],"variable":"$plugin_data"},{"name":"param","content":"<p>The plugin context. By default this can include 'all', 'active', 'inactive', 'recently_activated', 'upgrade', 'mustuse', 'dropins', and 'search'.</p>","types":["string"],"variable":"$context"}]},"args":4},{"name":"plugin_action_links_{$plugin_file}","file":"wp-admin/includes/class-wp-plugins-list-table.php","type":"filter","doc":{"description":"Filters the list of action links displayed for a specific plugin in the Plugins list table.","long_description":"The dynamic portion of the hook name, `$plugin_file`, refers to the path to the plugin file, relative to the plugins directory.","long_description_html":"<p>The dynamic portion of the hook name, <code>$plugin_file</code>, refers to the path to the plugin file, relative to the plugins directory.</p>","tags":[{"name":"since","content":"2.7.0"},{"name":"since","content":"4.9.0","description":"<p>The 'Edit' link was removed from the list of action links.</p>"},{"name":"param","content":"<p>An array of plugin action links. By default this can include 'activate', 'deactivate', and 'delete'. With Multisite active this can also include 'network_active' and 'network_only' items.</p>","types":["string[]"],"variable":"$actions"},{"name":"param","content":"<p>Path to the plugin file relative to the plugins directory.</p>","types":["string"],"variable":"$plugin_file"},{"name":"param","content":"<p>An array of plugin data. See get_plugin_data() and the {@see 'plugin_row_meta'} filter for the list of possible values.</p>","types":["array"],"variable":"$plugin_data"},{"name":"param","content":"<p>The plugin context. By default this can include 'all', 'active', 'inactive', 'recently_activated', 'upgrade', 'mustuse', 'dropins', and 'search'.</p>","types":["string"],"variable":"$context"}]},"args":4},{"name":"plugin_row_meta","file":"wp-admin/includes/class-wp-plugins-list-table.php","type":"filter","doc":{"description":"Filters the array of row meta for each plugin in the Plugins list table.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.8.0"},{"name":"param","content":"<p>An array of the plugin's metadata, including the version, author, author URI, and plugin URI.</p>","types":["string[]"],"variable":"$plugin_meta"},{"name":"param","content":"<p>Path to the plugin file relative to the plugins directory.</p>","types":["string"],"variable":"$plugin_file"},{"name":"param","content":"<p>{ An array of plugin data.</p>","types":["array"],"variable":"$plugin_data"},{"name":"param","content":"<p>Status filter currently applied to the plugin list. Possible values are: 'all', 'active', 'inactive', 'recently_activated', 'upgrade', 'mustuse', 'dropins', 'search', 'paused', 'auto-update-enabled', 'auto-update-disabled'.</p>","types":["string"],"variable":"$status"}]},"args":4},{"name":"plugin_auto_update_setting_html","file":"wp-admin/includes/class-wp-plugins-list-table.php","type":"filter","doc":{"description":"Filters the HTML of the auto-updates setting for each plugin in the Plugins list table.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.5.0"},{"name":"param","content":"<p>The HTML of the plugin's auto-update column content, including toggle auto-update action links and time to next update.</p>","types":["string"],"variable":"$html"},{"name":"param","content":"<p>Path to the plugin file relative to the plugins directory.</p>","types":["string"],"variable":"$plugin_file"},{"name":"param","content":"<p>An array of plugin data. See get_plugin_data() and the {@see 'plugin_row_meta'} filter for the list of possible values.</p>","types":["array"],"variable":"$plugin_data"}]},"args":3},{"name":"editable_roles","file":"wp-admin/includes/user.php","type":"filter","doc":{"description":"Filters the list of editable roles.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.8.0"},{"name":"param","content":"<p>Array of arrays containing role information.</p>","types":["array[]"],"variable":"$all_roles"}]},"args":1},{"name":"get_users_drafts","file":"wp-admin/includes/user.php","type":"filter","doc":{"description":"Filters the user's drafts query string.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.0.0"},{"name":"param","content":"<p>The user's drafts query string.</p>","types":["string"],"variable":"$query"}]},"args":1},{"name":"post_types_to_delete_with_user","file":"wp-admin/includes/user.php","type":"filter","doc":{"description":"Filters the list of post types to delete with a user.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.4.0"},{"name":"param","content":"<p>Array of post types to delete.</p>","types":["string[]"],"variable":"$post_types_to_delete"},{"name":"param","content":"<p>User ID.</p>","types":["int"],"variable":"$id"}]},"args":2},{"name":"wp_authorize_application_redirect_url_invalid_protocols","file":"wp-admin/includes/user.php","type":"filter","doc":{"description":"Filters the list of invalid protocols used in applications redirect URLs.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"6.3.2"},{"name":"param","content":"<p>Array of invalid protocols.</p>","types":["string[]"],"variable":"$bad_protocols"},{"name":"param","content":"<p>The redirect URL to be validated.</p>","types":["string"],"variable":"$url"}]},"args":2},{"name":"populate_network_meta","file":"wp-admin/includes/schema.php","type":"filter","doc":{"description":"Filters meta for a network on creation.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.7.0"},{"name":"param","content":"<p>Associative array of network meta keys and values to be inserted.</p>","types":["array"],"variable":"$sitemeta"},{"name":"param","content":"<p>ID of network to populate.</p>","types":["int"],"variable":"$network_id"}]},"args":2},{"name":"populate_site_meta","file":"wp-admin/includes/schema.php","type":"filter","doc":{"description":"Filters meta for a site on creation.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.2.0"},{"name":"param","content":"<p>Associative array of site meta keys and values to be inserted.</p>","types":["array"],"variable":"$meta"},{"name":"param","content":"<p>ID of site to populate.</p>","types":["int"],"variable":"$site_id"}]},"args":2},{"name":"update_translations_complete_actions","file":"wp-admin/includes/class-language-pack-upgrader-skin.php","type":"filter","doc":{"description":"Filters the list of action links available following a translations update.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.7.0"},{"name":"param","content":"<p>Array of translations update links.</p>","types":["string[]"],"variable":"$update_actions"}]},"args":1},{"name":"wpmu_users_columns","file":"wp-admin/includes/class-wp-ms-users-list-table.php","type":"filter","doc":{"description":"Filters the columns displayed in the Network Admin Users list table.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"MU (3.0.0)","description":"MU (3.0.0)"},{"name":"param","content":"<p>An array of user columns. Default 'cb', 'username', 'name', 'email', 'registered', 'blogs'.</p>","types":["string[]"],"variable":"$users_columns"}]},"args":1},{"name":"ms_user_list_site_class","file":"wp-admin/includes/class-wp-ms-users-list-table.php","type":"filter","doc":{"description":"Filters the span class for a site listing on the multisite user list table.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.2.0"},{"name":"param","content":"<p>Array of class names used within the span tag. Default &quot;site-#&quot; with the site's network ID.</p>","types":["string[]"],"variable":"$site_classes"},{"name":"param","content":"<p>Site ID.</p>","types":["int"],"variable":"$site_id"},{"name":"param","content":"<p>Network ID.</p>","types":["int"],"variable":"$network_id"},{"name":"param","content":"<p>WP_User object.</p>","types":["\\WP_User"],"variable":"$user"}]},"args":4},{"name":"ms_user_list_site_actions","file":"wp-admin/includes/class-wp-ms-users-list-table.php","type":"filter","doc":{"description":"Filters the action links displayed next the sites a user belongs to in the Network Admin Users list table.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.1.0"},{"name":"param","content":"<p>An array of action links to be displayed. Default 'Edit', 'View'.</p>","types":["string[]"],"variable":"$actions"},{"name":"param","content":"<p>The site ID.</p>","types":["int"],"variable":"$userblog_id"}]},"args":2},{"name":"ms_user_row_actions","file":"wp-admin/includes/class-wp-ms-users-list-table.php","type":"filter","doc":{"description":"Filters the action links displayed under each user in the Network Admin Users list table.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.2.0"},{"name":"param","content":"<p>An array of action links to be displayed. Default 'Edit', 'Delete'.</p>","types":["string[]"],"variable":"$actions"},{"name":"param","content":"<p>WP_User object.</p>","types":["\\WP_User"],"variable":"$user"}]},"args":2},{"name":"block_widgets_no_javascript_message","file":"wp-admin/widgets-form-blocks.php","type":"filter","doc":{"description":"Filters the message displayed in the block widget interface when JavaScript is not enabled in the browser.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"6.4.0"},{"name":"param","content":"<p>The message being displayed.</p>","types":["string"],"variable":"$message"},{"name":"param","content":"<p>Whether the Classic Widget plugin is installed.</p>","types":["bool"],"variable":"$installed"}]},"args":2},{"name":"do_mu_upgrade","file":"wp-admin/admin.php","type":"filter","doc":{"description":"Filters whether to attempt to perform the multisite DB upgrade routine.","long_description":"In single site, the user would be redirected to wp-admin/upgrade.php. In multisite, the DB upgrade routine is automatically fired, but only when this filter returns true.\n If the network is 50 sites or less, it will run every time. Otherwise, it will throttle itself to reduce load.","long_description_html":"<p>In single site, the user would be redirected to wp-admin/upgrade.php. In multisite, the DB upgrade routine is automatically fired, but only when this filter returns true.</p> <p>If the network is 50 sites or less, it will run every time. Otherwise, it will throttle itself to reduce load.</p>","tags":[{"name":"since","content":"MU (3.0.0)","description":"MU (3.0.0)"},{"name":"param","content":"<p>Whether to perform the Multisite upgrade routine. Default true.</p>","types":["bool"],"variable":"$do_mu_upgrade"}]},"args":1},{"name":"force_filtered_html_on_import","file":"wp-admin/admin.php","type":"filter","doc":{"description":"Filters whether to filter imported data through kses on import.","long_description":"Multisite uses this hook to filter all data through kses by default, as a super administrator may be assisting an untrusted user.","long_description_html":"<p>Multisite uses this hook to filter all data through kses by default, as a super administrator may be assisting an untrusted user.</p>","tags":[{"name":"since","content":"3.1.0"},{"name":"param","content":"<p>Whether to force data to be filtered through kses. Default false.</p>","types":["bool"],"variable":"$force"}]},"args":1},{"name":"media_upload_default_type","file":"wp-admin/media-upload.php","type":"filter","doc":{"description":"Filters the default media upload type in the legacy (pre-3.5.0) media popup.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.5.0"},{"name":"param","content":"<p>The default media upload type. Possible values include 'image', 'audio', 'video', 'file', etc. Default 'file'.</p>","types":["string"],"variable":"$type"}]},"args":1},{"name":"media_upload_default_tab","file":"wp-admin/media-upload.php","type":"filter","doc":{"description":"Filters the default tab in the legacy (pre-3.5.0) media popup.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.5.0"},{"name":"param","content":"<p>The default media popup tab. Default 'type' (From Computer).</p>","types":["string"],"variable":"$tab"}]},"args":1},{"name":"delete_site_email_content","file":"wp-admin/ms-delete-site.php","type":"filter","doc":{"description":"Filters the text for the email sent to the site admin when a request to delete a site in a Multisite network is submitted.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.0.0"},{"name":"param","content":"<p>The email text.</p>","types":["string"],"variable":"$content"}]},"args":1},{"name":"wp_nav_locations_listed_per_menu","file":"wp-admin/nav-menus.php","type":"filter","doc":{"description":"Filters the number of locations listed per menu in the drop-down select.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.6.0"},{"name":"param","content":"<p>Number of menu locations to list. Default 3.</p>","types":["int"],"variable":"$locations"}]},"args":1},{"name":"myblogs_options","file":"wp-admin/my-sites.php","type":"filter","doc":{"description":"Filters the settings HTML markup in the Global Settings section on the My Sites screen.","long_description":"By default, the Global Settings section is hidden. Passing a non-empty string to this filter will enable the section, and allow new settings to be added, either globally or for specific sites.","long_description_html":"<p>By default, the Global Settings section is hidden. Passing a non-empty string to this filter will enable the section, and allow new settings to be added, either globally or for specific sites.</p>","tags":[{"name":"since","content":"MU (3.0.0)","description":"MU (3.0.0)"},{"name":"param","content":"<p>The settings HTML markup. Default empty.</p>","types":["string"],"variable":"$settings_html"},{"name":"param","content":"<p>Context of the setting (global or site-specific). Default 'global'.</p>","types":["string"],"variable":"$context"}]},"args":2},{"name":"myblogs_blog_actions","file":"wp-admin/my-sites.php","type":"filter","doc":{"description":"Filters the row links displayed for each site on the My Sites screen.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"MU (3.0.0)","description":"MU (3.0.0)"},{"name":"param","content":"<p>The HTML site link markup.</p>","types":["string"],"variable":"$actions"},{"name":"param","content":"<p>An object containing the site data.</p>","types":["object"],"variable":"$user_blog"}]},"args":2},{"name":"admin_title","file":"wp-admin/admin-header.php","type":"filter","doc":{"description":"Filters the title tag content for an admin page.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.1.0"},{"name":"param","content":"<p>The page title, with extra context added.</p>","types":["string"],"variable":"$admin_title"},{"name":"param","content":"<p>The original page title.</p>","types":["string"],"variable":"$title"}]},"args":2},{"name":"admin_body_class","file":"wp-admin/admin-header.php","type":"filter","doc":{"description":"Filters the CSS classes for the body tag in the admin.","long_description":"This filter differs from the {@see 'post_class'} and {@see 'body_class'} filters in two important ways:\n\n 1. `$classes` is a space-separated string of class names instead of an array.\n 2. Not all core admin classes are filterable, notably: wp-admin, wp-core-ui,    and no-js cannot be removed.","long_description_html":"<p>This filter differs from the {@see 'post_class'} and {@see 'body_class'} filters in two important ways:</p> <ol> <li><code>$classes</code> is a space-separated string of class names instead of an array.</li> <li>Not all core admin classes are filterable, notably: wp-admin, wp-core-ui, and no-js cannot be removed.</li> </ol>","tags":[{"name":"since","content":"2.3.0"},{"name":"param","content":"<p>Space-separated list of CSS classes.</p>","types":["string"],"variable":"$classes"}]},"args":1},{"name":"handle_bulk_actions-{$screen}","file":"wp-admin/link-manager.php","type":"filter","doc":{"description":"This action is documented in wp-admin/edit.php","long_description":"","long_description_html":"","tags":[]},"args":3},{"name":"comment_post_redirect","file":"wp-comments-post.php","type":"filter","doc":{"description":"Filters the location URI to send the commenter after posting.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.0.5"},{"name":"param","content":"<p>The 'redirect_to' URI sent via $_POST.</p>","types":["string"],"variable":"$location"},{"name":"param","content":"<p>Comment object.</p>","types":["\\WP_Comment"],"variable":"$comment"}]},"args":2},{"name":"wp_mail_original_content","file":"wp-mail.php","type":"filter","doc":{"description":"Filters the original content of the email.","long_description":"Give Post-By-Email extending plugins full access to the content, either the raw content, or the content of the last quoted-printable section.","long_description_html":"<p>Give Post-By-Email extending plugins full access to the content, either the raw content, or the content of the last quoted-printable section.</p>","tags":[{"name":"since","content":"2.8.0"},{"name":"param","content":"<p>The original email content.</p>","types":["string"],"variable":"$content"}]},"args":1},{"name":"phone_content","file":"wp-mail.php","type":"filter","doc":{"description":"Filters the content of the post submitted by email before saving.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"1.2.0"},{"name":"param","content":"<p>The email content.</p>","types":["string"],"variable":"$content"}]},"args":1},{"name":"akismet_request_args","file":"wp-content/plugins/akismet/class.akismet-cli.php","type":"filter","doc":{"description":"","long_description":"","long_description_html":"","tags":[]},"args":2},{"name":"akismet_admin_page_hook_suffixes","file":"wp-content/plugins/akismet/class.akismet-admin.php","type":"filter","doc":{"description":"","long_description":"","long_description_html":"","tags":[]},"args":1},{"name":"akismet_enable_mshots","file":"wp-content/plugins/akismet/class.akismet-admin.php","type":"filter","doc":{"description":"","long_description":"","long_description_html":"","tags":[]},"args":1},{"name":"akismet_show_user_comments_approved","file":"wp-content/plugins/akismet/class.akismet-admin.php","type":"filter","doc":{"description":"","long_description":"","long_description_html":"","tags":[]},"args":1},{"name":"akismet_request_args","file":"wp-content/plugins/akismet/class.akismet-admin.php","type":"filter","doc":{"description":"","long_description":"","long_description_html":"","tags":[]},"args":2},{"name":"akismet_request_args","file":"wp-content/plugins/akismet/class.akismet-admin.php","type":"filter","doc":{"description":"","long_description":"","long_description_html":"","tags":[]},"args":2},{"name":"akismet_request_args","file":"wp-content/plugins/akismet/class.akismet-admin.php","type":"filter","doc":{"description":"","long_description":"","long_description_html":"","tags":[]},"args":2},{"name":"akismet_display_cron_disabled_notice","file":"wp-content/plugins/akismet/class.akismet-admin.php","type":"filter","doc":{"description":"","long_description":"","long_description_html":"","tags":[]},"args":1},{"name":"akismet_spam_check_warning_link_text","file":"wp-content/plugins/akismet/class.akismet-admin.php","type":"filter","doc":{"description":"","long_description":"","long_description_html":"","tags":[]},"args":1},{"name":"akismet_delete_comment_interval","file":"wp-content/plugins/akismet/views/config.php","type":"filter","doc":{"description":"","long_description":"","long_description_html":"","tags":[]},"args":1},{"name":"akismet_request_args","file":"wp-content/plugins/akismet/class.akismet-rest-api.php","type":"filter","doc":{"description":"","long_description":"","long_description_html":"","tags":[]},"args":2},{"name":"akismet_request_args","file":"wp-content/plugins/akismet/class.akismet-rest-api.php","type":"filter","doc":{"description":"","long_description":"","long_description_html":"","tags":[]},"args":2},{"name":"akismet_get_api_key","file":"wp-content/plugins/akismet/class.akismet.php","type":"filter","doc":{"description":"","long_description":"","long_description_html":"","tags":[]},"args":1},{"name":"akismet_request_args","file":"wp-content/plugins/akismet/class.akismet.php","type":"filter","doc":{"description":"","long_description":"","long_description_html":"","tags":[]},"args":2},{"name":"akismet_request_args","file":"wp-content/plugins/akismet/class.akismet.php","type":"filter","doc":{"description":"","long_description":"","long_description_html":"","tags":[]},"args":2},{"name":"akismet_request_args","file":"wp-content/plugins/akismet/class.akismet.php","type":"filter","doc":{"description":"","long_description":"","long_description_html":"","tags":[]},"args":2},{"name":"akismet_comment_nonce","file":"wp-content/plugins/akismet/class.akismet.php","type":"filter","doc":{"description":"See filter documentation in init_hooks().","long_description":"","long_description_html":"","tags":[]},"args":1},{"name":"akismet_request_args","file":"wp-content/plugins/akismet/class.akismet.php","type":"filter","doc":{"description":"Filter the data that is used to generate the request body for the API call.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.3.1"},{"name":"param","content":"<p>An array of request data.</p>","types":["array"],"variable":"$comment"},{"name":"param","content":"<p>The API endpoint being requested.</p>","types":["string"],"variable":"$endpoint"}]},"args":2},{"name":"akismet_spam_count_incr","file":"wp-content/plugins/akismet/class.akismet.php","type":"filter","doc":{"description":"","long_description":"","long_description_html":"","tags":[]},"args":1},{"name":"akismet_delete_comment_limit","file":"wp-content/plugins/akismet/class.akismet.php","type":"filter","doc":{"description":"Determines how many comments will be deleted in each batch.","long_description":"","long_description_html":"","tags":[{"name":"param","content":"<p>The default, as defined by AKISMET_DELETE_LIMIT.</p>","types":["int"],"variable":"$"}]},"args":1},{"name":"akismet_delete_comment_interval","file":"wp-content/plugins/akismet/class.akismet.php","type":"filter","doc":{"description":"Determines how many days a comment will be left in the Spam queue before being deleted.","long_description":"","long_description_html":"","tags":[{"name":"param","content":"<p>The default number of days.</p>","types":["int"],"variable":"$"}]},"args":1},{"name":"akismet_optimize_table","file":"wp-content/plugins/akismet/class.akismet.php","type":"filter","doc":{"description":"","long_description":"","long_description_html":"","tags":[]},"args":2},{"name":"akismet_delete_commentmeta_interval","file":"wp-content/plugins/akismet/class.akismet.php","type":"filter","doc":{"description":"","long_description":"","long_description_html":"","tags":[]},"args":1},{"name":"akismet_optimize_table","file":"wp-content/plugins/akismet/class.akismet.php","type":"filter","doc":{"description":"","long_description":"","long_description_html":"","tags":[]},"args":2},{"name":"akismet_optimize_table","file":"wp-content/plugins/akismet/class.akismet.php","type":"filter","doc":{"description":"","long_description":"","long_description_html":"","tags":[]},"args":2},{"name":"akismet_excluded_comment_types","file":"wp-content/plugins/akismet/class.akismet.php","type":"filter","doc":{"description":"Which comment types should be ignored when counting a user's approved comments?","long_description":"Some plugins add entries to the comments table that are not actual comments that could have been checked by Akismet. Allow these comments to be excluded from the \"approved comment count\" query in order to avoid artificially inflating the approved comment count.","long_description_html":"<p>Some plugins add entries to the comments table that are not actual comments that could have been checked by Akismet. Allow these comments to be excluded from the &quot;approved comment count&quot; query in order to avoid artificially inflating the approved comment count.</p>","tags":[{"name":"param","content":"<p>An array of comment types that won't be considered when counting a user's approved comments.</p>","types":["array"],"variable":"$comment_types"},{"name":"since","content":"4.2.2"}]},"args":1},{"name":"akismet_request_args","file":"wp-content/plugins/akismet/class.akismet.php","type":"filter","doc":{"description":"","long_description":"","long_description_html":"","tags":[]},"args":2},{"name":"akismet_request_args","file":"wp-content/plugins/akismet/class.akismet.php","type":"filter","doc":{"description":"","long_description":"","long_description_html":"","tags":[]},"args":2},{"name":"akismet_request_args","file":"wp-content/plugins/akismet/class.akismet.php","type":"filter","doc":{"description":"","long_description":"","long_description_html":"","tags":[]},"args":2},{"name":"akismet_comment_nonce","file":"wp-content/plugins/akismet/class.akismet.php","type":"filter","doc":{"description":"","long_description":"","long_description_html":"","tags":[]},"args":1},{"name":"akismet_spam_count_incr","file":"wp-content/plugins/akismet/class.akismet.php","type":"filter","doc":{"description":"","long_description":"","long_description_html":"","tags":[]},"args":1},{"name":"akismet_ua","file":"wp-content/plugins/akismet/class.akismet.php","type":"filter","doc":{"description":"","long_description":"","long_description_html":"","tags":[]},"args":1},{"name":"akismet_view_arguments","file":"wp-content/plugins/akismet/class.akismet.php","type":"filter","doc":{"description":"","long_description":"","long_description_html":"","tags":[]},"args":2},{"name":"akismet_debug_log","file":"wp-content/plugins/akismet/class.akismet.php","type":"filter","doc":{"description":"","long_description":"","long_description_html":"","tags":[]},"args":1},{"name":"akismet_predefined_api_key","file":"wp-content/plugins/akismet/class.akismet.php","type":"filter","doc":{"description":"","long_description":"","long_description_html":"","tags":[]},"args":1},{"name":"akismet_comment_form_privacy_notice","file":"wp-content/plugins/akismet/class.akismet.php","type":"filter","doc":{"description":"","long_description":"","long_description_html":"","tags":[]},"args":1},{"name":"akismet_comment_form_privacy_notice_markup","file":"wp-content/plugins/akismet/class.akismet.php","type":"filter","doc":{"description":"","long_description":"","long_description_html":"","tags":[]},"args":1},{"name":"link_title","file":"wp-links-opml.php","type":"filter","doc":{"description":"Filters the OPML outline link title text.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.2.0"},{"name":"param","content":"<p>The OPML outline title text.</p>","types":["string"],"variable":"$title"}]},"args":1},{"name":"enable_loading_advanced_cache_dropin","file":"wp-settings.php","type":"filter","doc":{"description":"Filters whether to enable loading of the advanced-cache.php drop-in.","long_description":"This filter runs before it can be used by plugins. It is designed for non-web run-times. If false is returned, advanced-cache.php will never be loaded.","long_description_html":"<p>This filter runs before it can be used by plugins. It is designed for non-web run-times. If false is returned, advanced-cache.php will never be loaded.</p>","tags":[{"name":"since","content":"4.6.0"},{"name":"param","content":"<p>Whether to enable loading advanced-cache.php (if present). Default true.</p>","types":["bool"],"variable":"$enable_advanced_cache"}]},"args":1},{"name":"post_format_rewrite_base","file":"wp-includes/taxonomy.php","type":"filter","doc":{"description":"Filters the post formats rewrite base.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.1.0"},{"name":"param","content":"<p>Context of the rewrite base. Default 'type'.</p>","types":["string"],"variable":"$context"}]},"args":1},{"name":"taxonomy_labels_{$taxonomy}","aliases":["taxonomy_labels_category","taxonomy_labels_post_tag"],"file":"wp-includes/taxonomy.php","type":"filter","doc":{"description":"Filters the labels of a specific taxonomy.","long_description":"The dynamic portion of the hook name, `$taxonomy`, refers to the taxonomy slug.\n Possible hook names include:\n\n  - `taxonomy_labels_category`\n  - `taxonomy_labels_post_tag`","long_description_html":"<p>The dynamic portion of the hook name, <code>$taxonomy</code>, refers to the taxonomy slug.</p> <p>Possible hook names include:</p> <ul> <li><code>taxonomy_labels_category</code></li> <li><code>taxonomy_labels_post_tag</code></li> </ul>","tags":[{"name":"since","content":"4.4.0"},{"name":"see","content":"<p>for the full list of taxonomy labels.</p>","refers":"get_taxonomy_labels()"},{"name":"param","content":"<p>Object with labels for the taxonomy as member variables.</p>","types":["object"],"variable":"$labels"}]},"args":1},{"name":"get_term","file":"wp-includes/taxonomy.php","type":"filter","doc":{"description":"Filters a taxonomy term object.","long_description":"The {@see 'get_$taxonomy'} hook is also available for targeting a specific taxonomy.","long_description_html":"<p>The {@see 'get_$taxonomy'} hook is also available for targeting a specific taxonomy.</p>","tags":[{"name":"since","content":"2.3.0"},{"name":"since","content":"4.4.0","description":"<p><code>$_term</code> is now a <code>WP_Term</code> object.</p>"},{"name":"param","content":"<p>Term object.</p>","types":["\\WP_Term"],"variable":"$_term"},{"name":"param","content":"<p>The taxonomy slug.</p>","types":["string"],"variable":"$taxonomy"}]},"args":2},{"name":"get_{$taxonomy}","aliases":["get_category","get_post_tag"],"file":"wp-includes/taxonomy.php","type":"filter","doc":{"description":"Filters a taxonomy term object.","long_description":"The dynamic portion of the hook name, `$taxonomy`, refers to the slug of the term's taxonomy.\n Possible hook names include:\n\n  - `get_category`\n  - `get_post_tag`","long_description_html":"<p>The dynamic portion of the hook name, <code>$taxonomy</code>, refers to the slug of the term's taxonomy.</p> <p>Possible hook names include:</p> <ul> <li><code>get_category</code></li> <li><code>get_post_tag</code></li> </ul>","tags":[{"name":"since","content":"2.3.0"},{"name":"since","content":"4.4.0","description":"<p><code>$_term</code> is now a <code>WP_Term</code> object.</p>"},{"name":"param","content":"<p>Term object.</p>","types":["\\WP_Term"],"variable":"$_term"},{"name":"param","content":"<p>The taxonomy slug.</p>","types":["string"],"variable":"$taxonomy"}]},"args":2},{"name":"get_terms","file":"wp-includes/taxonomy.php","type":"filter","doc":{"description":"Filters the found terms.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.3.0"},{"name":"since","content":"4.6.0","description":"<p>Added the <code>$term_query</code> parameter.</p>"},{"name":"param","content":"<p>Array of found terms.</p>","types":["array"],"variable":"$terms"},{"name":"param","content":"<p>An array of taxonomies if known.</p>","types":["array","null"],"variable":"$taxonomies"},{"name":"param","content":"<p>An array of get_terms() arguments.</p>","types":["array"],"variable":"$args"},{"name":"param","content":"<p>The WP_Term_Query object.</p>","types":["\\WP_Term_Query"],"variable":"$term_query"}]},"args":4},{"name":"term_exists_default_query_args","file":"wp-includes/taxonomy.php","type":"filter","doc":{"description":"Filters default query arguments for checking if a term exists.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"6.0.0"},{"name":"param","content":"<p>An array of arguments passed to get_terms().</p>","types":["array"],"variable":"$defaults"},{"name":"param","content":"<p>The term to check. Accepts term ID, slug, or name.</p>","types":["int","string"],"variable":"$term"},{"name":"param","content":"<p>The taxonomy name to use. An empty string indicates the search is against all taxonomies.</p>","types":["string"],"variable":"$taxonomy"},{"name":"param","content":"<p>ID of parent term under which to confine the exists search. Null indicates the search is unconfined.</p>","types":["int","null"],"variable":"$parent_term"}]},"args":4},{"name":"edit_term_{$field}","file":"wp-includes/taxonomy.php","type":"filter","doc":{"description":"Filters a term field to edit before it is sanitized.","long_description":"The dynamic portion of the hook name, `$field`, refers to the term field.","long_description_html":"<p>The dynamic portion of the hook name, <code>$field</code>, refers to the term field.</p>","tags":[{"name":"since","content":"2.3.0"},{"name":"param","content":"<p>Value of the term field.</p>","types":["mixed"],"variable":"$value"},{"name":"param","content":"<p>Term ID.</p>","types":["int"],"variable":"$term_id"},{"name":"param","content":"<p>Taxonomy slug.</p>","types":["string"],"variable":"$taxonomy"}]},"args":3},{"name":"edit_{$taxonomy}_{$field}","file":"wp-includes/taxonomy.php","type":"filter","doc":{"description":"Filters the taxonomy field to edit before it is sanitized.","long_description":"The dynamic portions of the filter name, `$taxonomy` and `$field`, refer to the taxonomy slug and taxonomy field, respectively.","long_description_html":"<p>The dynamic portions of the filter name, <code>$taxonomy</code> and <code>$field</code>, refer to the taxonomy slug and taxonomy field, respectively.</p>","tags":[{"name":"since","content":"2.3.0"},{"name":"param","content":"<p>Value of the taxonomy field to edit.</p>","types":["mixed"],"variable":"$value"},{"name":"param","content":"<p>Term ID.</p>","types":["int"],"variable":"$term_id"}]},"args":2},{"name":"pre_term_{$field}","file":"wp-includes/taxonomy.php","type":"filter","doc":{"description":"Filters a term field value before it is sanitized.","long_description":"The dynamic portion of the hook name, `$field`, refers to the term field.","long_description_html":"<p>The dynamic portion of the hook name, <code>$field</code>, refers to the term field.</p>","tags":[{"name":"since","content":"2.3.0"},{"name":"param","content":"<p>Value of the term field.</p>","types":["mixed"],"variable":"$value"},{"name":"param","content":"<p>Taxonomy slug.</p>","types":["string"],"variable":"$taxonomy"}]},"args":2},{"name":"pre_{$taxonomy}_{$field}","file":"wp-includes/taxonomy.php","type":"filter","doc":{"description":"Filters a taxonomy field before it is sanitized.","long_description":"The dynamic portions of the filter name, `$taxonomy` and `$field`, refer to the taxonomy slug and field name, respectively.","long_description_html":"<p>The dynamic portions of the filter name, <code>$taxonomy</code> and <code>$field</code>, refer to the taxonomy slug and field name, respectively.</p>","tags":[{"name":"since","content":"2.3.0"},{"name":"param","content":"<p>Value of the taxonomy field.</p>","types":["mixed"],"variable":"$value"}]},"args":1},{"name":"pre_category_nicename","file":"wp-includes/taxonomy.php","type":"filter","doc":{"description":"Filters the category nicename before it is sanitized.","long_description":"Use the {@see 'pre_$taxonomy_$field'} hook instead.","long_description_html":"<p>Use the {@see 'pre<em>$taxonomy</em>$field'} hook instead.</p>","tags":[{"name":"since","content":"2.0.3"},{"name":"param","content":"<p>The category nicename.</p>","types":["string"],"variable":"$value"}]},"args":1},{"name":"term_{$field}_rss","file":"wp-includes/taxonomy.php","type":"filter","doc":{"description":"Filters the term field for use in RSS.","long_description":"The dynamic portion of the hook name, `$field`, refers to the term field.","long_description_html":"<p>The dynamic portion of the hook name, <code>$field</code>, refers to the term field.</p>","tags":[{"name":"since","content":"2.3.0"},{"name":"param","content":"<p>Value of the term field.</p>","types":["mixed"],"variable":"$value"},{"name":"param","content":"<p>Taxonomy slug.</p>","types":["string"],"variable":"$taxonomy"}]},"args":2},{"name":"{$taxonomy}_{$field}_rss","file":"wp-includes/taxonomy.php","type":"filter","doc":{"description":"Filters the taxonomy field for use in RSS.","long_description":"The dynamic portions of the hook name, `$taxonomy`, and `$field`, refer to the taxonomy slug and field name, respectively.","long_description_html":"<p>The dynamic portions of the hook name, <code>$taxonomy</code>, and <code>$field</code>, refer to the taxonomy slug and field name, respectively.</p>","tags":[{"name":"since","content":"2.3.0"},{"name":"param","content":"<p>Value of the taxonomy field.</p>","types":["mixed"],"variable":"$value"}]},"args":1},{"name":"term_{$field}","file":"wp-includes/taxonomy.php","type":"filter","doc":{"description":"Filters the term field sanitized for display.","long_description":"The dynamic portion of the hook name, `$field`, refers to the term field name.","long_description_html":"<p>The dynamic portion of the hook name, <code>$field</code>, refers to the term field name.</p>","tags":[{"name":"since","content":"2.3.0"},{"name":"param","content":"<p>Value of the term field.</p>","types":["mixed"],"variable":"$value"},{"name":"param","content":"<p>Term ID.</p>","types":["int"],"variable":"$term_id"},{"name":"param","content":"<p>Taxonomy slug.</p>","types":["string"],"variable":"$taxonomy"},{"name":"param","content":"<p>Context to retrieve the term field value.</p>","types":["string"],"variable":"$context"}]},"args":4},{"name":"{$taxonomy}_{$field}","file":"wp-includes/taxonomy.php","type":"filter","doc":{"description":"Filters the taxonomy field sanitized for display.","long_description":"The dynamic portions of the filter name, `$taxonomy`, and `$field`, refer to the taxonomy slug and taxonomy field, respectively.","long_description_html":"<p>The dynamic portions of the filter name, <code>$taxonomy</code>, and <code>$field</code>, refer to the taxonomy slug and taxonomy field, respectively.</p>","tags":[{"name":"since","content":"2.3.0"},{"name":"param","content":"<p>Value of the taxonomy field.</p>","types":["mixed"],"variable":"$value"},{"name":"param","content":"<p>Term ID.</p>","types":["int"],"variable":"$term_id"},{"name":"param","content":"<p>Context to retrieve the taxonomy field value.</p>","types":["string"],"variable":"$context"}]},"args":3},{"name":"wp_get_object_terms_args","file":"wp-includes/taxonomy.php","type":"filter","doc":{"description":"Filters arguments for retrieving object terms.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.9.0"},{"name":"param","content":"<p>An array of arguments for retrieving terms for the given object(s). See {@see \\wp_get_object_terms()} for details.</p>","types":["array"],"variable":"$args"},{"name":"param","content":"<p>Array of object IDs.</p>","types":["int[]"],"variable":"$object_ids"},{"name":"param","content":"<p>Array of taxonomy names to retrieve terms from.</p>","types":["string[]"],"variable":"$taxonomies"}]},"args":3},{"name":"get_object_terms","file":"wp-includes/taxonomy.php","type":"filter","doc":{"description":"Filters the terms for a given object or objects.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.2.0"},{"name":"param","content":"<p>Array of terms or a count thereof as a numeric string.</p>","types":["\\WP_Term[]","int[]","string[]","string"],"variable":"$terms"},{"name":"param","content":"<p>Array of object IDs for which terms were retrieved.</p>","types":["int[]"],"variable":"$object_ids"},{"name":"param","content":"<p>Array of taxonomy names from which terms were retrieved.</p>","types":["string[]"],"variable":"$taxonomies"},{"name":"param","content":"<p>Array of arguments for retrieving terms for the given object(s). See wp_get_object_terms() for details.</p>","types":["array"],"variable":"$args"}]},"args":4},{"name":"wp_get_object_terms","file":"wp-includes/taxonomy.php","type":"filter","doc":{"description":"Filters the terms for a given object or objects.","long_description":"The `$taxonomies` parameter passed to this filter is formatted as a SQL fragment. The {@see 'get_object_terms'} filter is recommended as an alternative.","long_description_html":"<p>The <code>$taxonomies</code> parameter passed to this filter is formatted as a SQL fragment. The {@see 'get_object_terms'} filter is recommended as an alternative.</p>","tags":[{"name":"since","content":"2.8.0"},{"name":"param","content":"<p>Array of terms or a count thereof as a numeric string.</p>","types":["\\WP_Term[]","int[]","string[]","string"],"variable":"$terms"},{"name":"param","content":"<p>Comma separated list of object IDs for which terms were retrieved.</p>","types":["string"],"variable":"$object_ids"},{"name":"param","content":"<p>SQL fragment of taxonomy names from which terms were retrieved.</p>","types":["string"],"variable":"$taxonomies"},{"name":"param","content":"<p>Array of arguments for retrieving terms for the given object(s). See wp_get_object_terms() for details.</p>","types":["array"],"variable":"$args"}]},"args":4},{"name":"pre_insert_term","file":"wp-includes/taxonomy.php","type":"filter","doc":{"description":"Filters a term before it is sanitized and inserted into the database.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.0.0"},{"name":"since","content":"6.1.0","description":"<p>The <code>$args</code> parameter was added.</p>"},{"name":"param","content":"<p>The term name to add, or a WP_Error object if there's an error.</p>","types":["string","\\WP_Error"],"variable":"$term"},{"name":"param","content":"<p>Taxonomy slug.</p>","types":["string"],"variable":"$taxonomy"},{"name":"param","content":"<p>Array or query string of arguments passed to wp_insert_term().</p>","types":["array","string"],"variable":"$args"}]},"args":3},{"name":"wp_insert_term_data","file":"wp-includes/taxonomy.php","type":"filter","doc":{"description":"Filters term data before it is inserted into the database.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.7.0"},{"name":"param","content":"<p>Term data to be inserted.</p>","types":["array"],"variable":"$data"},{"name":"param","content":"<p>Taxonomy slug.</p>","types":["string"],"variable":"$taxonomy"},{"name":"param","content":"<p>Arguments passed to wp_insert_term().</p>","types":["array"],"variable":"$args"}]},"args":3},{"name":"wp_insert_term_duplicate_term_check","file":"wp-includes/taxonomy.php","type":"filter","doc":{"description":"Filters the duplicate term check that takes place during term creation.","long_description":"Term parent + taxonomy + slug combinations are meant to be unique, and wp_insert_term() performs a last-minute confirmation of this uniqueness before allowing a new term to be created. Plugins with different uniqueness requirements may use this filter to bypass or modify the duplicate-term check.","long_description_html":"<p>Term parent + taxonomy + slug combinations are meant to be unique, and wp_insert_term() performs a last-minute confirmation of this uniqueness before allowing a new term to be created. Plugins with different uniqueness requirements may use this filter to bypass or modify the duplicate-term check.</p>","tags":[{"name":"since","content":"5.1.0"},{"name":"param","content":"<p>Duplicate term row from terms table, if found.</p>","types":["object"],"variable":"$duplicate_term"},{"name":"param","content":"<p>Term being inserted.</p>","types":["string"],"variable":"$term"},{"name":"param","content":"<p>Taxonomy name.</p>","types":["string"],"variable":"$taxonomy"},{"name":"param","content":"<p>Arguments passed to wp_insert_term().</p>","types":["array"],"variable":"$args"},{"name":"param","content":"<p>term_taxonomy_id for the newly created term.</p>","types":["int"],"variable":"$tt_id"}]},"args":5},{"name":"term_id_filter","file":"wp-includes/taxonomy.php","type":"filter","doc":{"description":"Filters the term ID after a new term is created.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.3.0"},{"name":"since","content":"6.1.0","description":"<p>The <code>$args</code> parameter was added.</p>"},{"name":"param","content":"<p>Term ID.</p>","types":["int"],"variable":"$term_id"},{"name":"param","content":"<p>Term taxonomy ID.</p>","types":["int"],"variable":"$tt_id"},{"name":"param","content":"<p>Arguments passed to wp_insert_term().</p>","types":["array"],"variable":"$args"}]},"args":3},{"name":"wp_unique_term_slug_is_bad_slug","file":"wp-includes/taxonomy.php","type":"filter","doc":{"description":"Filters whether the proposed unique term slug is bad.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.3.0"},{"name":"param","content":"<p>Whether the slug needs to be made unique with a suffix.</p>","types":["bool"],"variable":"$needs_suffix"},{"name":"param","content":"<p>The slug.</p>","types":["string"],"variable":"$slug"},{"name":"param","content":"<p>Term object.</p>","types":["object"],"variable":"$term"}]},"args":3},{"name":"wp_unique_term_slug","file":"wp-includes/taxonomy.php","type":"filter","doc":{"description":"Filters the unique term slug.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.3.0"},{"name":"param","content":"<p>Unique term slug.</p>","types":["string"],"variable":"$slug"},{"name":"param","content":"<p>Term object.</p>","types":["object"],"variable":"$term"},{"name":"param","content":"<p>Slug originally passed to the function for testing.</p>","types":["string"],"variable":"$original_slug"}]},"args":3},{"name":"wp_update_term_parent","file":"wp-includes/taxonomy.php","type":"filter","doc":{"description":"Filters the term parent.","long_description":"Hook to this filter to see if it will cause a hierarchy loop.","long_description_html":"<p>Hook to this filter to see if it will cause a hierarchy loop.</p>","tags":[{"name":"since","content":"3.1.0"},{"name":"param","content":"<p>ID of the parent term.</p>","types":["int"],"variable":"$parent_term"},{"name":"param","content":"<p>Term ID.</p>","types":["int"],"variable":"$term_id"},{"name":"param","content":"<p>Taxonomy slug.</p>","types":["string"],"variable":"$taxonomy"},{"name":"param","content":"<p>An array of potentially altered update arguments for the given term.</p>","types":["array"],"variable":"$parsed_args"},{"name":"param","content":"<p>Arguments passed to wp_update_term().</p>","types":["array"],"variable":"$args"}]},"args":5},{"name":"wp_update_term_data","file":"wp-includes/taxonomy.php","type":"filter","doc":{"description":"Filters term data before it is updated in the database.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.7.0"},{"name":"param","content":"<p>Term data to be updated.</p>","types":["array"],"variable":"$data"},{"name":"param","content":"<p>Term ID.</p>","types":["int"],"variable":"$term_id"},{"name":"param","content":"<p>Taxonomy slug.</p>","types":["string"],"variable":"$taxonomy"},{"name":"param","content":"<p>Arguments passed to wp_update_term().</p>","types":["array"],"variable":"$args"}]},"args":4},{"name":"update_post_term_count_statuses","file":"wp-includes/taxonomy.php","type":"filter","doc":{"description":"Filters the post statuses for updating the term count.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.7.0"},{"name":"param","content":"<p>List of post statuses to include in the count. Default is 'publish'.</p>","types":["string[]"],"variable":"$post_statuses"},{"name":"param","content":"<p>Current taxonomy object.</p>","types":["\\WP_Taxonomy"],"variable":"$taxonomy"}]},"args":2},{"name":"pre_term_link","file":"wp-includes/taxonomy.php","type":"filter","doc":{"description":"Filters the permalink structure for a term before token replacement occurs.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.9.0"},{"name":"param","content":"<p>The permalink structure for the term's taxonomy.</p>","types":["string"],"variable":"$termlink"},{"name":"param","content":"<p>The term object.</p>","types":["\\WP_Term"],"variable":"$term"}]},"args":2},{"name":"tag_link","file":"wp-includes/taxonomy.php","type":"filter","doc":{"description":"Filters the tag link.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.3.0"},{"name":"since","content":"2.5.0","description":"<p>Deprecated in favor of {@see 'term_link'} filter.</p>"},{"name":"since","content":"5.4.1","description":"<p>Restored (un-deprecated).</p>"},{"name":"param","content":"<p>Tag link URL.</p>","types":["string"],"variable":"$termlink"},{"name":"param","content":"<p>Term ID.</p>","types":["int"],"variable":"$term_id"}]},"args":2},{"name":"category_link","file":"wp-includes/taxonomy.php","type":"filter","doc":{"description":"Filters the category link.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"1.5.0"},{"name":"since","content":"2.5.0","description":"<p>Deprecated in favor of {@see 'term_link'} filter.</p>"},{"name":"since","content":"5.4.1","description":"<p>Restored (un-deprecated).</p>"},{"name":"param","content":"<p>Category link URL.</p>","types":["string"],"variable":"$termlink"},{"name":"param","content":"<p>Term ID.</p>","types":["int"],"variable":"$term_id"}]},"args":2},{"name":"term_link","file":"wp-includes/taxonomy.php","type":"filter","doc":{"description":"Filters the term link.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.5.0"},{"name":"param","content":"<p>Term link URL.</p>","types":["string"],"variable":"$termlink"},{"name":"param","content":"<p>Term object.</p>","types":["\\WP_Term"],"variable":"$term"},{"name":"param","content":"<p>Taxonomy slug.</p>","types":["string"],"variable":"$taxonomy"}]},"args":3},{"name":"get_ancestors","file":"wp-includes/taxonomy.php","type":"filter","doc":{"description":"Filters a given object's ancestors.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.1.0"},{"name":"since","content":"4.1.1","description":"<p>Introduced the <code>$resource_type</code> parameter.</p>"},{"name":"param","content":"<p>An array of IDs of object ancestors.</p>","types":["int[]"],"variable":"$ancestors"},{"name":"param","content":"<p>Object ID.</p>","types":["int"],"variable":"$object_id"},{"name":"param","content":"<p>Type of object.</p>","types":["string"],"variable":"$object_type"},{"name":"param","content":"<p>Type of resource $object_type is.</p>","types":["string"],"variable":"$resource_type"}]},"args":4},{"name":"customize_section_active","file":"wp-includes/class-wp-customize-section.php","type":"filter","doc":{"description":"Filters response of WP_Customize_Section::active().","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.1.0"},{"name":"param","content":"<p>Whether the Customizer section is active.</p>","types":["bool"],"variable":"$active"},{"name":"param","content":"<p>WP_Customize_Section instance.</p>","types":["\\WP_Customize_Section"],"variable":"$section"}]},"args":2},{"name":"pre_do_shortcode_tag","file":"wp-includes/shortcodes.php","type":"filter","doc":{"description":"Filters whether to call a shortcode callback.","long_description":"Returning a non-false value from filter will short-circuit the shortcode generation process, returning that value instead.","long_description_html":"<p>Returning a non-false value from filter will short-circuit the shortcode generation process, returning that value instead.</p>","tags":[{"name":"since","content":"4.7.0"},{"name":"since","content":"6.5.0","description":"<p>The <code>$attr</code> parameter is always an array.</p>"},{"name":"param","content":"<p>Short-circuit return value. Either false or the value to replace the shortcode with.</p>","types":["false","string"],"variable":"$output"},{"name":"param","content":"<p>Shortcode name.</p>","types":["string"],"variable":"$tag"},{"name":"param","content":"<p>Shortcode attributes array, can be empty if the original arguments string cannot be parsed.</p>","types":["array"],"variable":"$attr"},{"name":"param","content":"<p>Regular expression match array.</p>","types":["array"],"variable":"$m"}]},"args":4},{"name":"do_shortcode_tag","file":"wp-includes/shortcodes.php","type":"filter","doc":{"description":"Filters the output created by a shortcode callback.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.7.0"},{"name":"since","content":"6.5.0","description":"<p>The <code>$attr</code> parameter is always an array.</p>"},{"name":"param","content":"<p>Shortcode output.</p>","types":["string"],"variable":"$output"},{"name":"param","content":"<p>Shortcode name.</p>","types":["string"],"variable":"$tag"},{"name":"param","content":"<p>Shortcode attributes array, can be empty if the original arguments string cannot be parsed.</p>","types":["array"],"variable":"$attr"},{"name":"param","content":"<p>Regular expression match array.</p>","types":["array"],"variable":"$m"}]},"args":4},{"name":"shortcode_atts_{$shortcode}","file":"wp-includes/shortcodes.php","type":"filter","doc":{"description":"Filters shortcode attributes.","long_description":"If the third parameter of the shortcode_atts() function is present then this filter is available. The third parameter, $shortcode, is the name of the shortcode.","long_description_html":"<p>If the third parameter of the shortcode_atts() function is present then this filter is available. The third parameter, $shortcode, is the name of the shortcode.</p>","tags":[{"name":"since","content":"3.6.0"},{"name":"since","content":"4.4.0","description":"<p>Added the <code>$shortcode</code> parameter.</p>"},{"name":"param","content":"<p>The output array of shortcode attributes.</p>","types":["array"],"variable":"$out"},{"name":"param","content":"<p>The supported attributes and their defaults.</p>","types":["array"],"variable":"$pairs"},{"name":"param","content":"<p>The user defined shortcode attributes.</p>","types":["array"],"variable":"$atts"},{"name":"param","content":"<p>The shortcode name.</p>","types":["string"],"variable":"$shortcode"}]},"args":4},{"name":"strip_shortcodes_tagnames","file":"wp-includes/shortcodes.php","type":"filter","doc":{"description":"Filters the list of shortcode tags to remove from the content.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.7.0"},{"name":"param","content":"<p>Array of shortcode tags to remove.</p>","types":["array"],"variable":"$tags_to_remove"},{"name":"param","content":"<p>Content shortcodes are being removed from.</p>","types":["string"],"variable":"$content"}]},"args":2},{"name":"wp_http_cookie_value","file":"wp-includes/class-wp-http-cookie.php","type":"filter","doc":{"description":"Filters the header-encoded cookie value.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.4.0"},{"name":"param","content":"<p>The cookie value.</p>","types":["string"],"variable":"$value"},{"name":"param","content":"<p>The cookie name.</p>","types":["string"],"variable":"$name"}]},"args":2},{"name":"exit_on_http_head","file":"wp-includes/template-loader.php","type":"filter","doc":{"description":"Filters whether to allow 'HEAD' requests to generate content.","long_description":"Provides a significant performance bump by exiting before the page content loads for 'HEAD' requests. See #14348.","long_description_html":"<p>Provides a significant performance bump by exiting before the page content loads for 'HEAD' requests. See #14348.</p>","tags":[{"name":"since","content":"3.5.0"},{"name":"param","content":"<p>Whether to exit without generating any content for 'HEAD' requests. Default true.</p>","types":["bool"],"variable":"$exit"}]},"args":1},{"name":"template_include","file":"wp-includes/template-loader.php","type":"filter","doc":{"description":"Filters the path of the current template before including it.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.0.0"},{"name":"param","content":"<p>The path of the template to include.</p>","types":["string"],"variable":"$template"}]},"args":1},{"name":"should_load_remote_block_patterns","file":"wp-includes/block-patterns.php","type":"filter","doc":{"description":"Filter to disable remote block patterns.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.8.0"},{"name":"param","content":"","types":["bool"],"variable":"$should_load_remote"}]},"args":1},{"name":"{$type}_template_hierarchy","aliases":["404_template_hierarchy","archive_template_hierarchy","attachment_template_hierarchy","author_template_hierarchy","category_template_hierarchy","date_template_hierarchy","embed_template_hierarchy","frontpage_template_hierarchy","home_template_hierarchy","index_template_hierarchy","page_template_hierarchy","paged_template_hierarchy","privacypolicy_template_hierarchy","search_template_hierarchy","single_template_hierarchy","singular_template_hierarchy","tag_template_hierarchy","taxonomy_template_hierarchy"],"file":"wp-includes/template.php","type":"filter","doc":{"description":"Filters the list of template filenames that are searched for when retrieving a template to use.","long_description":"The dynamic portion of the hook name, `$type`, refers to the filename -- minus the file extension and any non-alphanumeric characters delimiting words -- of the file to load. The last element in the array should always be the fallback template for this query type.\n Possible hook names include:\n\n  - `404_template_hierarchy`\n  - `archive_template_hierarchy`\n  - `attachment_template_hierarchy`\n  - `author_template_hierarchy`\n  - `category_template_hierarchy`\n  - `date_template_hierarchy`\n  - `embed_template_hierarchy`\n  - `frontpage_template_hierarchy`\n  - `home_template_hierarchy`\n  - `index_template_hierarchy`\n  - `page_template_hierarchy`\n  - `paged_template_hierarchy`\n  - `privacypolicy_template_hierarchy`\n  - `search_template_hierarchy`\n  - `single_template_hierarchy`\n  - `singular_template_hierarchy`\n  - `tag_template_hierarchy`\n  - `taxonomy_template_hierarchy`","long_description_html":"<p>The dynamic portion of the hook name, <code>$type</code>, refers to the filename -- minus the file extension and any non-alphanumeric characters delimiting words -- of the file to load. The last element in the array should always be the fallback template for this query type.</p> <p>Possible hook names include:</p> <ul> <li><code>404_template_hierarchy</code></li> <li><code>archive_template_hierarchy</code></li> <li><code>attachment_template_hierarchy</code></li> <li><code>author_template_hierarchy</code></li> <li><code>category_template_hierarchy</code></li> <li><code>date_template_hierarchy</code></li> <li><code>embed_template_hierarchy</code></li> <li><code>frontpage_template_hierarchy</code></li> <li><code>home_template_hierarchy</code></li> <li><code>index_template_hierarchy</code></li> <li><code>page_template_hierarchy</code></li> <li><code>paged_template_hierarchy</code></li> <li><code>privacypolicy_template_hierarchy</code></li> <li><code>search_template_hierarchy</code></li> <li><code>single_template_hierarchy</code></li> <li><code>singular_template_hierarchy</code></li> <li><code>tag_template_hierarchy</code></li> <li><code>taxonomy_template_hierarchy</code></li> </ul>","tags":[{"name":"since","content":"4.7.0"},{"name":"param","content":"<p>A list of template candidates, in descending order of priority.</p>","types":["string[]"],"variable":"$templates"}]},"args":1},{"name":"{$type}_template","aliases":["404_template","archive_template","attachment_template","author_template","category_template","date_template","embed_template","frontpage_template","home_template","index_template","page_template","paged_template","privacypolicy_template","search_template","single_template","singular_template","tag_template","taxonomy_template"],"file":"wp-includes/template.php","type":"filter","doc":{"description":"Filters the path of the queried template by type.","long_description":"The dynamic portion of the hook name, `$type`, refers to the filename -- minus the file extension and any non-alphanumeric characters delimiting words -- of the file to load. This hook also applies to various types of files loaded as part of the Template Hierarchy.\n Possible hook names include:\n\n  - `404_template`\n  - `archive_template`\n  - `attachment_template`\n  - `author_template`\n  - `category_template`\n  - `date_template`\n  - `embed_template`\n  - `frontpage_template`\n  - `home_template`\n  - `index_template`\n  - `page_template`\n  - `paged_template`\n  - `privacypolicy_template`\n  - `search_template`\n  - `single_template`\n  - `singular_template`\n  - `tag_template`\n  - `taxonomy_template`","long_description_html":"<p>The dynamic portion of the hook name, <code>$type</code>, refers to the filename -- minus the file extension and any non-alphanumeric characters delimiting words -- of the file to load. This hook also applies to various types of files loaded as part of the Template Hierarchy.</p> <p>Possible hook names include:</p> <ul> <li><code>404_template</code></li> <li><code>archive_template</code></li> <li><code>attachment_template</code></li> <li><code>author_template</code></li> <li><code>category_template</code></li> <li><code>date_template</code></li> <li><code>embed_template</code></li> <li><code>frontpage_template</code></li> <li><code>home_template</code></li> <li><code>index_template</code></li> <li><code>page_template</code></li> <li><code>paged_template</code></li> <li><code>privacypolicy_template</code></li> <li><code>search_template</code></li> <li><code>single_template</code></li> <li><code>singular_template</code></li> <li><code>tag_template</code></li> <li><code>taxonomy_template</code></li> </ul>","tags":[{"name":"since","content":"1.5.0"},{"name":"since","content":"4.8.0","description":"<p>The <code>$type</code> and <code>$templates</code> parameters were added.</p>"},{"name":"param","content":"<p>Path to the template. See locate_template().</p>","types":["string"],"variable":"$template"},{"name":"param","content":"<p>Sanitized filename without extension.</p>","types":["string"],"variable":"$type"},{"name":"param","content":"<p>A list of template candidates, in descending order of priority.</p>","types":["string[]"],"variable":"$templates"}]},"args":3},{"name":"block_core_navigation_listable_blocks","file":"wp-includes/blocks/navigation.php","type":"filter","doc":{"description":"Filter the list of blocks that need a list item wrapper.","long_description":"Affords the ability to customize which blocks need a list item wrapper when rendered within a core/navigation block. This is useful for blocks that are not list items but should be wrapped in a list item when used as a child of a navigation block.","long_description_html":"<p>Affords the ability to customize which blocks need a list item wrapper when rendered within a core/navigation block. This is useful for blocks that are not list items but should be wrapped in a list item when used as a child of a navigation block.</p>","tags":[{"name":"since","content":"6.5.0"},{"name":"param","content":"<p>The list of blocks that need a list item wrapper.</p>","types":["array"],"variable":"$needs_list_item_wrapper"},{"name":"return","content":"The list of blocks that need a list item wrapper.","types":["array"]}]},"args":1},{"name":"block_core_navigation_render_inner_blocks","file":"wp-includes/blocks/navigation.php","type":"filter","doc":{"description":"Filter navigation block $inner_blocks.","long_description":"Allows modification of a navigation block menu items.","long_description_html":"<p>Allows modification of a navigation block menu items.</p>","tags":[{"name":"since","content":"6.1.0"},{"name":"param","content":"","types":["\\WP_Block_List"],"variable":"$inner_blocks"}]},"args":1},{"name":"block_core_navigation_render_fallback","file":"wp-includes/blocks/navigation.php","type":"filter","doc":{"description":"Filters the fallback experience for the Navigation block.","long_description":"Returning a falsey value will opt out of the fallback and cause the block not to render. To customise the blocks provided return an array of blocks - these should be valid children of the `core/navigation` block.","long_description_html":"<p>Returning a falsey value will opt out of the fallback and cause the block not to render. To customise the blocks provided return an array of blocks - these should be valid children of the <code>core/navigation</code> block.</p>","tags":[{"name":"since","content":"5.9.0"},{"name":"param","content":"<p>default fallback blocks provided by the default block mechanic.</p>","types":["array[]"],"variable":"$fallback_blocks"}]},"args":1},{"name":"register_taxonomy_args","file":"wp-includes/class-wp-taxonomy.php","type":"filter","doc":{"description":"Filters the arguments for registering a taxonomy.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.4.0"},{"name":"param","content":"<p>Array of arguments for registering a taxonomy. See the register_taxonomy() function for accepted arguments.</p>","types":["array"],"variable":"$args"},{"name":"param","content":"<p>Taxonomy key.</p>","types":["string"],"variable":"$taxonomy"},{"name":"param","content":"<p>Array of names of object types for the taxonomy.</p>","types":["string[]"],"variable":"$object_type"}]},"args":3},{"name":"register_{$taxonomy}_taxonomy_args","aliases":["register_category_taxonomy_args","register_post_tag_taxonomy_args"],"file":"wp-includes/class-wp-taxonomy.php","type":"filter","doc":{"description":"Filters the arguments for registering a specific taxonomy.","long_description":"The dynamic portion of the filter name, `$taxonomy`, refers to the taxonomy key.\n Possible hook names include:\n\n  - `register_category_taxonomy_args`\n  - `register_post_tag_taxonomy_args`","long_description_html":"<p>The dynamic portion of the filter name, <code>$taxonomy</code>, refers to the taxonomy key.</p> <p>Possible hook names include:</p> <ul> <li><code>register_category_taxonomy_args</code></li> <li><code>register_post_tag_taxonomy_args</code></li> </ul>","tags":[{"name":"since","content":"6.0.0"},{"name":"param","content":"<p>Array of arguments for registering a taxonomy. See the register_taxonomy() function for accepted arguments.</p>","types":["array"],"variable":"$args"},{"name":"param","content":"<p>Taxonomy key.</p>","types":["string"],"variable":"$taxonomy"},{"name":"param","content":"<p>Array of names of object types for the taxonomy.</p>","types":["string[]"],"variable":"$object_type"}]},"args":3},{"name":"customize_panel_active","file":"wp-includes/class-wp-customize-panel.php","type":"filter","doc":{"description":"Filters response of WP_Customize_Panel::active().","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.1.0"},{"name":"param","content":"<p>Whether the Customizer panel is active.</p>","types":["bool"],"variable":"$active"},{"name":"param","content":"<p>WP_Customize_Panel instance.</p>","types":["\\WP_Customize_Panel"],"variable":"$panel"}]},"args":2},{"name":"can_add_user_to_blog","file":"wp-includes/ms-functions.php","type":"filter","doc":{"description":"Filters whether a user should be added to a site.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.9.0"},{"name":"param","content":"<p>True if the user should be added to the site, error object otherwise.</p>","types":["true","\\WP_Error"],"variable":"$retval"},{"name":"param","content":"<p>User ID.</p>","types":["int"],"variable":"$user_id"},{"name":"param","content":"<p>User role.</p>","types":["string"],"variable":"$role"},{"name":"param","content":"<p>Site ID.</p>","types":["int"],"variable":"$blog_id"}]},"args":4},{"name":"is_email_address_unsafe","file":"wp-includes/ms-functions.php","type":"filter","doc":{"description":"Filters whether an email address is unsafe.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.5.0"},{"name":"param","content":"<p>Whether the email address is &quot;unsafe&quot;. Default false.</p>","types":["bool"],"variable":"$is_email_address_unsafe"},{"name":"param","content":"<p>User email address.</p>","types":["string"],"variable":"$user_email"}]},"args":2},{"name":"wpmu_validate_user_signup","file":"wp-includes/ms-functions.php","type":"filter","doc":{"description":"Filters the validated user registration details.","long_description":"This does not allow you to override the username or email of the user during registration. The values are solely used for validation and error handling.","long_description_html":"<p>This does not allow you to override the username or email of the user during registration. The values are solely used for validation and error handling.</p>","tags":[{"name":"since","content":"MU (3.0.0)","description":"MU (3.0.0)"},{"name":"param","content":"<p>{ The array of user name, email, and the error messages.</p>","types":["array"],"variable":"$result"}]},"args":1},{"name":"minimum_site_name_length","file":"wp-includes/ms-functions.php","type":"filter","doc":{"description":"Filters the minimum site name length required when validating a site signup.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.8.0"},{"name":"param","content":"<p>The minimum site name length. Default 4.</p>","types":["int"],"variable":"$length"}]},"args":1},{"name":"newblogname","file":"wp-includes/ms-functions.php","type":"filter","doc":{"description":"Filters the new site name during registration.","long_description":"The name is the site's subdomain or the site's subdirectory path depending on the network settings.","long_description_html":"<p>The name is the site's subdomain or the site's subdirectory path depending on the network settings.</p>","tags":[{"name":"since","content":"MU (3.0.0)","description":"MU (3.0.0)"},{"name":"param","content":"<p>Site name.</p>","types":["string"],"variable":"$blogname"}]},"args":1},{"name":"wpmu_validate_blog_signup","file":"wp-includes/ms-functions.php","type":"filter","doc":{"description":"Filters site details and error messages following registration.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"MU (3.0.0)","description":"MU (3.0.0)"},{"name":"param","content":"<p>{ Array of domain, path, site name, site title, user and error messages.</p>","types":["array"],"variable":"$result"}]},"args":1},{"name":"signup_site_meta","file":"wp-includes/ms-functions.php","type":"filter","doc":{"description":"Filters the metadata for a site signup.","long_description":"The metadata will be serialized prior to storing it in the database.","long_description_html":"<p>The metadata will be serialized prior to storing it in the database.</p>","tags":[{"name":"since","content":"4.8.0"},{"name":"param","content":"<p>Signup meta data. Default empty array.</p>","types":["array"],"variable":"$meta"},{"name":"param","content":"<p>The requested domain.</p>","types":["string"],"variable":"$domain"},{"name":"param","content":"<p>The requested path.</p>","types":["string"],"variable":"$path"},{"name":"param","content":"<p>The requested site title.</p>","types":["string"],"variable":"$title"},{"name":"param","content":"<p>The user's requested login name.</p>","types":["string"],"variable":"$user"},{"name":"param","content":"<p>The user's email address.</p>","types":["string"],"variable":"$user_email"},{"name":"param","content":"<p>The user's activation key.</p>","types":["string"],"variable":"$key"}]},"args":7},{"name":"signup_user_meta","file":"wp-includes/ms-functions.php","type":"filter","doc":{"description":"Filters the metadata for a user signup.","long_description":"The metadata will be serialized prior to storing it in the database.","long_description_html":"<p>The metadata will be serialized prior to storing it in the database.</p>","tags":[{"name":"since","content":"4.8.0"},{"name":"param","content":"<p>Signup meta data. Default empty array.</p>","types":["array"],"variable":"$meta"},{"name":"param","content":"<p>The user's requested login name.</p>","types":["string"],"variable":"$user"},{"name":"param","content":"<p>The user's email address.</p>","types":["string"],"variable":"$user_email"},{"name":"param","content":"<p>The user's activation key.</p>","types":["string"],"variable":"$key"}]},"args":4},{"name":"wpmu_signup_blog_notification","file":"wp-includes/ms-functions.php","type":"filter","doc":{"description":"Filters whether to bypass the new site email notification.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"MU (3.0.0)","description":"MU (3.0.0)"},{"name":"param","content":"<p>Site domain, or false to prevent the email from sending.</p>","types":["string","false"],"variable":"$domain"},{"name":"param","content":"<p>Site path.</p>","types":["string"],"variable":"$path"},{"name":"param","content":"<p>Site title.</p>","types":["string"],"variable":"$title"},{"name":"param","content":"<p>User login name.</p>","types":["string"],"variable":"$user_login"},{"name":"param","content":"<p>User email address.</p>","types":["string"],"variable":"$user_email"},{"name":"param","content":"<p>Activation key created in wpmu_signup_blog().</p>","types":["string"],"variable":"$key"},{"name":"param","content":"<p>Signup meta data. By default, contains the requested privacy setting and lang_id.</p>","types":["array"],"variable":"$meta"}]},"args":7},{"name":"wpmu_signup_blog_notification_email","file":"wp-includes/ms-functions.php","type":"filter","doc":{"description":"Filters the message content of the new blog notification email.","long_description":"Content should be formatted for transmission via wp_mail().","long_description_html":"<p>Content should be formatted for transmission via wp_mail().</p>","tags":[{"name":"since","content":"MU (3.0.0)","description":"MU (3.0.0)"},{"name":"param","content":"<p>Content of the notification email.</p>","types":["string"],"variable":"$content"},{"name":"param","content":"<p>Site domain.</p>","types":["string"],"variable":"$domain"},{"name":"param","content":"<p>Site path.</p>","types":["string"],"variable":"$path"},{"name":"param","content":"<p>Site title.</p>","types":["string"],"variable":"$title"},{"name":"param","content":"<p>User login name.</p>","types":["string"],"variable":"$user_login"},{"name":"param","content":"<p>User email address.</p>","types":["string"],"variable":"$user_email"},{"name":"param","content":"<p>Activation key created in wpmu_signup_blog().</p>","types":["string"],"variable":"$key"},{"name":"param","content":"<p>Signup meta data. By default, contains the requested privacy setting and lang_id.</p>","types":["array"],"variable":"$meta"}]},"args":8},{"name":"wpmu_signup_blog_notification_subject","file":"wp-includes/ms-functions.php","type":"filter","doc":{"description":"Filters the subject of the new blog notification email.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"MU (3.0.0)","description":"MU (3.0.0)"},{"name":"param","content":"<p>Subject of the notification email.</p>","types":["string"],"variable":"$subject"},{"name":"param","content":"<p>Site domain.</p>","types":["string"],"variable":"$domain"},{"name":"param","content":"<p>Site path.</p>","types":["string"],"variable":"$path"},{"name":"param","content":"<p>Site title.</p>","types":["string"],"variable":"$title"},{"name":"param","content":"<p>User login name.</p>","types":["string"],"variable":"$user_login"},{"name":"param","content":"<p>User email address.</p>","types":["string"],"variable":"$user_email"},{"name":"param","content":"<p>Activation key created in wpmu_signup_blog().</p>","types":["string"],"variable":"$key"},{"name":"param","content":"<p>Signup meta data. By default, contains the requested privacy setting and lang_id.</p>","types":["array"],"variable":"$meta"}]},"args":8},{"name":"wpmu_signup_user_notification","file":"wp-includes/ms-functions.php","type":"filter","doc":{"description":"Filters whether to bypass the email notification for new user sign-up.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"MU (3.0.0)","description":"MU (3.0.0)"},{"name":"param","content":"<p>User login name.</p>","types":["string"],"variable":"$user_login"},{"name":"param","content":"<p>User email address.</p>","types":["string"],"variable":"$user_email"},{"name":"param","content":"<p>Activation key created in wpmu_signup_user().</p>","types":["string"],"variable":"$key"},{"name":"param","content":"<p>Signup meta data. Default empty array.</p>","types":["array"],"variable":"$meta"}]},"args":4},{"name":"wpmu_signup_user_notification_email","file":"wp-includes/ms-functions.php","type":"filter","doc":{"description":"Filters the content of the notification email for new user sign-up.","long_description":"Content should be formatted for transmission via wp_mail().","long_description_html":"<p>Content should be formatted for transmission via wp_mail().</p>","tags":[{"name":"since","content":"MU (3.0.0)","description":"MU (3.0.0)"},{"name":"param","content":"<p>Content of the notification email.</p>","types":["string"],"variable":"$content"},{"name":"param","content":"<p>User login name.</p>","types":["string"],"variable":"$user_login"},{"name":"param","content":"<p>User email address.</p>","types":["string"],"variable":"$user_email"},{"name":"param","content":"<p>Activation key created in wpmu_signup_user().</p>","types":["string"],"variable":"$key"},{"name":"param","content":"<p>Signup meta data. Default empty array.</p>","types":["array"],"variable":"$meta"}]},"args":5},{"name":"wpmu_signup_user_notification_subject","file":"wp-includes/ms-functions.php","type":"filter","doc":{"description":"Filters the subject of the notification email of new user signup.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"MU (3.0.0)","description":"MU (3.0.0)"},{"name":"param","content":"<p>Subject of the notification email.</p>","types":["string"],"variable":"$subject"},{"name":"param","content":"<p>User login name.</p>","types":["string"],"variable":"$user_login"},{"name":"param","content":"<p>User email address.</p>","types":["string"],"variable":"$user_email"},{"name":"param","content":"<p>Activation key created in wpmu_signup_user().</p>","types":["string"],"variable":"$key"},{"name":"param","content":"<p>Signup meta data. Default empty array.</p>","types":["array"],"variable":"$meta"}]},"args":5},{"name":"newblog_notify_siteadmin","file":"wp-includes/ms-functions.php","type":"filter","doc":{"description":"Filters the message body of the new site activation email sent to the network administrator.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"MU (3.0.0)","description":"MU (3.0.0)"},{"name":"since","content":"5.4.0","description":"<p>The <code>$blog_id</code> parameter was added.</p>"},{"name":"param","content":"<p>Email body.</p>","types":["string"],"variable":"$msg"},{"name":"param","content":"<p>The new site's ID as an integer or numeric string.</p>","types":["int","string"],"variable":"$blog_id"}]},"args":2},{"name":"newuser_notify_siteadmin","file":"wp-includes/ms-functions.php","type":"filter","doc":{"description":"Filters the message body of the new user activation email sent to the network administrator.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"MU (3.0.0)","description":"MU (3.0.0)"},{"name":"param","content":"<p>Email body.</p>","types":["string"],"variable":"$msg"},{"name":"param","content":"<p>WP_User instance of the new user.</p>","types":["\\WP_User"],"variable":"$user"}]},"args":2},{"name":"domain_exists","file":"wp-includes/ms-functions.php","type":"filter","doc":{"description":"Filters whether a site name is taken.","long_description":"The name is the site's subdomain or the site's subdirectory path depending on the network settings.","long_description_html":"<p>The name is the site's subdomain or the site's subdirectory path depending on the network settings.</p>","tags":[{"name":"since","content":"3.5.0"},{"name":"param","content":"<p>The site ID if the site name exists, null otherwise.</p>","types":["int","null"],"variable":"$result"},{"name":"param","content":"<p>Domain to be checked.</p>","types":["string"],"variable":"$domain"},{"name":"param","content":"<p>Path to be checked.</p>","types":["string"],"variable":"$path"},{"name":"param","content":"<p>Network ID. Only relevant on multi-network installations.</p>","types":["int"],"variable":"$network_id"}]},"args":4},{"name":"wpmu_welcome_notification","file":"wp-includes/ms-functions.php","type":"filter","doc":{"description":"Filters whether to bypass the welcome email sent to the site administrator after site activation.","long_description":"Returning false disables the welcome email.","long_description_html":"<p>Returning false disables the welcome email.</p>","tags":[{"name":"since","content":"MU (3.0.0)","description":"MU (3.0.0)"},{"name":"param","content":"<p>Site ID, or false to prevent the email from sending.</p>","types":["int","false"],"variable":"$blog_id"},{"name":"param","content":"<p>User ID of the site administrator.</p>","types":["int"],"variable":"$user_id"},{"name":"param","content":"<p>User password, or &quot;N/A&quot; if the user account is not new.</p>","types":["string"],"variable":"$password"},{"name":"param","content":"<p>Site title.</p>","types":["string"],"variable":"$title"},{"name":"param","content":"<p>Signup meta data. By default, contains the requested privacy setting and lang_id.</p>","types":["array"],"variable":"$meta"}]},"args":5},{"name":"update_welcome_email","file":"wp-includes/ms-functions.php","type":"filter","doc":{"description":"Filters the content of the welcome email sent to the site administrator after site activation.","long_description":"Content should be formatted for transmission via wp_mail().","long_description_html":"<p>Content should be formatted for transmission via wp_mail().</p>","tags":[{"name":"since","content":"MU (3.0.0)","description":"MU (3.0.0)"},{"name":"param","content":"<p>Message body of the email.</p>","types":["string"],"variable":"$welcome_email"},{"name":"param","content":"<p>Site ID.</p>","types":["int"],"variable":"$blog_id"},{"name":"param","content":"<p>User ID of the site administrator.</p>","types":["int"],"variable":"$user_id"},{"name":"param","content":"<p>User password, or &quot;N/A&quot; if the user account is not new.</p>","types":["string"],"variable":"$password"},{"name":"param","content":"<p>Site title.</p>","types":["string"],"variable":"$title"},{"name":"param","content":"<p>Signup meta data. By default, contains the requested privacy setting and lang_id.</p>","types":["array"],"variable":"$meta"}]},"args":6},{"name":"update_welcome_subject","file":"wp-includes/ms-functions.php","type":"filter","doc":{"description":"Filters the subject of the welcome email sent to the site administrator after site activation.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"MU (3.0.0)","description":"MU (3.0.0)"},{"name":"param","content":"<p>Subject of the email.</p>","types":["string"],"variable":"$subject"}]},"args":1},{"name":"send_new_site_email","file":"wp-includes/ms-functions.php","type":"filter","doc":{"description":"Filters whether to send an email to the Multisite network administrator when a new site is created.","long_description":"Return false to disable sending the email.","long_description_html":"<p>Return false to disable sending the email.</p>","tags":[{"name":"since","content":"5.6.0"},{"name":"param","content":"<p>Whether to send the email.</p>","types":["bool"],"variable":"$send"},{"name":"param","content":"<p>Site object of the new site.</p>","types":["\\WP_Site"],"variable":"$site"},{"name":"param","content":"<p>User object of the administrator of the new site.</p>","types":["\\WP_User"],"variable":"$user"}]},"args":3},{"name":"new_site_email","file":"wp-includes/ms-functions.php","type":"filter","doc":{"description":"Filters the content of the email sent to the Multisite network administrator when a new site is created.","long_description":"Content should be formatted for transmission via wp_mail().","long_description_html":"<p>Content should be formatted for transmission via wp_mail().</p>","tags":[{"name":"since","content":"5.6.0"},{"name":"param","content":"<p>{ Used to build wp_mail().</p>","types":["array"],"variable":"$new_site_email"},{"name":"param","content":"<p>Site object of the new site.</p>","types":["\\WP_Site"],"variable":"$site"},{"name":"param","content":"<p>User object of the administrator of the new site.</p>","types":["\\WP_User"],"variable":"$user"}]},"args":3},{"name":"wpmu_welcome_user_notification","file":"wp-includes/ms-functions.php","type":"filter","doc":{"description":"Filters whether to bypass the welcome email after user activation.","long_description":"Returning false disables the welcome email.","long_description_html":"<p>Returning false disables the welcome email.</p>","tags":[{"name":"since","content":"MU (3.0.0)","description":"MU (3.0.0)"},{"name":"param","content":"<p>User ID.</p>","types":["int"],"variable":"$user_id"},{"name":"param","content":"<p>User password.</p>","types":["string"],"variable":"$password"},{"name":"param","content":"<p>Signup meta data. Default empty array.</p>","types":["array"],"variable":"$meta"}]},"args":3},{"name":"update_welcome_user_email","file":"wp-includes/ms-functions.php","type":"filter","doc":{"description":"Filters the content of the welcome email after user activation.","long_description":"Content should be formatted for transmission via wp_mail().","long_description_html":"<p>Content should be formatted for transmission via wp_mail().</p>","tags":[{"name":"since","content":"MU (3.0.0)","description":"MU (3.0.0)"},{"name":"param","content":"<p>The message body of the account activation success email.</p>","types":["string"],"variable":"$welcome_email"},{"name":"param","content":"<p>User ID.</p>","types":["int"],"variable":"$user_id"},{"name":"param","content":"<p>User password.</p>","types":["string"],"variable":"$password"},{"name":"param","content":"<p>Signup meta data. Default empty array.</p>","types":["array"],"variable":"$meta"}]},"args":4},{"name":"update_welcome_user_subject","file":"wp-includes/ms-functions.php","type":"filter","doc":{"description":"Filters the subject of the welcome email after user activation.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"MU (3.0.0)","description":"MU (3.0.0)"},{"name":"param","content":"<p>Subject of the email.</p>","types":["string"],"variable":"$subject"}]},"args":1},{"name":"blog_redirect_404","file":"wp-includes/ms-functions.php","type":"filter","doc":{"description":"Filters the redirect URL for 404s on the main site.","long_description":"The filter is only evaluated if the NOBLOGREDIRECT constant is defined.","long_description_html":"<p>The filter is only evaluated if the NOBLOGREDIRECT constant is defined.</p>","tags":[{"name":"since","content":"3.0.0"},{"name":"param","content":"<p>The redirect URL defined in NOBLOGREDIRECT.</p>","types":["string"],"variable":"$no_blog_redirect"}]},"args":1},{"name":"enable_live_network_counts","file":"wp-includes/ms-functions.php","type":"filter","doc":{"description":"Filters whether to update network site or user counts when a new site is created.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.7.0"},{"name":"see","content":"","refers":"wp_is_large_network()"},{"name":"param","content":"<p>Whether the network is considered small.</p>","types":["bool"],"variable":"$small_network"},{"name":"param","content":"<p>Context. Either 'users' or 'sites'.</p>","types":["string"],"variable":"$context"}]},"args":2},{"name":"pre_get_space_used","file":"wp-includes/ms-functions.php","type":"filter","doc":{"description":"Filters the amount of storage space used by the current site, in megabytes.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.5.0"},{"name":"param","content":"<p>The amount of used space, in megabytes. Default false.</p>","types":["int","false"],"variable":"$space_used"}]},"args":1},{"name":"get_space_allowed","file":"wp-includes/ms-functions.php","type":"filter","doc":{"description":"Filters the upload quota for the current site.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.7.0"},{"name":"param","content":"<p>Upload quota in megabytes for the current blog.</p>","types":["int"],"variable":"$space_allowed"}]},"args":1},{"name":"wp_is_large_network","file":"wp-includes/ms-functions.php","type":"filter","doc":{"description":"Filters whether the network is considered large.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.3.0"},{"name":"since","content":"4.8.0","description":"<p>The <code>$network_id</code> parameter has been added.</p>"},{"name":"param","content":"<p>Whether the network has more than 10000 users or sites.</p>","types":["bool"],"variable":"$is_large_network"},{"name":"param","content":"<p>The component to count. Accepts 'users', or 'sites'.</p>","types":["string"],"variable":"$component"},{"name":"param","content":"<p>The count of items for the component.</p>","types":["int"],"variable":"$count"},{"name":"param","content":"<p>The ID of the network being checked.</p>","types":["int"],"variable":"$network_id"}]},"args":4},{"name":"subdirectory_reserved_names","file":"wp-includes/ms-functions.php","type":"filter","doc":{"description":"Filters reserved site names on a sub-directory Multisite installation.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.0.0"},{"name":"since","content":"4.4.0","description":"<p>'wp-admin', 'wp-content', 'wp-includes', 'wp-json', and 'embed' were added to the reserved names list.</p>"},{"name":"param","content":"<p>Array of reserved names.</p>","types":["string[]"],"variable":"$subdirectory_reserved_names"}]},"args":1},{"name":"new_network_admin_email_content","file":"wp-includes/ms-functions.php","type":"filter","doc":{"description":"Filters the text of the email sent when a change of network admin email address is attempted.","long_description":"The following strings have a special meaning and will get replaced dynamically: ###USERNAME###  The current user's username. ###ADMIN_URL### The link to click on to confirm the email change. ###EMAIL###     The proposed new network admin email address. ###SITENAME###  The name of the network. ###SITEURL###   The URL to the network.","long_description_html":"<p>The following strings have a special meaning and will get replaced dynamically:</p> <h3>USERNAME###  The current user's username.</h3> <h3>ADMIN_URL### The link to click on to confirm the email change.</h3> <h3>EMAIL###     The proposed new network admin email address.</h3> <h3>SITENAME###  The name of the network.</h3> <h3>SITEURL###   The URL to the network.</h3>","tags":[{"name":"since","content":"4.9.0"},{"name":"param","content":"<p>Text in the email.</p>","types":["string"],"variable":"$email_text"},{"name":"param","content":"<p>{ Data relating to the new network admin email address.</p>","types":["array"],"variable":"$new_admin_email"}]},"args":2},{"name":"send_network_admin_email_change_email","file":"wp-includes/ms-functions.php","type":"filter","doc":{"description":"Filters whether to send the network admin email change notification email.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.9.0"},{"name":"param","content":"<p>Whether to send the email notification.</p>","types":["bool"],"variable":"$send"},{"name":"param","content":"<p>The old network admin email address.</p>","types":["string"],"variable":"$old_email"},{"name":"param","content":"<p>The new network admin email address.</p>","types":["string"],"variable":"$new_email"},{"name":"param","content":"<p>ID of the network.</p>","types":["int"],"variable":"$network_id"}]},"args":4},{"name":"network_admin_email_change_email","file":"wp-includes/ms-functions.php","type":"filter","doc":{"description":"Filters the contents of the email notification sent when the network admin email address is changed.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.9.0"},{"name":"param","content":"<p>{ Used to build wp_mail().</p>","types":["array"],"variable":"$email_change_email"},{"name":"param","content":"<p>The old network admin email address.</p>","types":["string"],"variable":"$old_email"},{"name":"param","content":"<p>The new network admin email address.</p>","types":["string"],"variable":"$new_email"},{"name":"param","content":"<p>ID of the network.</p>","types":["int"],"variable":"$network_id"}]},"args":4},{"name":"blog_option_{$option}","file":"wp-includes/ms-blogs.php","type":"filter","doc":{"description":"Filters a blog option value.","long_description":"The dynamic portion of the hook name, `$option`, refers to the blog option name.","long_description_html":"<p>The dynamic portion of the hook name, <code>$option</code>, refers to the blog option name.</p>","tags":[{"name":"since","content":"3.5.0"},{"name":"param","content":"<p>The option value.</p>","types":["string"],"variable":"$value"},{"name":"param","content":"<p>Blog ID.</p>","types":["int"],"variable":"$id"}]},"args":2},{"name":"block_type_metadata","file":"wp-includes/blocks.php","type":"filter","doc":{"description":"Filters the metadata provided for registering a block type.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.7.0"},{"name":"param","content":"<p>Metadata for registering a block type.</p>","types":["array"],"variable":"$metadata"}]},"args":1},{"name":"block_type_metadata_settings","file":"wp-includes/blocks.php","type":"filter","doc":{"description":"Filters the settings determined from the block type metadata.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.7.0"},{"name":"param","content":"<p>Array of determined settings for registering a block type.</p>","types":["array"],"variable":"$settings"},{"name":"param","content":"<p>Metadata provided for registering a block type.</p>","types":["array"],"variable":"$metadata"}]},"args":2},{"name":"hooked_block_types","file":"wp-includes/blocks.php","type":"filter","doc":{"description":"Filters the list of hooked block types for a given anchor block type and relative position.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"6.4.0"},{"name":"param","content":"<p>The list of hooked block types.</p>","types":["string[]"],"variable":"$hooked_block_types"},{"name":"param","content":"<p>The relative position of the hooked blocks. Can be one of 'before', 'after', 'first_child', or 'last_child'.</p>","types":["string"],"variable":"$relative_position"},{"name":"param","content":"<p>The anchor block type.</p>","types":["string"],"variable":"$anchor_block_type"},{"name":"param","content":"<p>The block template, template part, <code>wp_navigation</code> post type, or pattern that the anchor block belongs to.</p>","types":["\\WP_Block_Template","\\WP_Post","array"],"variable":"$context"}]},"args":4},{"name":"hooked_block","file":"wp-includes/blocks.php","type":"filter","doc":{"description":"Filters the parsed block array for a given hooked block.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"6.5.0"},{"name":"param","content":"<p>The parsed block array for the given hooked block type, or null to suppress the block.</p>","types":["array","null"],"variable":"$parsed_hooked_block"},{"name":"param","content":"<p>The hooked block type name.</p>","types":["string"],"variable":"$hooked_block_type"},{"name":"param","content":"<p>The relative position of the hooked block.</p>","types":["string"],"variable":"$relative_position"},{"name":"param","content":"<p>The anchor block, in parsed block array format.</p>","types":["array"],"variable":"$parsed_anchor_block"},{"name":"param","content":"<p>The block template, template part, <code>wp_navigation</code> post type, or pattern that the anchor block belongs to.</p>","types":["\\WP_Block_Template","\\WP_Post","array"],"variable":"$context"}]},"args":5},{"name":"hooked_block_{$hooked_block_type}","file":"wp-includes/blocks.php","type":"filter","doc":{"description":"Filters the parsed block array for a given hooked block.","long_description":"The dynamic portion of the hook name, `$hooked_block_type`, refers to the block type name of the specific hooked block.","long_description_html":"<p>The dynamic portion of the hook name, <code>$hooked_block_type</code>, refers to the block type name of the specific hooked block.</p>","tags":[{"name":"since","content":"6.5.0"},{"name":"param","content":"<p>The parsed block array for the given hooked block type, or null to suppress the block.</p>","types":["array","null"],"variable":"$parsed_hooked_block"},{"name":"param","content":"<p>The hooked block type name.</p>","types":["string"],"variable":"$hooked_block_type"},{"name":"param","content":"<p>The relative position of the hooked block.</p>","types":["string"],"variable":"$relative_position"},{"name":"param","content":"<p>The anchor block, in parsed block array format.</p>","types":["array"],"variable":"$parsed_anchor_block"},{"name":"param","content":"<p>The block template, template part, <code>wp_navigation</code> post type, or pattern that the anchor block belongs to.</p>","types":["\\WP_Block_Template","\\WP_Post","array"],"variable":"$context"}]},"args":5},{"name":"excerpt_allowed_wrapper_blocks","file":"wp-includes/blocks.php","type":"filter","doc":{"description":"Filters the list of blocks that can be used as wrapper blocks, allowing excerpts to be generated from the `innerBlocks` of these wrappers.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.8.0"},{"name":"param","content":"<p>The list of names of allowed wrapper blocks.</p>","types":["string[]"],"variable":"$allowed_wrapper_blocks"}]},"args":1},{"name":"excerpt_allowed_blocks","file":"wp-includes/blocks.php","type":"filter","doc":{"description":"Filters the list of blocks that can contribute to the excerpt.","long_description":"If a dynamic block is added to this list, it must not generate another excerpt, as this will cause an infinite loop to occur.","long_description_html":"<p>If a dynamic block is added to this list, it must not generate another excerpt, as this will cause an infinite loop to occur.</p>","tags":[{"name":"since","content":"5.0.0"},{"name":"param","content":"<p>The list of names of allowed blocks.</p>","types":["string[]"],"variable":"$allowed_blocks"}]},"args":1},{"name":"pre_render_block","file":"wp-includes/blocks.php","type":"filter","doc":{"description":"Allows render_block() to be short-circuited, by returning a non-null value.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.1.0"},{"name":"since","content":"5.9.0","description":"<p>The <code>$parent_block</code> parameter was added.</p>"},{"name":"param","content":"<p>The pre-rendered content. Default null.</p>","types":["string","null"],"variable":"$pre_render"},{"name":"param","content":"<p>{ An associative array of the block being rendered. See WP_Block_Parser_Block.</p>","types":["array"],"variable":"$parsed_block"},{"name":"param","content":"<p>If this is a nested block, a reference to the parent block.</p>","types":["\\WP_Block","null"],"variable":"$parent_block"}]},"args":3},{"name":"render_block_data","file":"wp-includes/blocks.php","type":"filter","doc":{"description":"Filters the block being rendered in render_block(), before it's processed.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.1.0"},{"name":"since","content":"5.9.0","description":"<p>The <code>$parent_block</code> parameter was added.</p>"},{"name":"param","content":"<p>{ An associative array of the block being rendered. See WP_Block_Parser_Block.</p>","types":["array"],"variable":"$parsed_block"},{"name":"param","content":"<p>{ An un-modified copy of <code>$parsed_block</code>, as it appeared in the source content. See WP_Block_Parser_Block.</p>","types":["array"],"variable":"$source_block"},{"name":"param","content":"<p>If this is a nested block, a reference to the parent block.</p>","types":["\\WP_Block","null"],"variable":"$parent_block"}]},"args":3},{"name":"render_block_context","file":"wp-includes/blocks.php","type":"filter","doc":{"description":"Filters the default context provided to a rendered block.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.5.0"},{"name":"since","content":"5.9.0","description":"<p>The <code>$parent_block</code> parameter was added.</p>"},{"name":"param","content":"<p>Default context.</p>","types":["array"],"variable":"$context"},{"name":"param","content":"<p>{ An associative array of the block being rendered. See WP_Block_Parser_Block.</p>","types":["array"],"variable":"$parsed_block"},{"name":"param","content":"<p>If this is a nested block, a reference to the parent block.</p>","types":["\\WP_Block","null"],"variable":"$parent_block"}]},"args":3},{"name":"block_parser_class","file":"wp-includes/blocks.php","type":"filter","doc":{"description":"Filter to allow plugins to replace the server-side block parser.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.0.0"},{"name":"param","content":"<p>Name of block parser class.</p>","types":["string"],"variable":"$parser_class"}]},"args":1},{"name":"query_loop_block_query_vars","file":"wp-includes/blocks.php","type":"filter","doc":{"description":"Filters the arguments which will be passed to `WP_Query` for the Query Loop Block.","long_description":"Anything to this filter should be compatible with the `WP_Query` API to form the query context which will be passed down to the Query Loop Block's children. This can help, for example, to include additional settings or meta queries not directly supported by the core Query Loop Block, and extend its capabilities.\n Please note that this will only influence the query that will be rendered on the front-end. The editor preview is not affected by this filter. Also, worth noting that the editor preview uses the REST API, so, ideally, one should aim to provide attributes which are also compatible with the REST API, in order to be able to implement identical queries on both sides.","long_description_html":"<p>Anything to this filter should be compatible with the <code>WP_Query</code> API to form the query context which will be passed down to the Query Loop Block's children. This can help, for example, to include additional settings or meta queries not directly supported by the core Query Loop Block, and extend its capabilities.</p> <p>Please note that this will only influence the query that will be rendered on the front-end. The editor preview is not affected by this filter. Also, worth noting that the editor preview uses the REST API, so, ideally, one should aim to provide attributes which are also compatible with the REST API, in order to be able to implement identical queries on both sides.</p>","tags":[{"name":"since","content":"6.1.0"},{"name":"param","content":"<p>Array containing parameters for <code>WP_Query</code> as parsed by the block context.</p>","types":["array"],"variable":"$query"},{"name":"param","content":"<p>Block instance.</p>","types":["\\WP_Block"],"variable":"$block"},{"name":"param","content":"<p>Current query's page.</p>","types":["int"],"variable":"$page"}]},"args":3},{"name":"editor_max_image_size","file":"wp-includes/media.php","type":"filter","doc":{"description":"Filters the maximum image size dimensions for the editor.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.5.0"},{"name":"param","content":"<p>{ An array of width and height values.</p>","types":["int[]"],"variable":"$max_image_size"},{"name":"param","content":"<p>Requested image size. Can be any registered image size name, or an array of width and height values in pixels (in that order).</p>","types":["string","int[]"],"variable":"$size"},{"name":"param","content":"<p>The context the image is being resized for. Possible values are 'display' (like in a theme) or 'edit' (like inserting into an editor).</p>","types":["string"],"variable":"$context"}]},"args":3},{"name":"image_downsize","file":"wp-includes/media.php","type":"filter","doc":{"description":"Filters whether to preempt the output of image_downsize().","long_description":"Returning a truthy value from the filter will effectively short-circuit down-sizing the image, returning that value instead.","long_description_html":"<p>Returning a truthy value from the filter will effectively short-circuit down-sizing the image, returning that value instead.</p>","tags":[{"name":"since","content":"2.5.0"},{"name":"param","content":"<p>Whether to short-circuit the image downsize.</p>","types":["bool","array"],"variable":"$downsize"},{"name":"param","content":"<p>Attachment ID for image.</p>","types":["int"],"variable":"$id"},{"name":"param","content":"<p>Requested image size. Can be any registered image size name, or an array of width and height values in pixels (in that order).</p>","types":["string","int[]"],"variable":"$size"}]},"args":3},{"name":"get_image_tag_class","file":"wp-includes/media.php","type":"filter","doc":{"description":"Filters the value of the attachment's image tag class attribute.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.6.0"},{"name":"param","content":"<p>CSS class name or space-separated list of classes.</p>","types":["string"],"variable":"$class"},{"name":"param","content":"<p>Attachment ID.</p>","types":["int"],"variable":"$id"},{"name":"param","content":"<p>Part of the class name for aligning the image.</p>","types":["string"],"variable":"$align"},{"name":"param","content":"<p>Requested image size. Can be any registered image size name, or an array of width and height values in pixels (in that order).</p>","types":["string","int[]"],"variable":"$size"}]},"args":4},{"name":"get_image_tag","file":"wp-includes/media.php","type":"filter","doc":{"description":"Filters the HTML content for the image tag.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.6.0"},{"name":"param","content":"<p>HTML content for the image.</p>","types":["string"],"variable":"$html"},{"name":"param","content":"<p>Attachment ID.</p>","types":["int"],"variable":"$id"},{"name":"param","content":"<p>Image description for the alt attribute.</p>","types":["string"],"variable":"$alt"},{"name":"param","content":"<p>Image description for the title attribute.</p>","types":["string"],"variable":"$title"},{"name":"param","content":"<p>Part of the class name for aligning the image.</p>","types":["string"],"variable":"$align"},{"name":"param","content":"<p>Requested image size. Can be any registered image size name, or an array of width and height values in pixels (in that order).</p>","types":["string","int[]"],"variable":"$size"}]},"args":6},{"name":"wp_constrain_dimensions","file":"wp-includes/media.php","type":"filter","doc":{"description":"Filters dimensions to constrain down-sampled images to.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.1.0"},{"name":"param","content":"<p>{ An array of width and height values.</p>","types":["int[]"],"variable":"$dimensions"},{"name":"param","content":"<p>The current width of the image.</p>","types":["int"],"variable":"$current_width"},{"name":"param","content":"<p>The current height of the image.</p>","types":["int"],"variable":"$current_height"},{"name":"param","content":"<p>The maximum width permitted.</p>","types":["int"],"variable":"$max_width"},{"name":"param","content":"<p>The maximum height permitted.</p>","types":["int"],"variable":"$max_height"}]},"args":5},{"name":"image_resize_dimensions","file":"wp-includes/media.php","type":"filter","doc":{"description":"Filters whether to preempt calculating the image resize dimensions.","long_description":"Returning a non-null value from the filter will effectively short-circuit image_resize_dimensions(), returning that value instead.","long_description_html":"<p>Returning a non-null value from the filter will effectively short-circuit image_resize_dimensions(), returning that value instead.</p>","tags":[{"name":"since","content":"3.4.0"},{"name":"param","content":"<p>Whether to preempt output of the resize dimensions.</p>","types":["null","mixed"],"variable":"$null"},{"name":"param","content":"<p>Original width in pixels.</p>","types":["int"],"variable":"$orig_w"},{"name":"param","content":"<p>Original height in pixels.</p>","types":["int"],"variable":"$orig_h"},{"name":"param","content":"<p>New width in pixels.</p>","types":["int"],"variable":"$dest_w"},{"name":"param","content":"<p>New height in pixels.</p>","types":["int"],"variable":"$dest_h"},{"name":"param","content":"<p>Whether to crop image to specified width and height or resize. An array can specify positioning of the crop area. Default false.</p>","types":["bool","array"],"variable":"$crop"}]},"args":6},{"name":"wp_image_resize_identical_dimensions","file":"wp-includes/media.php","type":"filter","doc":{"description":"Filters whether to proceed with making an image sub-size with identical dimensions with the original/source image. Differences of 1px may be due to rounding and are ignored.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.3.0"},{"name":"param","content":"<p>The filtered value.</p>","types":["bool"],"variable":"$proceed"},{"name":"param","content":"<p>Original image width.</p>","types":["int"],"variable":"$orig_w"},{"name":"param","content":"<p>Original image height.</p>","types":["int"],"variable":"$orig_h"}]},"args":3},{"name":"image_get_intermediate_size","file":"wp-includes/media.php","type":"filter","doc":{"description":"Filters the output of image_get_intermediate_size()","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.4.0"},{"name":"see","content":"","refers":"image_get_intermediate_size()"},{"name":"param","content":"<p>Array of file relative path, width, and height on success. May also include file absolute path and URL.</p>","types":["array"],"variable":"$data"},{"name":"param","content":"<p>The ID of the image attachment.</p>","types":["int"],"variable":"$post_id"},{"name":"param","content":"<p>Requested image size. Can be any registered image size name, or an array of width and height values in pixels (in that order).</p>","types":["string","int[]"],"variable":"$size"}]},"args":3},{"name":"intermediate_image_sizes","file":"wp-includes/media.php","type":"filter","doc":{"description":"Filters the list of intermediate image sizes.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.5.0"},{"name":"param","content":"<p>An array of intermediate image size names. Defaults are 'thumbnail', 'medium', 'medium_large', 'large'.</p>","types":["string[]"],"variable":"$default_sizes"}]},"args":1},{"name":"wp_get_attachment_image_src","file":"wp-includes/media.php","type":"filter","doc":{"description":"Filters the attachment image source result.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.3.0"},{"name":"param","content":"<p>{ Array of image data, or boolean false if no image is available.</p>","types":["array","false"],"variable":"$image"},{"name":"param","content":"<p>Image attachment ID.</p>","types":["int"],"variable":"$attachment_id"},{"name":"param","content":"<p>Requested image size. Can be any registered image size name, or an array of width and height values in pixels (in that order).</p>","types":["string","int[]"],"variable":"$size"},{"name":"param","content":"<p>Whether the image should be treated as an icon.</p>","types":["bool"],"variable":"$icon"}]},"args":4},{"name":"wp_get_attachment_image_context","file":"wp-includes/media.php","type":"filter","doc":{"description":"Filters the context in which wp_get_attachment_image() is used.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"6.3.0"},{"name":"param","content":"<p>The context. Default 'wp_get_attachment_image'.</p>","types":["string"],"variable":"$context"}]},"args":1},{"name":"wp_get_attachment_image_attributes","file":"wp-includes/media.php","type":"filter","doc":{"description":"Filters the list of attachment image attributes.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.8.0"},{"name":"param","content":"<p>Array of attribute values for the image markup, keyed by attribute name. See wp_get_attachment_image().</p>","types":["string[]"],"variable":"$attr"},{"name":"param","content":"<p>Image attachment post.</p>","types":["\\WP_Post"],"variable":"$attachment"},{"name":"param","content":"<p>Requested image size. Can be any registered image size name, or an array of width and height values in pixels (in that order).</p>","types":["string","int[]"],"variable":"$size"}]},"args":3},{"name":"wp_get_attachment_image","file":"wp-includes/media.php","type":"filter","doc":{"description":"Filters the HTML img element representing an image attachment.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.6.0"},{"name":"param","content":"<p>HTML img element or empty string on failure.</p>","types":["string"],"variable":"$html"},{"name":"param","content":"<p>Image attachment ID.</p>","types":["int"],"variable":"$attachment_id"},{"name":"param","content":"<p>Requested image size. Can be any registered image size name, or an array of width and height values in pixels (in that order).</p>","types":["string","int[]"],"variable":"$size"},{"name":"param","content":"<p>Whether the image should be treated as an icon.</p>","types":["bool"],"variable":"$icon"},{"name":"param","content":"<p>Array of attribute values for the image markup, keyed by attribute name. See wp_get_attachment_image().</p>","types":["string[]"],"variable":"$attr"}]},"args":5},{"name":"wp_calculate_image_srcset_meta","file":"wp-includes/media.php","type":"filter","doc":{"description":"Pre-filters the image meta to be able to fix inconsistencies in the stored data.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.5.0"},{"name":"param","content":"<p>The image meta data as returned by 'wp_get_attachment_metadata()'.</p>","types":["array"],"variable":"$image_meta"},{"name":"param","content":"<p>{ An array of requested width and height values.</p>","types":["int[]"],"variable":"$size_array"},{"name":"param","content":"<p>The 'src' of the image.</p>","types":["string"],"variable":"$image_src"},{"name":"param","content":"<p>The image attachment ID or 0 if not supplied.</p>","types":["int"],"variable":"$attachment_id"}]},"args":4},{"name":"max_srcset_image_width","file":"wp-includes/media.php","type":"filter","doc":{"description":"Filters the maximum image width to be included in a 'srcset' attribute.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.4.0"},{"name":"param","content":"<p>The maximum image width to be included in the 'srcset'. Default '2048'.</p>","types":["int"],"variable":"$max_width"},{"name":"param","content":"<p>{ An array of requested width and height values.</p>","types":["int[]"],"variable":"$size_array"}]},"args":2},{"name":"wp_calculate_image_srcset","file":"wp-includes/media.php","type":"filter","doc":{"description":"Filters an image's 'srcset' sources.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.4.0"},{"name":"param","content":"<p>{ One or more arrays of source data to include in the 'srcset'.</p>","types":["array"],"variable":"$sources"},{"name":"param","content":"<p>{ An array of requested width and height values.</p>","types":["array"],"variable":"$size_array"},{"name":"param","content":"<p>The 'src' of the image.</p>","types":["string"],"variable":"$image_src"},{"name":"param","content":"<p>The image meta data as returned by 'wp_get_attachment_metadata()'.</p>","types":["array"],"variable":"$image_meta"},{"name":"param","content":"<p>Image attachment ID or 0.</p>","types":["int"],"variable":"$attachment_id"}]},"args":5},{"name":"wp_calculate_image_sizes","file":"wp-includes/media.php","type":"filter","doc":{"description":"Filters the output of 'wp_calculate_image_sizes()'.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.4.0"},{"name":"param","content":"<p>A source size value for use in a 'sizes' attribute.</p>","types":["string"],"variable":"$sizes"},{"name":"param","content":"<p>Requested image size. Can be any registered image size name, or an array of width and height values in pixels (in that order).</p>","types":["string","int[]"],"variable":"$size"},{"name":"param","content":"<p>The URL to the image file or null.</p>","types":["string","null"],"variable":"$image_src"},{"name":"param","content":"<p>The image meta data as returned by wp_get_attachment_metadata() or null.</p>","types":["array","null"],"variable":"$image_meta"},{"name":"param","content":"<p>Image attachment ID of the original image or 0.</p>","types":["int"],"variable":"$attachment_id"}]},"args":5},{"name":"wp_image_file_matches_image_meta","file":"wp-includes/media.php","type":"filter","doc":{"description":"Filters whether an image path or URI matches image meta.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.5.0"},{"name":"param","content":"<p>Whether the image relative path from the image meta matches the end of the URI or path to the image file.</p>","types":["bool"],"variable":"$match"},{"name":"param","content":"<p>Full path or URI to the tested image file.</p>","types":["string"],"variable":"$image_location"},{"name":"param","content":"<p>The image meta data as returned by 'wp_get_attachment_metadata()'.</p>","types":["array"],"variable":"$image_meta"},{"name":"param","content":"<p>The image attachment ID or 0 if not supplied.</p>","types":["int"],"variable":"$attachment_id"}]},"args":4},{"name":"wp_image_src_get_dimensions","file":"wp-includes/media.php","type":"filter","doc":{"description":"Filters the 'wp_image_src_get_dimensions' value.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.7.0"},{"name":"param","content":"<p>Array with first element being the width and second element being the height, or false if dimensions could not be determined.</p>","types":["array","false"],"variable":"$dimensions"},{"name":"param","content":"<p>The image source file.</p>","types":["string"],"variable":"$image_src"},{"name":"param","content":"<p>The image meta data as returned by 'wp_get_attachment_metadata()'.</p>","types":["array"],"variable":"$image_meta"},{"name":"param","content":"<p>The image attachment ID. Default 0.</p>","types":["int"],"variable":"$attachment_id"}]},"args":4},{"name":"wp_lazy_loading_enabled","file":"wp-includes/media.php","type":"filter","doc":{"description":"Filters whether to add the `loading` attribute to the specified tag in the specified context.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.5.0"},{"name":"param","content":"<p>Default value.</p>","types":["bool"],"variable":"$default"},{"name":"param","content":"<p>The tag name.</p>","types":["string"],"variable":"$tag_name"},{"name":"param","content":"<p>Additional context, like the current filter name or the function name from where this was called.</p>","types":["string"],"variable":"$context"}]},"args":3},{"name":"wp_content_img_tag","file":"wp-includes/media.php","type":"filter","doc":{"description":"Filters an img tag within the content for a given context.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"6.0.0"},{"name":"param","content":"<p>Full img tag with attributes that will replace the source img tag.</p>","types":["string"],"variable":"$filtered_image"},{"name":"param","content":"<p>Additional context, like the current filter name or the function name from where this was called.</p>","types":["string"],"variable":"$context"},{"name":"param","content":"<p>The image attachment ID. May be 0 in case the image is not an attachment.</p>","types":["int"],"variable":"$attachment_id"}]},"args":3},{"name":"wp_img_tag_add_auto_sizes","file":"wp-includes/media.php","type":"filter","doc":{"description":"Filters whether auto-sizes for lazy loaded images is enabled.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"6.7.1"},{"name":"param","content":"<p>Whether auto-sizes for lazy loaded images is enabled.</p>","types":["bool"],"variable":"$enabled"}]},"args":1},{"name":"wp_img_tag_add_decoding_attr","file":"wp-includes/media.php","type":"filter","doc":{"description":"Filters the `decoding` attribute value to add to an image. Default `async`.","long_description":"Returning a falsey value will omit the attribute.","long_description_html":"<p>Returning a falsey value will omit the attribute.</p>","tags":[{"name":"since","content":"6.1.0"},{"name":"param","content":"<p>The <code>decoding</code> attribute value. Returning a falsey value will result in the attribute being omitted for the image. Otherwise, it may be: 'async', 'sync', or 'auto'. Defaults to false.</p>","types":["string","false","null"],"variable":"$value"},{"name":"param","content":"<p>The HTML <code>img</code> tag to be filtered.</p>","types":["string"],"variable":"$image"},{"name":"param","content":"<p>Additional context about how the function was called or where the img tag is.</p>","types":["string"],"variable":"$context"}]},"args":3},{"name":"wp_img_tag_add_loading_attr","file":"wp-includes/media.php","type":"filter","doc":{"description":"Filters the `loading` attribute value to add to an image. Default `lazy`.","long_description":"Returning `false` or an empty string will not add the attribute. Returning `true` will add the default value.","long_description_html":"<p>Returning <code>false</code> or an empty string will not add the attribute. Returning <code>true</code> will add the default value.</p>","tags":[{"name":"since","content":"5.5.0"},{"name":"param","content":"<p>The <code>loading</code> attribute value. Returning a falsey value will result in the attribute being omitted for the image.</p>","types":["string","bool"],"variable":"$value"},{"name":"param","content":"<p>The HTML <code>img</code> tag to be filtered.</p>","types":["string"],"variable":"$image"},{"name":"param","content":"<p>Additional context about how the function was called or where the img tag is.</p>","types":["string"],"variable":"$context"}]},"args":3},{"name":"wp_img_tag_add_width_and_height_attr","file":"wp-includes/media.php","type":"filter","doc":{"description":"Filters whether to add the missing `width` and `height` HTML attributes to the img tag. Default `true`.","long_description":"Returning anything else than `true` will not add the attributes.","long_description_html":"<p>Returning anything else than <code>true</code> will not add the attributes.</p>","tags":[{"name":"since","content":"5.5.0"},{"name":"param","content":"<p>The filtered value, defaults to <code>true</code>.</p>","types":["bool"],"variable":"$value"},{"name":"param","content":"<p>The HTML <code>img</code> tag where the attribute should be added.</p>","types":["string"],"variable":"$image"},{"name":"param","content":"<p>Additional context about how the function was called or where the img tag is.</p>","types":["string"],"variable":"$context"},{"name":"param","content":"<p>The image attachment ID.</p>","types":["int"],"variable":"$attachment_id"}]},"args":4},{"name":"wp_img_tag_add_srcset_and_sizes_attr","file":"wp-includes/media.php","type":"filter","doc":{"description":"Filters whether to add the `srcset` and `sizes` HTML attributes to the img tag. Default `true`.","long_description":"Returning anything else than `true` will not add the attributes.","long_description_html":"<p>Returning anything else than <code>true</code> will not add the attributes.</p>","tags":[{"name":"since","content":"5.5.0"},{"name":"param","content":"<p>The filtered value, defaults to <code>true</code>.</p>","types":["bool"],"variable":"$value"},{"name":"param","content":"<p>The HTML <code>img</code> tag where the attribute should be added.</p>","types":["string"],"variable":"$image"},{"name":"param","content":"<p>Additional context about how the function was called or where the img tag is.</p>","types":["string"],"variable":"$context"},{"name":"param","content":"<p>The image attachment ID.</p>","types":["int"],"variable":"$attachment_id"}]},"args":4},{"name":"wp_iframe_tag_add_loading_attr","file":"wp-includes/media.php","type":"filter","doc":{"description":"Filters the `loading` attribute value to add to an iframe. Default `lazy`.","long_description":"Returning `false` or an empty string will not add the attribute. Returning `true` will add the default value.","long_description_html":"<p>Returning <code>false</code> or an empty string will not add the attribute. Returning <code>true</code> will add the default value.</p>","tags":[{"name":"since","content":"5.7.0"},{"name":"param","content":"<p>The <code>loading</code> attribute value. Returning a falsey value will result in the attribute being omitted for the iframe.</p>","types":["string","bool"],"variable":"$value"},{"name":"param","content":"<p>The HTML <code>iframe</code> tag to be filtered.</p>","types":["string"],"variable":"$iframe"},{"name":"param","content":"<p>Additional context about how the function was called or where the iframe tag is.</p>","types":["string"],"variable":"$context"}]},"args":3},{"name":"img_caption_shortcode","file":"wp-includes/media.php","type":"filter","doc":{"description":"Filters the default caption shortcode output.","long_description":"If the filtered output isn't empty, it will be used instead of generating the default caption template.","long_description_html":"<p>If the filtered output isn't empty, it will be used instead of generating the default caption template.</p>","tags":[{"name":"since","content":"2.6.0"},{"name":"see","content":"","refers":"img_caption_shortcode()"},{"name":"param","content":"<p>The caption output. Default empty.</p>","types":["string"],"variable":"$output"},{"name":"param","content":"<p>Attributes of the caption shortcode.</p>","types":["array"],"variable":"$attr"},{"name":"param","content":"<p>The image element, possibly wrapped in a hyperlink.</p>","types":["string"],"variable":"$content"}]},"args":3},{"name":"img_caption_shortcode_width","file":"wp-includes/media.php","type":"filter","doc":{"description":"Filters the width of an image's caption.","long_description":"By default, the caption is 10 pixels greater than the width of the image, to prevent post content from running up against a floated image.","long_description_html":"<p>By default, the caption is 10 pixels greater than the width of the image, to prevent post content from running up against a floated image.</p>","tags":[{"name":"since","content":"3.7.0"},{"name":"see","content":"","refers":"img_caption_shortcode()"},{"name":"param","content":"<p>Width of the caption in pixels. To remove this inline style, return zero.</p>","types":["int"],"variable":"$width"},{"name":"param","content":"<p>Attributes of the caption shortcode.</p>","types":["array"],"variable":"$atts"},{"name":"param","content":"<p>The image element, possibly wrapped in a hyperlink.</p>","types":["string"],"variable":"$content"}]},"args":3},{"name":"post_gallery","file":"wp-includes/media.php","type":"filter","doc":{"description":"Filters the default gallery shortcode output.","long_description":"If the filtered output isn't empty, it will be used instead of generating the default gallery template.","long_description_html":"<p>If the filtered output isn't empty, it will be used instead of generating the default gallery template.</p>","tags":[{"name":"since","content":"2.5.0"},{"name":"since","content":"4.2.0","description":"<p>The <code>$instance</code> parameter was added.</p>"},{"name":"see","content":"","refers":"gallery_shortcode()"},{"name":"param","content":"<p>The gallery output. Default empty.</p>","types":["string"],"variable":"$output"},{"name":"param","content":"<p>Attributes of the gallery shortcode.</p>","types":["array"],"variable":"$attr"},{"name":"param","content":"<p>Unique numeric ID of this gallery shortcode instance.</p>","types":["int"],"variable":"$instance"}]},"args":3},{"name":"use_default_gallery_style","file":"wp-includes/media.php","type":"filter","doc":{"description":"Filters whether to print default gallery styles.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.1.0"},{"name":"param","content":"<p>Whether to print default gallery styles. Defaults to false if the theme supports HTML5 galleries. Otherwise, defaults to true.</p>","types":["bool"],"variable":"$print"}]},"args":1},{"name":"gallery_style","file":"wp-includes/media.php","type":"filter","doc":{"description":"Filters the default gallery shortcode CSS styles.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.5.0"},{"name":"param","content":"<p>Default CSS styles and opening HTML div container for the gallery shortcode output.</p>","types":["string"],"variable":"$gallery_style"}]},"args":1},{"name":"post_playlist","file":"wp-includes/media.php","type":"filter","doc":{"description":"Filters the playlist output.","long_description":"Returning a non-empty value from the filter will short-circuit generation of the default playlist output, returning the passed value instead.","long_description_html":"<p>Returning a non-empty value from the filter will short-circuit generation of the default playlist output, returning the passed value instead.</p>","tags":[{"name":"since","content":"3.9.0"},{"name":"since","content":"4.2.0","description":"<p>The <code>$instance</code> parameter was added.</p>"},{"name":"param","content":"<p>Playlist output. Default empty.</p>","types":["string"],"variable":"$output"},{"name":"param","content":"<p>An array of shortcode attributes.</p>","types":["array"],"variable":"$attr"},{"name":"param","content":"<p>Unique numeric ID of this playlist shortcode instance.</p>","types":["int"],"variable":"$instance"}]},"args":3},{"name":"wp_mediaelement_fallback","file":"wp-includes/media.php","type":"filter","doc":{"description":"Filters the MediaElement fallback output for no-JS.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.6.0"},{"name":"param","content":"<p>Fallback output for no-JS.</p>","types":["string"],"variable":"$output"},{"name":"param","content":"<p>Media file URL.</p>","types":["string"],"variable":"$url"}]},"args":2},{"name":"wp_audio_extensions","file":"wp-includes/media.php","type":"filter","doc":{"description":"Filters the list of supported audio formats.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.6.0"},{"name":"param","content":"<p>An array of supported audio formats. Defaults are 'mp3', 'ogg', 'flac', 'm4a', 'wav'.</p>","types":["string[]"],"variable":"$extensions"}]},"args":1},{"name":"wp_get_attachment_id3_keys","file":"wp-includes/media.php","type":"filter","doc":{"description":"Filters the editable list of keys to look up data from an attachment's metadata.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.9.0"},{"name":"param","content":"<p>Key/value pairs of field keys to labels.</p>","types":["array"],"variable":"$fields"},{"name":"param","content":"<p>Attachment object.</p>","types":["\\WP_Post"],"variable":"$attachment"},{"name":"param","content":"<p>The context. Accepts 'edit', 'display'. Default 'display'.</p>","types":["string"],"variable":"$context"}]},"args":3},{"name":"wp_audio_shortcode_override","file":"wp-includes/media.php","type":"filter","doc":{"description":"Filters the default audio shortcode output.","long_description":"If the filtered output isn't empty, it will be used instead of generating the default audio template.","long_description_html":"<p>If the filtered output isn't empty, it will be used instead of generating the default audio template.</p>","tags":[{"name":"since","content":"3.6.0"},{"name":"param","content":"<p>Empty variable to be replaced with shortcode markup.</p>","types":["string"],"variable":"$html"},{"name":"param","content":"<p>Attributes of the shortcode. See {@see \\wp_audio_shortcode()}.</p>","types":["array"],"variable":"$attr"},{"name":"param","content":"<p>Shortcode content.</p>","types":["string"],"variable":"$content"},{"name":"param","content":"<p>Unique numeric ID of this audio shortcode instance.</p>","types":["int"],"variable":"$instance"}]},"args":4},{"name":"wp_audio_shortcode_library","file":"wp-includes/media.php","type":"filter","doc":{"description":"Filters the media library used for the audio shortcode.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.6.0"},{"name":"param","content":"<p>Media library used for the audio shortcode.</p>","types":["string"],"variable":"$library"}]},"args":1},{"name":"wp_audio_shortcode_class","file":"wp-includes/media.php","type":"filter","doc":{"description":"Filters the class attribute for the audio shortcode output container.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.6.0"},{"name":"since","content":"4.9.0","description":"<p>The <code>$atts</code> parameter was added.</p>"},{"name":"param","content":"<p>CSS class or list of space-separated classes.</p>","types":["string"],"variable":"$class"},{"name":"param","content":"<p>Array of audio shortcode attributes.</p>","types":["array"],"variable":"$atts"}]},"args":2},{"name":"wp_audio_shortcode","file":"wp-includes/media.php","type":"filter","doc":{"description":"Filters the audio shortcode output.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.6.0"},{"name":"param","content":"<p>Audio shortcode HTML output.</p>","types":["string"],"variable":"$html"},{"name":"param","content":"<p>Array of audio shortcode attributes.</p>","types":["array"],"variable":"$atts"},{"name":"param","content":"<p>Audio file.</p>","types":["string"],"variable":"$audio"},{"name":"param","content":"<p>Post ID.</p>","types":["int"],"variable":"$post_id"},{"name":"param","content":"<p>Media library used for the audio shortcode.</p>","types":["string"],"variable":"$library"}]},"args":5},{"name":"wp_video_extensions","file":"wp-includes/media.php","type":"filter","doc":{"description":"Filters the list of supported video formats.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.6.0"},{"name":"param","content":"<p>An array of supported video formats. Defaults are 'mp4', 'm4v', 'webm', 'ogv', 'flv'.</p>","types":["string[]"],"variable":"$extensions"}]},"args":1},{"name":"wp_video_shortcode_override","file":"wp-includes/media.php","type":"filter","doc":{"description":"Filters the default video shortcode output.","long_description":"If the filtered output isn't empty, it will be used instead of generating the default video template.","long_description_html":"<p>If the filtered output isn't empty, it will be used instead of generating the default video template.</p>","tags":[{"name":"since","content":"3.6.0"},{"name":"see","content":"","refers":"wp_video_shortcode()"},{"name":"param","content":"<p>Empty variable to be replaced with shortcode markup.</p>","types":["string"],"variable":"$html"},{"name":"param","content":"<p>Attributes of the shortcode. See {@see \\wp_video_shortcode()}.</p>","types":["array"],"variable":"$attr"},{"name":"param","content":"<p>Video shortcode content.</p>","types":["string"],"variable":"$content"},{"name":"param","content":"<p>Unique numeric ID of this video shortcode instance.</p>","types":["int"],"variable":"$instance"}]},"args":4},{"name":"wp_video_shortcode_library","file":"wp-includes/media.php","type":"filter","doc":{"description":"Filters the media library used for the video shortcode.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.6.0"},{"name":"param","content":"<p>Media library used for the video shortcode.</p>","types":["string"],"variable":"$library"}]},"args":1},{"name":"wp_video_shortcode_class","file":"wp-includes/media.php","type":"filter","doc":{"description":"Filters the class attribute for the video shortcode output container.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.6.0"},{"name":"since","content":"4.9.0","description":"<p>The <code>$atts</code> parameter was added.</p>"},{"name":"param","content":"<p>CSS class or list of space-separated classes.</p>","types":["string"],"variable":"$class"},{"name":"param","content":"<p>Array of video shortcode attributes.</p>","types":["array"],"variable":"$atts"}]},"args":2},{"name":"wp_video_shortcode","file":"wp-includes/media.php","type":"filter","doc":{"description":"Filters the output of the video shortcode.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.6.0"},{"name":"param","content":"<p>Video shortcode HTML output.</p>","types":["string"],"variable":"$output"},{"name":"param","content":"<p>Array of video shortcode attributes.</p>","types":["array"],"variable":"$atts"},{"name":"param","content":"<p>Video file.</p>","types":["string"],"variable":"$video"},{"name":"param","content":"<p>Post ID.</p>","types":["int"],"variable":"$post_id"},{"name":"param","content":"<p>Media library used for the video shortcode.</p>","types":["string"],"variable":"$library"}]},"args":5},{"name":"{$adjacent}_image_link","aliases":["next_image_link","previous_image_link"],"file":"wp-includes/media.php","type":"filter","doc":{"description":"Filters the adjacent image link.","long_description":"The dynamic portion of the hook name, `$adjacent`, refers to the type of adjacency, either 'next', or 'previous'.\n Possible hook names include:\n\n  - `next_image_link`\n  - `previous_image_link`","long_description_html":"<p>The dynamic portion of the hook name, <code>$adjacent</code>, refers to the type of adjacency, either 'next', or 'previous'.</p> <p>Possible hook names include:</p> <ul> <li><code>next_image_link</code></li> <li><code>previous_image_link</code></li> </ul>","tags":[{"name":"since","content":"3.5.0"},{"name":"param","content":"<p>Adjacent image HTML markup.</p>","types":["string"],"variable":"$output"},{"name":"param","content":"<p>Attachment ID</p>","types":["int"],"variable":"$attachment_id"},{"name":"param","content":"<p>Requested image size. Can be any registered image size name, or an array of width and height values in pixels (in that order).</p>","types":["string","int[]"],"variable":"$size"},{"name":"param","content":"<p>Link text.</p>","types":["string"],"variable":"$text"}]},"args":4},{"name":"upload_size_limit","file":"wp-includes/media.php","type":"filter","doc":{"description":"Filters the maximum upload size allowed in php.ini.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.5.0"},{"name":"param","content":"<p>Max upload size limit in bytes.</p>","types":["int"],"variable":"$size"},{"name":"param","content":"<p>Maximum upload filesize in bytes.</p>","types":["int"],"variable":"$u_bytes"},{"name":"param","content":"<p>Maximum size of POST data in bytes.</p>","types":["int"],"variable":"$p_bytes"}]},"args":3},{"name":"wp_image_editors","file":"wp-includes/media.php","type":"filter","doc":{"description":"Filters the list of image editing library classes.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.5.0"},{"name":"param","content":"<p>Array of available image editor class names. Defaults are 'WP_Image_Editor_Imagick', 'WP_Image_Editor_GD'.</p>","types":["string[]"],"variable":"$image_editors"}]},"args":1},{"name":"plupload_default_settings","file":"wp-includes/media.php","type":"filter","doc":{"description":"Filters the Plupload default settings.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.4.0"},{"name":"param","content":"<p>Default Plupload settings array.</p>","types":["array"],"variable":"$defaults"}]},"args":1},{"name":"plupload_default_params","file":"wp-includes/media.php","type":"filter","doc":{"description":"Filters the Plupload default parameters.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.4.0"},{"name":"param","content":"<p>Default Plupload parameters array.</p>","types":["array"],"variable":"$params"}]},"args":1},{"name":"wp_prepare_attachment_for_js","file":"wp-includes/media.php","type":"filter","doc":{"description":"Filters the attachment data prepared for JavaScript.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.5.0"},{"name":"param","content":"<p>Array of prepared attachment data. See {@see \\wp_prepare_attachment_for_js()}.</p>","types":["array"],"variable":"$response"},{"name":"param","content":"<p>Attachment object.</p>","types":["\\WP_Post"],"variable":"$attachment"},{"name":"param","content":"<p>Array of attachment meta data, or false if there is none.</p>","types":["array","false"],"variable":"$meta"}]},"args":3},{"name":"media_library_show_audio_playlist","file":"wp-includes/media.php","type":"filter","doc":{"description":"Allows showing or hiding the \"Create Audio Playlist\" button in the media library.","long_description":"By default, the \"Create Audio Playlist\" button will always be shown in the media library.  If this filter returns `null`, a query will be run to determine whether the media library contains any audio items.  This was the default behavior prior to version 4.8.0, but this query is expensive for large media libraries.","long_description_html":"<p>By default, the &quot;Create Audio Playlist&quot; button will always be shown in the media library.  If this filter returns <code>null</code>, a query will be run to determine whether the media library contains any audio items.  This was the default behavior prior to version 4.8.0, but this query is expensive for large media libraries.</p>","tags":[{"name":"since","content":"4.7.4"},{"name":"since","content":"4.8.0","description":"<p>The filter's default value is <code>true</code> rather than <code>null</code>.</p>"},{"name":"link","content":"<a href=\"https://core.trac.wordpress.org/ticket/31071\">https://core.trac.wordpress.org/ticket/31071</a>","link":"https://core.trac.wordpress.org/ticket/31071"},{"name":"param","content":"<p>Whether to show the button, or <code>null</code> to decide based on whether any audio files exist in the media library.</p>","types":["bool","null"],"variable":"$show"}]},"args":1},{"name":"media_library_show_video_playlist","file":"wp-includes/media.php","type":"filter","doc":{"description":"Allows showing or hiding the \"Create Video Playlist\" button in the media library.","long_description":"By default, the \"Create Video Playlist\" button will always be shown in the media library.  If this filter returns `null`, a query will be run to determine whether the media library contains any video items.  This was the default behavior prior to version 4.8.0, but this query is expensive for large media libraries.","long_description_html":"<p>By default, the &quot;Create Video Playlist&quot; button will always be shown in the media library.  If this filter returns <code>null</code>, a query will be run to determine whether the media library contains any video items.  This was the default behavior prior to version 4.8.0, but this query is expensive for large media libraries.</p>","tags":[{"name":"since","content":"4.7.4"},{"name":"since","content":"4.8.0","description":"<p>The filter's default value is <code>true</code> rather than <code>null</code>.</p>"},{"name":"link","content":"<a href=\"https://core.trac.wordpress.org/ticket/31071\">https://core.trac.wordpress.org/ticket/31071</a>","link":"https://core.trac.wordpress.org/ticket/31071"},{"name":"param","content":"<p>Whether to show the button, or <code>null</code> to decide based on whether any video files exist in the media library.</p>","types":["bool","null"],"variable":"$show"}]},"args":1},{"name":"media_library_months_with_files","file":"wp-includes/media.php","type":"filter","doc":{"description":"Allows overriding the list of months displayed in the media library.","long_description":"By default (if this filter does not return an array), a query will be run to determine the months that have media items.  This query can be expensive for large media libraries, so it may be desirable for sites to override this behavior.","long_description_html":"<p>By default (if this filter does not return an array), a query will be run to determine the months that have media items.  This query can be expensive for large media libraries, so it may be desirable for sites to override this behavior.</p>","tags":[{"name":"since","content":"4.7.4"},{"name":"link","content":"<a href=\"https://core.trac.wordpress.org/ticket/31071\">https://core.trac.wordpress.org/ticket/31071</a>","link":"https://core.trac.wordpress.org/ticket/31071"},{"name":"param","content":"<p>An array of objects with <code>month</code> and <code>year</code> properties, or <code>null</code> for default behavior.</p>","types":["\\stdClass[]","null"],"variable":"$months"}]},"args":1},{"name":"media_library_infinite_scrolling","file":"wp-includes/media.php","type":"filter","doc":{"description":"Filters whether the Media Library grid has infinite scrolling. Default `false`.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.8.0"},{"name":"param","content":"<p>Whether the Media Library grid has infinite scrolling.</p>","types":["bool"],"variable":"$infinite"}]},"args":1},{"name":"media_view_settings","file":"wp-includes/media.php","type":"filter","doc":{"description":"Filters the media view settings.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.5.0"},{"name":"param","content":"<p>List of media view settings.</p>","types":["array"],"variable":"$settings"},{"name":"param","content":"<p>Post object.</p>","types":["\\WP_Post"],"variable":"$post"}]},"args":2},{"name":"media_view_strings","file":"wp-includes/media.php","type":"filter","doc":{"description":"Filters the media view strings.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.5.0"},{"name":"param","content":"<p>Array of media view strings keyed by the name they'll be referenced by in JavaScript.</p>","types":["string[]"],"variable":"$strings"},{"name":"param","content":"<p>Post object.</p>","types":["\\WP_Post"],"variable":"$post"}]},"args":2},{"name":"get_attached_media_args","file":"wp-includes/media.php","type":"filter","doc":{"description":"Filters arguments used to retrieve media attached to the given post.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.6.0"},{"name":"param","content":"<p>Post query arguments.</p>","types":["array"],"variable":"$args"},{"name":"param","content":"<p>Mime type of the desired media.</p>","types":["string"],"variable":"$type"},{"name":"param","content":"<p>Post object.</p>","types":["\\WP_Post"],"variable":"$post"}]},"args":3},{"name":"get_attached_media","file":"wp-includes/media.php","type":"filter","doc":{"description":"Filters the list of media attached to the given post.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.6.0"},{"name":"param","content":"<p>Array of media attached to the given post.</p>","types":["\\WP_Post[]"],"variable":"$children"},{"name":"param","content":"<p>Mime type of the media desired.</p>","types":["string"],"variable":"$type"},{"name":"param","content":"<p>Post object.</p>","types":["\\WP_Post"],"variable":"$post"}]},"args":3},{"name":"media_embedded_in_content_allowed_types","file":"wp-includes/media.php","type":"filter","doc":{"description":"Filters the embedded media types that are allowed to be returned from the content blob.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.2.0"},{"name":"param","content":"<p>An array of allowed media types. Default media types are 'audio', 'video', 'object', 'embed', and 'iframe'.</p>","types":["string[]"],"variable":"$allowed_media_types"}]},"args":1},{"name":"get_post_galleries","file":"wp-includes/media.php","type":"filter","doc":{"description":"Filters the list of all found galleries in the given post.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.6.0"},{"name":"param","content":"<p>Associative array of all found post galleries.</p>","types":["array"],"variable":"$galleries"},{"name":"param","content":"<p>Post object.</p>","types":["\\WP_Post"],"variable":"$post"}]},"args":2},{"name":"get_post_gallery","file":"wp-includes/media.php","type":"filter","doc":{"description":"Filters the first-found post gallery.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.6.0"},{"name":"param","content":"<p>The first-found post gallery.</p>","types":["array"],"variable":"$gallery"},{"name":"param","content":"<p>Post ID or object.</p>","types":["int","\\WP_Post"],"variable":"$post"},{"name":"param","content":"<p>Associative array of all found post galleries.</p>","types":["array"],"variable":"$galleries"}]},"args":3},{"name":"pre_attachment_url_to_postid","file":"wp-includes/media.php","type":"filter","doc":{"description":"Filters the attachment ID to allow short-circuit the function.","long_description":"Allows plugins to short-circuit attachment ID lookups. Plugins making use of this function should return:\n - 0 (integer) to indicate the attachment is not found, - attachment ID (integer) to indicate the attachment ID found, - null to indicate WordPress should proceed with the lookup.\n Warning: The post ID may be null or zero, both of which cast to a boolean false. For information about casting to booleans see the {@link https://www.php.net/manual/en/language.types.boolean.php PHP documentation}. Use the === operator for testing the post ID when developing filters using this hook.","long_description_html":"<p>Allows plugins to short-circuit attachment ID lookups. Plugins making use of this function should return:</p> <ul> <li>0 (integer) to indicate the attachment is not found,</li> <li>attachment ID (integer) to indicate the attachment ID found,</li> <li>null to indicate WordPress should proceed with the lookup.</li> </ul> <p>Warning: The post ID may be null or zero, both of which cast to a boolean false. For information about casting to booleans see the {@link <a href=\"https://www.php.net/manual/en/language.types.boolean.php\">https://www.php.net/manual/en/language.types.boolean.php</a> PHP documentation}. Use the === operator for testing the post ID when developing filters using this hook.</p>","tags":[{"name":"param","content":"<p>The result of the post ID lookup. Null to indicate no lookup has been attempted. Default null.</p>","types":["int","null"],"variable":"$post_id"},{"name":"param","content":"<p>The URL being looked up.</p>","types":["string"],"variable":"$url"}]},"args":2},{"name":"attachment_url_to_postid","file":"wp-includes/media.php","type":"filter","doc":{"description":"Filters an attachment ID found by URL.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.2.0"},{"name":"param","content":"<p>The post_id (if any) found by the function.</p>","types":["int","null"],"variable":"$post_id"},{"name":"param","content":"<p>The URL being looked up.</p>","types":["string"],"variable":"$url"}]},"args":2},{"name":"pre_wp_get_loading_optimization_attributes","file":"wp-includes/media.php","type":"filter","doc":{"description":"Filters whether to short-circuit loading optimization attributes.","long_description":"Returning an array from the filter will effectively short-circuit the loading of optimization attributes, returning that value instead.","long_description_html":"<p>Returning an array from the filter will effectively short-circuit the loading of optimization attributes, returning that value instead.</p>","tags":[{"name":"since","content":"6.4.0"},{"name":"param","content":"<p>False by default, or array of loading optimization attributes to short-circuit.</p>","types":["array","false"],"variable":"$loading_attrs"},{"name":"param","content":"<p>The tag name.</p>","types":["string"],"variable":"$tag_name"},{"name":"param","content":"<p>Array of the attributes for the tag.</p>","types":["array"],"variable":"$attr"},{"name":"param","content":"<p>Context for the element for which the loading optimization attribute is requested.</p>","types":["string"],"variable":"$context"}]},"args":4},{"name":"wp_loading_optimization_force_header_contexts","file":"wp-includes/media.php","type":"filter","doc":{"description":"Filters the header-specific contexts.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"6.4.0"},{"name":"param","content":"<p>Map of contexts for which elements should be considered in the header of the page, as $context =&gt; $enabled pairs. The $enabled should always be true.</p>","types":["array"],"variable":"$default_header_enforced_contexts"}]},"args":1},{"name":"wp_get_loading_optimization_attributes","file":"wp-includes/media.php","type":"filter","doc":{"description":"Filters the loading optimization attributes.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"6.4.0"},{"name":"param","content":"<p>The loading optimization attributes.</p>","types":["array"],"variable":"$loading_attrs"},{"name":"param","content":"<p>The tag name.</p>","types":["string"],"variable":"$tag_name"},{"name":"param","content":"<p>Array of the attributes for the tag.</p>","types":["array"],"variable":"$attr"},{"name":"param","content":"<p>Context for the element for which the loading optimization attribute is requested.</p>","types":["string"],"variable":"$context"}]},"args":4},{"name":"wp_omit_loading_attr_threshold","file":"wp-includes/media.php","type":"filter","doc":{"description":"Filters the threshold for how many of the first content media elements to not lazy-load.","long_description":"For these first content media elements, the `loading` attribute will be omitted. By default, this is the case for only the very first content media element.","long_description_html":"<p>For these first content media elements, the <code>loading</code> attribute will be omitted. By default, this is the case for only the very first content media element.</p>","tags":[{"name":"since","content":"5.9.0"},{"name":"since","content":"6.3.0","description":"<p>The default threshold was changed from 1 to 3.</p>"},{"name":"param","content":"<p>The number of media elements where the <code>loading</code> attribute will not be added. Default 3.</p>","types":["int"],"variable":"$omit_threshold"}]},"args":1},{"name":"wp_min_priority_img_pixels","file":"wp-includes/media.php","type":"filter","doc":{"description":"Filters the minimum square-pixels threshold for an image to be eligible as the high-priority image.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"6.3.0"},{"name":"param","content":"<p>Minimum square-pixels threshold. Default 50000.</p>","types":["int"],"variable":"$threshold"}]},"args":1},{"name":"image_editor_output_format","file":"wp-includes/media.php","type":"filter","doc":{"description":"Filters the image editor output format mapping.","long_description":"Enables filtering the mime type used to save images. By default HEIC/HEIF images are converted to JPEGs.","long_description_html":"<p>Enables filtering the mime type used to save images. By default HEIC/HEIF images are converted to JPEGs.</p>","tags":[{"name":"see","content":"","refers":"WP_Image_Editor::get_output_format()"},{"name":"since","content":"5.8.0"},{"name":"since","content":"6.7.0","description":"<p>The default was changed from an empty array to an array containing the HEIC/HEIF images mime types.</p>"},{"name":"param","content":"<p>{ An array of mime type mappings. Maps a source mime type to a new destination mime type. By default maps HEIC/HEIF input to JPEG output.</p>","types":["string[]"],"variable":"$output_format"},{"name":"param","content":"<p>Path to the image.</p>","types":["string"],"variable":"$filename"},{"name":"param","content":"<p>The source image mime type.</p>","types":["string"],"variable":"$mime_type"}]},"args":3},{"name":"incompatible_sql_modes","file":"wp-includes/class-wpdb.php","type":"filter","doc":{"description":"Filters the list of incompatible SQL modes to exclude.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.9.0"},{"name":"param","content":"<p>An array of incompatible modes.</p>","types":["array"],"variable":"$incompatible_modes"}]},"args":1},{"name":"query","file":"wp-includes/class-wpdb.php","type":"filter","doc":{"description":"Filters the database query.","long_description":"Some queries are made before the plugins have been loaded, and thus cannot be filtered with this method.","long_description_html":"<p>Some queries are made before the plugins have been loaded, and thus cannot be filtered with this method.</p>","tags":[{"name":"since","content":"2.1.0"},{"name":"param","content":"<p>Database query.</p>","types":["string"],"variable":"$query"}]},"args":1},{"name":"log_query_custom_data","file":"wp-includes/class-wpdb.php","type":"filter","doc":{"description":"Filters the custom data to log alongside a query.","long_description":"Caution should be used when modifying any of this data, it is recommended that any additional information you need to store about a query be added as a new associative array element.","long_description_html":"<p>Caution should be used when modifying any of this data, it is recommended that any additional information you need to store about a query be added as a new associative array element.</p>","tags":[{"name":"since","content":"5.3.0"},{"name":"param","content":"<p>Custom query data.</p>","types":["array"],"variable":"$query_data"},{"name":"param","content":"<p>The query's SQL.</p>","types":["string"],"variable":"$query"},{"name":"param","content":"<p>Total time spent on the query, in seconds.</p>","types":["float"],"variable":"$query_time"},{"name":"param","content":"<p>Comma-separated list of the calling functions.</p>","types":["string"],"variable":"$query_callstack"},{"name":"param","content":"<p>Unix timestamp of the time at the start of the query.</p>","types":["float"],"variable":"$query_start"}]},"args":5},{"name":"pre_get_table_charset","file":"wp-includes/class-wpdb.php","type":"filter","doc":{"description":"Filters the table charset value before the DB is checked.","long_description":"Returning a non-null value from the filter will effectively short-circuit checking the DB for the charset, returning that value instead.","long_description_html":"<p>Returning a non-null value from the filter will effectively short-circuit checking the DB for the charset, returning that value instead.</p>","tags":[{"name":"since","content":"4.2.0"},{"name":"param","content":"<p>The character set to use, WP_Error object if it couldn't be found. Default null.</p>","types":["string","\\WP_Error","null"],"variable":"$charset"},{"name":"param","content":"<p>The name of the table being checked.</p>","types":["string"],"variable":"$table"}]},"args":2},{"name":"pre_get_col_charset","file":"wp-includes/class-wpdb.php","type":"filter","doc":{"description":"Filters the column charset value before the DB is checked.","long_description":"Passing a non-null value to the filter will short-circuit checking the DB for the charset, returning that value instead.","long_description_html":"<p>Passing a non-null value to the filter will short-circuit checking the DB for the charset, returning that value instead.</p>","tags":[{"name":"since","content":"4.2.0"},{"name":"param","content":"<p>The character set to use. Default null.</p>","types":["string","null","false","\\WP_Error"],"variable":"$charset"},{"name":"param","content":"<p>The name of the table being checked.</p>","types":["string"],"variable":"$table"},{"name":"param","content":"<p>The name of the column being checked.</p>","types":["string"],"variable":"$column"}]},"args":3},{"name":"recovery_email_support_info","file":"wp-includes/class-wp-recovery-mode-email-service.php","type":"filter","doc":{"description":"Filters the support message sent with the the fatal error protection email.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.2.0"},{"name":"param","content":"<p>The Message to include in the email.</p>","types":["string"],"variable":"$message"}]},"args":1},{"name":"recovery_email_debug_info","file":"wp-includes/class-wp-recovery-mode-email-service.php","type":"filter","doc":{"description":"Filters the debug information included in the fatal error protection email.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.3.0"},{"name":"param","content":"<p>An associative array of debug information.</p>","types":["array"],"variable":"$message"}]},"args":1},{"name":"recovery_mode_email","file":"wp-includes/class-wp-recovery-mode-email-service.php","type":"filter","doc":{"description":"Filters the contents of the Recovery Mode email.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.2.0"},{"name":"since","content":"5.6.0","description":"<p>The <code>$email</code> argument includes the <code>attachments</code> key.</p>"},{"name":"param","content":"<p>{ Used to build a call to wp_mail().</p>","types":["array"],"variable":"$email"},{"name":"param","content":"<p>URL to enter recovery mode.</p>","types":["string"],"variable":"$url"}]},"args":2},{"name":"widget_block_content","file":"wp-includes/widgets/class-wp-widget-block.php","type":"filter","doc":{"description":"Filters the content of the Block widget before output.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.8.0"},{"name":"param","content":"<p>The widget content.</p>","types":["string"],"variable":"$content"},{"name":"param","content":"<p>Array of settings for the current widget.</p>","types":["array"],"variable":"$instance"},{"name":"param","content":"<p>Current Block widget instance.</p>","types":["\\WP_Widget_Block"],"variable":"$widget"}]},"args":3},{"name":"widget_block_dynamic_classname","file":"wp-includes/widgets/class-wp-widget-block.php","type":"filter","doc":{"description":"The classname used in the block widget's container HTML.","long_description":"This can be set according to the name of the block contained by the block widget.","long_description_html":"<p>This can be set according to the name of the block contained by the block widget.</p>","tags":[{"name":"since","content":"5.8.0"},{"name":"param","content":"<p>The classname to be used in the block widget's container HTML, e.g. 'widget_block widget_text'.</p>","types":["string"],"variable":"$classname"},{"name":"param","content":"<p>The name of the block contained by the block widget, e.g. 'core/paragraph'.</p>","types":["string"],"variable":"$block_name"}]},"args":2},{"name":"widget_posts_args","file":"wp-includes/widgets/class-wp-widget-recent-posts.php","type":"filter","doc":{"description":"Filters the arguments for the Recent Posts widget.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.4.0"},{"name":"since","content":"4.9.0","description":"<p>Added the <code>$instance</code> parameter.</p>"},{"name":"see","content":"","refers":"WP_Query::get_posts()"},{"name":"param","content":"<p>An array of arguments used to retrieve the recent posts.</p>","types":["array"],"variable":"$args"},{"name":"param","content":"<p>Array of settings for the current widget.</p>","types":["array"],"variable":"$instance"}]},"args":2},{"name":"widget_links_args","file":"wp-includes/widgets/class-wp-widget-links.php","type":"filter","doc":{"description":"Filters the arguments for the Links widget.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.6.0"},{"name":"since","content":"4.4.0","description":"<p>Added the <code>$instance</code> parameter.</p>"},{"name":"see","content":"","refers":"wp_list_bookmarks()"},{"name":"param","content":"<p>An array of arguments to retrieve the links list.</p>","types":["array"],"variable":"$widget_links_args"},{"name":"param","content":"<p>The settings for the particular instance of the widget.</p>","types":["array"],"variable":"$instance"}]},"args":2},{"name":"navigation_widgets_format","file":"wp-includes/widgets/class-wp-nav-menu-widget.php","type":"filter","doc":{"description":"Filters the HTML format of widgets with navigation links.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.5.0"},{"name":"param","content":"<p>The type of markup to use in widgets with navigation links. Accepts 'html5', 'xhtml'.</p>","types":["string"],"variable":"$format"}]},"args":1},{"name":"widget_nav_menu_args","file":"wp-includes/widgets/class-wp-nav-menu-widget.php","type":"filter","doc":{"description":"Filters the arguments for the Navigation Menu widget.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.2.0"},{"name":"since","content":"4.4.0","description":"<p>Added the <code>$instance</code> parameter.</p>"},{"name":"param","content":"<p>{ An array of arguments passed to wp_nav_menu() to retrieve a navigation menu.</p>","types":["array"],"variable":"$nav_menu_args"},{"name":"param","content":"<p>Nav menu object for the current menu.</p>","types":["\\WP_Term"],"variable":"$nav_menu"},{"name":"param","content":"<p>Display arguments for the current widget.</p>","types":["array"],"variable":"$args"},{"name":"param","content":"<p>Array of settings for the current widget.</p>","types":["array"],"variable":"$instance"}]},"args":4},{"name":"widget_{$this->id_base}_instance_schema","file":"wp-includes/widgets/class-wp-widget-media.php","type":"filter","doc":{"description":"Filters the media widget instance schema to add additional properties.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.9.0"},{"name":"param","content":"<p>Instance schema.</p>","types":["array"],"variable":"$schema"},{"name":"param","content":"<p>Widget object.</p>","types":["\\WP_Widget_Media"],"variable":"$widget"}]},"args":2},{"name":"widget_{$this->id_base}_instance","file":"wp-includes/widgets/class-wp-widget-media.php","type":"filter","doc":{"description":"Filters the media widget instance prior to rendering the media.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.8.0"},{"name":"param","content":"<p>Instance data.</p>","types":["array"],"variable":"$instance"},{"name":"param","content":"<p>Widget args.</p>","types":["array"],"variable":"$args"},{"name":"param","content":"<p>Widget object.</p>","types":["\\WP_Widget_Media"],"variable":"$widget"}]},"args":3},{"name":"widget_meta_poweredby","file":"wp-includes/widgets/class-wp-widget-meta.php","type":"filter","doc":{"description":"Filters the \"WordPress.org\" list item HTML in the Meta widget.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.6.0"},{"name":"since","content":"4.9.0","description":"<p>Added the <code>$instance</code> parameter.</p>"},{"name":"param","content":"<p>Default HTML for the WordPress.org list item.</p>","types":["string"],"variable":"$html"},{"name":"param","content":"<p>Array of settings for the current widget.</p>","types":["array"],"variable":"$instance"}]},"args":2},{"name":"show_recent_comments_widget_style","file":"wp-includes/widgets/class-wp-widget-recent-comments.php","type":"filter","doc":{"description":"","long_description":"","long_description_html":"","tags":[]},"args":2},{"name":"widget_comments_args","file":"wp-includes/widgets/class-wp-widget-recent-comments.php","type":"filter","doc":{"description":"Filters the arguments for the Recent Comments widget.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.4.0"},{"name":"since","content":"4.9.0","description":"<p>Added the <code>$instance</code> parameter.</p>"},{"name":"see","content":"<p>for information on accepted arguments.</p>","refers":"WP_Comment_Query::query()"},{"name":"param","content":"<p>An array of arguments used to retrieve the recent comments.</p>","types":["array"],"variable":"$comment_args"},{"name":"param","content":"<p>Array of settings for the current widget.</p>","types":["array"],"variable":"$instance"}]},"args":2},{"name":"widget_text","file":"wp-includes/widgets/class-wp-widget-text.php","type":"filter","doc":{"description":"Filters the content of the Text widget.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.3.0"},{"name":"since","content":"4.4.0","description":"<p>Added the <code>$widget</code> parameter.</p>"},{"name":"since","content":"4.8.1","description":"<p>The <code>$widget</code> param may now be a <code>WP_Widget_Custom_HTML</code> object in addition to a <code>WP_Widget_Text</code> object.</p>"},{"name":"param","content":"<p>The widget content.</p>","types":["string"],"variable":"$text"},{"name":"param","content":"<p>Array of settings for the current widget.</p>","types":["array"],"variable":"$instance"},{"name":"param","content":"<p>Current text or HTML widget instance.</p>","types":["\\WP_Widget_Text","\\WP_Widget_Custom_HTML"],"variable":"$widget"}]},"args":3},{"name":"widget_text_content","file":"wp-includes/widgets/class-wp-widget-text.php","type":"filter","doc":{"description":"Filters the content of the Text widget to apply changes expected from the visual (TinyMCE) editor.","long_description":"By default a subset of the_content filters are applied, including wpautop and wptexturize.","long_description_html":"<p>By default a subset of the_content filters are applied, including wpautop and wptexturize.</p>","tags":[{"name":"since","content":"4.8.0"},{"name":"param","content":"<p>The widget content.</p>","types":["string"],"variable":"$text"},{"name":"param","content":"<p>Array of settings for the current widget.</p>","types":["array"],"variable":"$instance"},{"name":"param","content":"<p>Current Text widget instance.</p>","types":["\\WP_Widget_Text"],"variable":"$widget"}]},"args":3},{"name":"widget_tag_cloud_args","file":"wp-includes/widgets/class-wp-widget-tag-cloud.php","type":"filter","doc":{"description":"Filters the taxonomy used in the Tag Cloud widget.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.8.0"},{"name":"since","content":"3.0.0","description":"<p>Added taxonomy drop-down.</p>"},{"name":"since","content":"4.9.0","description":"<p>Added the <code>$instance</code> parameter.</p>"},{"name":"see","content":"","refers":"wp_tag_cloud()"},{"name":"param","content":"<p>Args used for the tag cloud widget.</p>","types":["array"],"variable":"$args"},{"name":"param","content":"<p>Array of settings for the current widget.</p>","types":["array"],"variable":"$instance"}]},"args":2},{"name":"rss_widget_feed_link","file":"wp-includes/widgets/class-wp-widget-rss.php","type":"filter","doc":{"description":"Filters the classic RSS widget's feed icon link.","long_description":"Themes can remove the icon link by using `add_filter( 'rss_widget_feed_link', '__return_empty_string' );`.","long_description_html":"<p>Themes can remove the icon link by using <code>add_filter( 'rss_widget_feed_link', '__return_empty_string' );</code>.</p>","tags":[{"name":"since","content":"5.9.0"},{"name":"param","content":"<p>HTML for link to RSS feed.</p>","types":["string","false"],"variable":"$feed_link"},{"name":"param","content":"<p>Array of settings for the current widget.</p>","types":["array"],"variable":"$instance"}]},"args":2},{"name":"widget_title","file":"wp-includes/widgets/class-wp-widget-pages.php","type":"filter","doc":{"description":"Filters the widget title.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.6.0"},{"name":"param","content":"<p>The widget title. Default 'Pages'.</p>","types":["string"],"variable":"$title"},{"name":"param","content":"<p>Array of settings for the current widget.</p>","types":["array"],"variable":"$instance"},{"name":"param","content":"<p>The widget ID.</p>","types":["mixed"],"variable":"$id_base"}]},"args":3},{"name":"widget_pages_args","file":"wp-includes/widgets/class-wp-widget-pages.php","type":"filter","doc":{"description":"Filters the arguments for the Pages widget.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.8.0"},{"name":"since","content":"4.9.0","description":"<p>Added the <code>$instance</code> parameter.</p>"},{"name":"see","content":"","refers":"wp_list_pages()"},{"name":"param","content":"<p>An array of arguments to retrieve the pages list.</p>","types":["array"],"variable":"$args"},{"name":"param","content":"<p>Array of settings for the current widget.</p>","types":["array"],"variable":"$instance"}]},"args":2},{"name":"widget_categories_dropdown_args","file":"wp-includes/widgets/class-wp-widget-categories.php","type":"filter","doc":{"description":"Filters the arguments for the Categories widget drop-down.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.8.0"},{"name":"since","content":"4.9.0","description":"<p>Added the <code>$instance</code> parameter.</p>"},{"name":"see","content":"","refers":"wp_dropdown_categories()"},{"name":"param","content":"<p>An array of Categories widget drop-down arguments.</p>","types":["array"],"variable":"$cat_args"},{"name":"param","content":"<p>Array of settings for the current widget.</p>","types":["array"],"variable":"$instance"}]},"args":2},{"name":"widget_categories_args","file":"wp-includes/widgets/class-wp-widget-categories.php","type":"filter","doc":{"description":"Filters the arguments for the Categories widget.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.8.0"},{"name":"since","content":"4.9.0","description":"<p>Added the <code>$instance</code> parameter.</p>"},{"name":"param","content":"<p>An array of Categories widget options.</p>","types":["array"],"variable":"$cat_args"},{"name":"param","content":"<p>Array of settings for the current widget.</p>","types":["array"],"variable":"$instance"}]},"args":2},{"name":"widget_custom_html_content","file":"wp-includes/widgets/class-wp-widget-custom-html.php","type":"filter","doc":{"description":"Filters the content of the Custom HTML widget.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.8.1"},{"name":"param","content":"<p>The widget content.</p>","types":["string"],"variable":"$content"},{"name":"param","content":"<p>Array of settings for the current widget.</p>","types":["array"],"variable":"$instance"},{"name":"param","content":"<p>Current Custom HTML widget instance.</p>","types":["\\WP_Widget_Custom_HTML"],"variable":"$widget"}]},"args":3},{"name":"widget_archives_dropdown_args","file":"wp-includes/widgets/class-wp-widget-archives.php","type":"filter","doc":{"description":"Filters the arguments for the Archives widget drop-down.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.8.0"},{"name":"since","content":"4.9.0","description":"<p>Added the <code>$instance</code> parameter.</p>"},{"name":"see","content":"","refers":"wp_get_archives()"},{"name":"param","content":"<p>An array of Archives widget drop-down arguments.</p>","types":["array"],"variable":"$args"},{"name":"param","content":"<p>Settings for the current Archives widget instance.</p>","types":["array"],"variable":"$instance"}]},"args":2},{"name":"widget_archives_args","file":"wp-includes/widgets/class-wp-widget-archives.php","type":"filter","doc":{"description":"Filters the arguments for the Archives widget.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.8.0"},{"name":"since","content":"4.9.0","description":"<p>Added the <code>$instance</code> parameter.</p>"},{"name":"see","content":"","refers":"wp_get_archives()"},{"name":"param","content":"<p>An array of Archives option arguments.</p>","types":["array"],"variable":"$args"},{"name":"param","content":"<p>Array of settings for the current widget.</p>","types":["array"],"variable":"$instance"}]},"args":2},{"name":"$hook_name","file":"wp-includes/plugin.php","type":"filter","doc":{"description":"","long_description":"","long_description_html":"","tags":[]},"args":1},{"name":"post_search_columns","file":"wp-includes/class-wp-query.php","type":"filter","doc":{"description":"Filters the columns to search in a WP_Query search.","long_description":"The supported columns are `post_title`, `post_excerpt` and `post_content`. They are all included by default.","long_description_html":"<p>The supported columns are <code>post_title</code>, <code>post_excerpt</code> and <code>post_content</code>. They are all included by default.</p>","tags":[{"name":"since","content":"6.2.0"},{"name":"param","content":"<p>Array of column names to be searched.</p>","types":["string[]"],"variable":"$search_columns"},{"name":"param","content":"<p>Text being searched.</p>","types":["string"],"variable":"$search"},{"name":"param","content":"<p>The current WP_Query instance.</p>","types":["\\WP_Query"],"variable":"$query"}]},"args":3},{"name":"wp_query_search_exclusion_prefix","file":"wp-includes/class-wp-query.php","type":"filter","doc":{"description":"Filters the prefix that indicates that a search term should be excluded from results.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.7.0"},{"name":"param","content":"<p>The prefix. Default '-'. Returning an empty value disables exclusions.</p>","types":["string"],"variable":"$exclusion_prefix"}]},"args":1},{"name":"wp_search_stopwords","file":"wp-includes/class-wp-query.php","type":"filter","doc":{"description":"Filters stopwords used when parsing search terms.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.7.0"},{"name":"param","content":"<p>Array of stopwords.</p>","types":["string[]"],"variable":"$stopwords"}]},"args":1},{"name":"wp_allow_query_attachment_by_filename","file":"wp-includes/class-wp-query.php","type":"filter","doc":{"description":"Filters whether an attachment query should include filenames or not.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"6.0.3"},{"name":"param","content":"<p>Whether or not to include filenames.</p>","types":["bool"],"variable":"$allow_query_attachment_by_filename"}]},"args":1},{"name":"posts_search","file":"wp-includes/class-wp-query.php","type":"filter","doc":{"description":"Filters the search SQL that is used in the WHERE clause of WP_Query.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.0.0"},{"name":"param","content":"<p>Search SQL for WHERE clause.</p>","types":["string"],"variable":"$search"},{"name":"param","content":"<p>The current WP_Query object.</p>","types":["\\WP_Query"],"variable":"$query"}]},"args":1},{"name":"posts_search_orderby","file":"wp-includes/class-wp-query.php","type":"filter","doc":{"description":"Filters the ORDER BY used when ordering search results.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.7.0"},{"name":"param","content":"<p>The ORDER BY clause.</p>","types":["string"],"variable":"$search_orderby"},{"name":"param","content":"<p>The current WP_Query instance.</p>","types":["\\WP_Query"],"variable":"$query"}]},"args":2},{"name":"posts_where","file":"wp-includes/class-wp-query.php","type":"filter","doc":{"description":"Filters the WHERE clause of the query.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"1.5.0"},{"name":"param","content":"<p>The WHERE clause of the query.</p>","types":["string"],"variable":"$where"},{"name":"param","content":"<p>The WP_Query instance (passed by reference).</p>","types":["\\WP_Query"],"variable":"$query"}]},"args":1},{"name":"posts_join","file":"wp-includes/class-wp-query.php","type":"filter","doc":{"description":"Filters the JOIN clause of the query.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"1.5.0"},{"name":"param","content":"<p>The JOIN clause of the query.</p>","types":["string"],"variable":"$join"},{"name":"param","content":"<p>The WP_Query instance (passed by reference).</p>","types":["\\WP_Query"],"variable":"$query"}]},"args":1},{"name":"comment_feed_join","file":"wp-includes/class-wp-query.php","type":"filter","doc":{"description":"Filters the JOIN clause of the comments feed query before sending.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.2.0"},{"name":"param","content":"<p>The JOIN clause of the query.</p>","types":["string"],"variable":"$cjoin"},{"name":"param","content":"<p>The WP_Query instance (passed by reference).</p>","types":["\\WP_Query"],"variable":"$query"}]},"args":1},{"name":"comment_feed_where","file":"wp-includes/class-wp-query.php","type":"filter","doc":{"description":"Filters the WHERE clause of the comments feed query before sending.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.2.0"},{"name":"param","content":"<p>The WHERE clause of the query.</p>","types":["string"],"variable":"$cwhere"},{"name":"param","content":"<p>The WP_Query instance (passed by reference).</p>","types":["\\WP_Query"],"variable":"$query"}]},"args":1},{"name":"comment_feed_groupby","file":"wp-includes/class-wp-query.php","type":"filter","doc":{"description":"Filters the GROUP BY clause of the comments feed query before sending.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.2.0"},{"name":"param","content":"<p>The GROUP BY clause of the query.</p>","types":["string"],"variable":"$cgroupby"},{"name":"param","content":"<p>The WP_Query instance (passed by reference).</p>","types":["\\WP_Query"],"variable":"$query"}]},"args":1},{"name":"comment_feed_orderby","file":"wp-includes/class-wp-query.php","type":"filter","doc":{"description":"Filters the ORDER BY clause of the comments feed query before sending.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.8.0"},{"name":"param","content":"<p>The ORDER BY clause of the query.</p>","types":["string"],"variable":"$corderby"},{"name":"param","content":"<p>The WP_Query instance (passed by reference).</p>","types":["\\WP_Query"],"variable":"$query"}]},"args":1},{"name":"comment_feed_limits","file":"wp-includes/class-wp-query.php","type":"filter","doc":{"description":"Filters the LIMIT clause of the comments feed query before sending.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.8.0"},{"name":"param","content":"<p>The JOIN clause of the query.</p>","types":["string"],"variable":"$climits"},{"name":"param","content":"<p>The WP_Query instance (passed by reference).</p>","types":["\\WP_Query"],"variable":"$query"}]},"args":1},{"name":"posts_where_paged","file":"wp-includes/class-wp-query.php","type":"filter","doc":{"description":"Filters the WHERE clause of the query.","long_description":"Specifically for manipulating paging queries.","long_description_html":"<p>Specifically for manipulating paging queries.</p>","tags":[{"name":"since","content":"1.5.0"},{"name":"param","content":"<p>The WHERE clause of the query.</p>","types":["string"],"variable":"$where"},{"name":"param","content":"<p>The WP_Query instance (passed by reference).</p>","types":["\\WP_Query"],"variable":"$query"}]},"args":1},{"name":"posts_groupby","file":"wp-includes/class-wp-query.php","type":"filter","doc":{"description":"Filters the GROUP BY clause of the query.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.0.0"},{"name":"param","content":"<p>The GROUP BY clause of the query.</p>","types":["string"],"variable":"$groupby"},{"name":"param","content":"<p>The WP_Query instance (passed by reference).</p>","types":["\\WP_Query"],"variable":"$query"}]},"args":1},{"name":"posts_join_paged","file":"wp-includes/class-wp-query.php","type":"filter","doc":{"description":"Filters the JOIN clause of the query.","long_description":"Specifically for manipulating paging queries.","long_description_html":"<p>Specifically for manipulating paging queries.</p>","tags":[{"name":"since","content":"1.5.0"},{"name":"param","content":"<p>The JOIN clause of the query.</p>","types":["string"],"variable":"$join"},{"name":"param","content":"<p>The WP_Query instance (passed by reference).</p>","types":["\\WP_Query"],"variable":"$query"}]},"args":1},{"name":"posts_orderby","file":"wp-includes/class-wp-query.php","type":"filter","doc":{"description":"Filters the ORDER BY clause of the query.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"1.5.1"},{"name":"param","content":"<p>The ORDER BY clause of the query.</p>","types":["string"],"variable":"$orderby"},{"name":"param","content":"<p>The WP_Query instance (passed by reference).</p>","types":["\\WP_Query"],"variable":"$query"}]},"args":1},{"name":"posts_distinct","file":"wp-includes/class-wp-query.php","type":"filter","doc":{"description":"Filters the DISTINCT clause of the query.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.1.0"},{"name":"param","content":"<p>The DISTINCT clause of the query.</p>","types":["string"],"variable":"$distinct"},{"name":"param","content":"<p>The WP_Query instance (passed by reference).</p>","types":["\\WP_Query"],"variable":"$query"}]},"args":1},{"name":"post_limits","file":"wp-includes/class-wp-query.php","type":"filter","doc":{"description":"Filters the LIMIT clause of the query.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.1.0"},{"name":"param","content":"<p>The LIMIT clause of the query.</p>","types":["string"],"variable":"$limits"},{"name":"param","content":"<p>The WP_Query instance (passed by reference).</p>","types":["\\WP_Query"],"variable":"$query"}]},"args":1},{"name":"posts_fields","file":"wp-includes/class-wp-query.php","type":"filter","doc":{"description":"Filters the SELECT clause of the query.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.1.0"},{"name":"param","content":"<p>The SELECT clause of the query.</p>","types":["string"],"variable":"$fields"},{"name":"param","content":"<p>The WP_Query instance (passed by reference).</p>","types":["\\WP_Query"],"variable":"$query"}]},"args":1},{"name":"posts_clauses","file":"wp-includes/class-wp-query.php","type":"filter","doc":{"description":"Filters all query clauses at once, for convenience.","long_description":"Covers the WHERE, GROUP BY, JOIN, ORDER BY, DISTINCT, fields (SELECT), and LIMIT clauses.","long_description_html":"<p>Covers the WHERE, GROUP BY, JOIN, ORDER BY, DISTINCT, fields (SELECT), and LIMIT clauses.</p>","tags":[{"name":"since","content":"3.1.0"},{"name":"param","content":"<p>{ Associative array of the clauses for the query.</p>","types":["string[]"],"variable":"$clauses"},{"name":"param","content":"<p>The WP_Query instance (passed by reference).</p>","types":["\\WP_Query"],"variable":"$query"}]},"args":1},{"name":"posts_where_request","file":"wp-includes/class-wp-query.php","type":"filter","doc":{"description":"Filters the WHERE clause of the query.","long_description":"For use by caching plugins.","long_description_html":"<p>For use by caching plugins.</p>","tags":[{"name":"since","content":"2.5.0"},{"name":"param","content":"<p>The WHERE clause of the query.</p>","types":["string"],"variable":"$where"},{"name":"param","content":"<p>The WP_Query instance (passed by reference).</p>","types":["\\WP_Query"],"variable":"$query"}]},"args":1},{"name":"posts_groupby_request","file":"wp-includes/class-wp-query.php","type":"filter","doc":{"description":"Filters the GROUP BY clause of the query.","long_description":"For use by caching plugins.","long_description_html":"<p>For use by caching plugins.</p>","tags":[{"name":"since","content":"2.5.0"},{"name":"param","content":"<p>The GROUP BY clause of the query.</p>","types":["string"],"variable":"$groupby"},{"name":"param","content":"<p>The WP_Query instance (passed by reference).</p>","types":["\\WP_Query"],"variable":"$query"}]},"args":1},{"name":"posts_join_request","file":"wp-includes/class-wp-query.php","type":"filter","doc":{"description":"Filters the JOIN clause of the query.","long_description":"For use by caching plugins.","long_description_html":"<p>For use by caching plugins.</p>","tags":[{"name":"since","content":"2.5.0"},{"name":"param","content":"<p>The JOIN clause of the query.</p>","types":["string"],"variable":"$join"},{"name":"param","content":"<p>The WP_Query instance (passed by reference).</p>","types":["\\WP_Query"],"variable":"$query"}]},"args":1},{"name":"posts_orderby_request","file":"wp-includes/class-wp-query.php","type":"filter","doc":{"description":"Filters the ORDER BY clause of the query.","long_description":"For use by caching plugins.","long_description_html":"<p>For use by caching plugins.</p>","tags":[{"name":"since","content":"2.5.0"},{"name":"param","content":"<p>The ORDER BY clause of the query.</p>","types":["string"],"variable":"$orderby"},{"name":"param","content":"<p>The WP_Query instance (passed by reference).</p>","types":["\\WP_Query"],"variable":"$query"}]},"args":1},{"name":"posts_distinct_request","file":"wp-includes/class-wp-query.php","type":"filter","doc":{"description":"Filters the DISTINCT clause of the query.","long_description":"For use by caching plugins.","long_description_html":"<p>For use by caching plugins.</p>","tags":[{"name":"since","content":"2.5.0"},{"name":"param","content":"<p>The DISTINCT clause of the query.</p>","types":["string"],"variable":"$distinct"},{"name":"param","content":"<p>The WP_Query instance (passed by reference).</p>","types":["\\WP_Query"],"variable":"$query"}]},"args":1},{"name":"posts_fields_request","file":"wp-includes/class-wp-query.php","type":"filter","doc":{"description":"Filters the SELECT clause of the query.","long_description":"For use by caching plugins.","long_description_html":"<p>For use by caching plugins.</p>","tags":[{"name":"since","content":"2.5.0"},{"name":"param","content":"<p>The SELECT clause of the query.</p>","types":["string"],"variable":"$fields"},{"name":"param","content":"<p>The WP_Query instance (passed by reference).</p>","types":["\\WP_Query"],"variable":"$query"}]},"args":1},{"name":"post_limits_request","file":"wp-includes/class-wp-query.php","type":"filter","doc":{"description":"Filters the LIMIT clause of the query.","long_description":"For use by caching plugins.","long_description_html":"<p>For use by caching plugins.</p>","tags":[{"name":"since","content":"2.5.0"},{"name":"param","content":"<p>The LIMIT clause of the query.</p>","types":["string"],"variable":"$limits"},{"name":"param","content":"<p>The WP_Query instance (passed by reference).</p>","types":["\\WP_Query"],"variable":"$query"}]},"args":1},{"name":"posts_clauses_request","file":"wp-includes/class-wp-query.php","type":"filter","doc":{"description":"Filters all query clauses at once, for convenience.","long_description":"For use by caching plugins.\n Covers the WHERE, GROUP BY, JOIN, ORDER BY, DISTINCT, fields (SELECT), and LIMIT clauses.","long_description_html":"<p>For use by caching plugins.</p> <p>Covers the WHERE, GROUP BY, JOIN, ORDER BY, DISTINCT, fields (SELECT), and LIMIT clauses.</p>","tags":[{"name":"since","content":"3.1.0"},{"name":"param","content":"<p>{ Associative array of the clauses for the query.</p>","types":["string[]"],"variable":"$clauses"},{"name":"param","content":"<p>The WP_Query instance (passed by reference).</p>","types":["\\WP_Query"],"variable":"$query"}]},"args":1},{"name":"posts_request","file":"wp-includes/class-wp-query.php","type":"filter","doc":{"description":"Filters the completed SQL query before sending.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.0.0"},{"name":"param","content":"<p>The complete SQL query.</p>","types":["string"],"variable":"$request"},{"name":"param","content":"<p>The WP_Query instance (passed by reference).</p>","types":["\\WP_Query"],"variable":"$query"}]},"args":1},{"name":"posts_pre_query","file":"wp-includes/class-wp-query.php","type":"filter","doc":{"description":"Filters the posts array before the query takes place.","long_description":"Return a non-null value to bypass WordPress' default post queries.\n Filtering functions that require pagination information are encouraged to set the `found_posts` and `max_num_pages` properties of the WP_Query object, passed to the filter by reference. If WP_Query does not perform a database query, it will not have enough information to generate these values itself.","long_description_html":"<p>Return a non-null value to bypass WordPress' default post queries.</p> <p>Filtering functions that require pagination information are encouraged to set the <code>found_posts</code> and <code>max_num_pages</code> properties of the WP_Query object, passed to the filter by reference. If WP_Query does not perform a database query, it will not have enough information to generate these values itself.</p>","tags":[{"name":"since","content":"4.6.0"},{"name":"param","content":"<p>Return an array of post data to short-circuit WP's query, or null to allow WP to run its normal queries.</p>","types":["\\WP_Post[]","int[]","null"],"variable":"$posts"},{"name":"param","content":"<p>The WP_Query instance (passed by reference).</p>","types":["\\WP_Query"],"variable":"$query"}]},"args":1},{"name":"split_the_query","file":"wp-includes/class-wp-query.php","type":"filter","doc":{"description":"Filters whether to split the query.","long_description":"Splitting the query will cause it to fetch just the IDs of the found posts (and then individually fetch each post by ID), rather than fetching every complete row at once. One massive result vs. many small results.","long_description_html":"<p>Splitting the query will cause it to fetch just the IDs of the found posts (and then individually fetch each post by ID), rather than fetching every complete row at once. One massive result vs. many small results.</p>","tags":[{"name":"since","content":"3.4.0"},{"name":"since","content":"6.6.0","description":"<p>Added the <code>$old_request</code> and <code>$clauses</code> parameters.</p>"},{"name":"param","content":"<p>Whether or not to split the query.</p>","types":["bool"],"variable":"$split_the_query"},{"name":"param","content":"<p>The WP_Query instance.</p>","types":["\\WP_Query"],"variable":"$query"},{"name":"param","content":"<p>The complete SQL query before filtering.</p>","types":["string"],"variable":"$old_request"},{"name":"param","content":"<p>{ Associative array of the clauses for the query.</p>","types":["string[]"],"variable":"$clauses"}]},"args":4},{"name":"posts_request_ids","file":"wp-includes/class-wp-query.php","type":"filter","doc":{"description":"Filters the Post IDs SQL request before sending.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.4.0"},{"name":"param","content":"<p>The post ID request.</p>","types":["string"],"variable":"$request"},{"name":"param","content":"<p>The WP_Query instance.</p>","types":["\\WP_Query"],"variable":"$query"}]},"args":2},{"name":"posts_results","file":"wp-includes/class-wp-query.php","type":"filter","doc":{"description":"Filters the raw post results array, prior to status checks.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.3.0"},{"name":"param","content":"<p>Array of post objects.</p>","types":["\\WP_Post[]"],"variable":"$posts"},{"name":"param","content":"<p>The WP_Query instance (passed by reference).</p>","types":["\\WP_Query"],"variable":"$query"}]},"args":1},{"name":"the_preview","file":"wp-includes/class-wp-query.php","type":"filter","doc":{"description":"Filters the single post for preview mode.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.7.0"},{"name":"param","content":"<p>The Post object.</p>","types":["\\WP_Post"],"variable":"$post_preview"},{"name":"param","content":"<p>The WP_Query instance (passed by reference).</p>","types":["\\WP_Query"],"variable":"$query"}]},"args":1},{"name":"the_posts","file":"wp-includes/class-wp-query.php","type":"filter","doc":{"description":"Filters the array of retrieved posts after they've been fetched and internally processed.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"1.5.0"},{"name":"param","content":"<p>Array of post objects.</p>","types":["\\WP_Post[]"],"variable":"$posts"},{"name":"param","content":"<p>The WP_Query instance (passed by reference).</p>","types":["\\WP_Query"],"variable":"$query"}]},"args":1},{"name":"found_posts_query","file":"wp-includes/class-wp-query.php","type":"filter","doc":{"description":"Filters the query to run for retrieving the found posts.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.1.0"},{"name":"param","content":"<p>The query to run to find the found posts.</p>","types":["string"],"variable":"$found_posts_query"},{"name":"param","content":"<p>The WP_Query instance (passed by reference).</p>","types":["\\WP_Query"],"variable":"$query"}]},"args":1},{"name":"found_posts","file":"wp-includes/class-wp-query.php","type":"filter","doc":{"description":"Filters the number of found posts for the query.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.1.0"},{"name":"param","content":"<p>The number of posts found.</p>","types":["int"],"variable":"$found_posts"},{"name":"param","content":"<p>The WP_Query instance (passed by reference).</p>","types":["\\WP_Query"],"variable":"$query"}]},"args":1},{"name":"content_pagination","file":"wp-includes/class-wp-query.php","type":"filter","doc":{"description":"Filters the \"pages\" derived from splitting the post content.","long_description":"\"Pages\" are determined by splitting the post content based on the presence of `<!-- nextpage -->` tags.","long_description_html":"<p>&quot;Pages&quot; are determined by splitting the post content based on the presence of <code>&lt;!-- nextpage --&gt;</code> tags.</p>","tags":[{"name":"since","content":"4.4.0"},{"name":"param","content":"<p>Array of &quot;pages&quot; from the post content split by <code>&lt;!-- nextpage --&gt;</code> tags.</p>","types":["string[]"],"variable":"$pages"},{"name":"param","content":"<p>Current post object.</p>","types":["\\WP_Post"],"variable":"$post"}]},"args":2},{"name":"nav_menu_submenu_css_class","file":"wp-includes/class-walker-nav-menu.php","type":"filter","doc":{"description":"Filters the CSS class(es) applied to a menu list element.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.8.0"},{"name":"param","content":"<p>Array of the CSS classes that are applied to the menu <code>&lt;ul&gt;</code> element.</p>","types":["string[]"],"variable":"$classes"},{"name":"param","content":"<p>An object of <code>wp_nav_menu()</code> arguments.</p>","types":["\\stdClass"],"variable":"$args"},{"name":"param","content":"<p>Depth of menu item. Used for padding.</p>","types":["int"],"variable":"$depth"}]},"args":3},{"name":"nav_menu_submenu_attributes","file":"wp-includes/class-walker-nav-menu.php","type":"filter","doc":{"description":"Filters the HTML attributes applied to a menu list element.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"6.3.0"},{"name":"param","content":"<p>{ The HTML attributes applied to the <code>&lt;ul&gt;</code> element, empty strings are ignored.</p>","types":["array"],"variable":"$atts"},{"name":"param","content":"<p>An object of <code>wp_nav_menu()</code> arguments.</p>","types":["\\stdClass"],"variable":"$args"},{"name":"param","content":"<p>Depth of menu item. Used for padding.</p>","types":["int"],"variable":"$depth"}]},"args":3},{"name":"nav_menu_item_args","file":"wp-includes/class-walker-nav-menu.php","type":"filter","doc":{"description":"Filters the arguments for a single nav menu item.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.4.0"},{"name":"param","content":"<p>An object of wp_nav_menu() arguments.</p>","types":["\\stdClass"],"variable":"$args"},{"name":"param","content":"<p>Menu item data object.</p>","types":["\\WP_Post"],"variable":"$menu_item"},{"name":"param","content":"<p>Depth of menu item. Used for padding.</p>","types":["int"],"variable":"$depth"}]},"args":3},{"name":"nav_menu_css_class","file":"wp-includes/class-walker-nav-menu.php","type":"filter","doc":{"description":"Filters the CSS classes applied to a menu item's list item element.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.0.0"},{"name":"since","content":"4.1.0","description":"<p>The <code>$depth</code> parameter was added.</p>"},{"name":"param","content":"<p>Array of the CSS classes that are applied to the menu item's <code>&lt;li&gt;</code> element.</p>","types":["string[]"],"variable":"$classes"},{"name":"param","content":"<p>The current menu item object.</p>","types":["\\WP_Post"],"variable":"$menu_item"},{"name":"param","content":"<p>An object of wp_nav_menu() arguments.</p>","types":["\\stdClass"],"variable":"$args"},{"name":"param","content":"<p>Depth of menu item. Used for padding.</p>","types":["int"],"variable":"$depth"}]},"args":4},{"name":"nav_menu_item_id","file":"wp-includes/class-walker-nav-menu.php","type":"filter","doc":{"description":"Filters the ID attribute applied to a menu item's list item element.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.0.1"},{"name":"since","content":"4.1.0","description":"<p>The <code>$depth</code> parameter was added.</p>"},{"name":"param","content":"<p>The ID attribute applied to the menu item's <code>&lt;li&gt;</code> element.</p>","types":["string"],"variable":"$menu_item_id"},{"name":"param","content":"<p>The current menu item.</p>","types":["\\WP_Post"],"variable":"$menu_item"},{"name":"param","content":"<p>An object of wp_nav_menu() arguments.</p>","types":["\\stdClass"],"variable":"$args"},{"name":"param","content":"<p>Depth of menu item. Used for padding.</p>","types":["int"],"variable":"$depth"}]},"args":4},{"name":"nav_menu_item_attributes","file":"wp-includes/class-walker-nav-menu.php","type":"filter","doc":{"description":"Filters the HTML attributes applied to a menu's list item element.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"6.3.0"},{"name":"param","content":"<p>{ The HTML attributes applied to the menu item's <code>&lt;li&gt;</code> element, empty strings are ignored.</p>","types":["array"],"variable":"$li_atts"},{"name":"param","content":"<p>The current menu item object.</p>","types":["\\WP_Post"],"variable":"$menu_item"},{"name":"param","content":"<p>An object of wp_nav_menu() arguments.</p>","types":["\\stdClass"],"variable":"$args"},{"name":"param","content":"<p>Depth of menu item. Used for padding.</p>","types":["int"],"variable":"$depth"}]},"args":4},{"name":"nav_menu_item_title","file":"wp-includes/class-walker-nav-menu.php","type":"filter","doc":{"description":"Filters a menu item's title.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.4.0"},{"name":"param","content":"<p>The menu item's title.</p>","types":["string"],"variable":"$title"},{"name":"param","content":"<p>The current menu item object.</p>","types":["\\WP_Post"],"variable":"$menu_item"},{"name":"param","content":"<p>An object of wp_nav_menu() arguments.</p>","types":["\\stdClass"],"variable":"$args"},{"name":"param","content":"<p>Depth of menu item. Used for padding.</p>","types":["int"],"variable":"$depth"}]},"args":4},{"name":"nav_menu_link_attributes","file":"wp-includes/class-walker-nav-menu.php","type":"filter","doc":{"description":"Filters the HTML attributes applied to a menu item's anchor element.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.6.0"},{"name":"since","content":"4.1.0","description":"<p>The <code>$depth</code> parameter was added.</p>"},{"name":"param","content":"<p>{ The HTML attributes applied to the menu item's <code>&lt;a&gt;</code> element, empty strings are ignored.</p>","types":["array"],"variable":"$atts"},{"name":"param","content":"<p>The current menu item object.</p>","types":["\\WP_Post"],"variable":"$menu_item"},{"name":"param","content":"<p>An object of wp_nav_menu() arguments.</p>","types":["\\stdClass"],"variable":"$args"},{"name":"param","content":"<p>Depth of menu item. Used for padding.</p>","types":["int"],"variable":"$depth"}]},"args":4},{"name":"walker_nav_menu_start_el","file":"wp-includes/class-walker-nav-menu.php","type":"filter","doc":{"description":"Filters a menu item's starting output.","long_description":"The menu item's starting output only includes `$args->before`, the opening `<a>`, the menu item's title, the closing `</a>`, and `$args->after`. Currently, there is no filter for modifying the opening and closing `<li>` for a menu item.","long_description_html":"<p>The menu item's starting output only includes <code>$args-&gt;before</code>, the opening <code>&lt;a&gt;</code>, the menu item's title, the closing <code>&lt;/a&gt;</code>, and <code>$args-&gt;after</code>. Currently, there is no filter for modifying the opening and closing <code>&lt;li&gt;</code> for a menu item.</p>","tags":[{"name":"since","content":"3.0.0"},{"name":"param","content":"<p>The menu item's starting HTML output.</p>","types":["string"],"variable":"$item_output"},{"name":"param","content":"<p>Menu item data object.</p>","types":["\\WP_Post"],"variable":"$menu_item"},{"name":"param","content":"<p>Depth of menu item. Used for padding.</p>","types":["int"],"variable":"$depth"},{"name":"param","content":"<p>An object of wp_nav_menu() arguments.</p>","types":["\\stdClass"],"variable":"$args"}]},"args":4},{"name":"protected_title_format","file":"wp-includes/post-template.php","type":"filter","doc":{"description":"Filters the text prepended to the post title for protected posts.","long_description":"The filter is only applied on the front end.","long_description_html":"<p>The filter is only applied on the front end.</p>","tags":[{"name":"since","content":"2.8.0"},{"name":"param","content":"<p>Text displayed before the post title. Default 'Protected: %s'.</p>","types":["string"],"variable":"$prepend"},{"name":"param","content":"<p>Current post object.</p>","types":["\\WP_Post"],"variable":"$post"}]},"args":2},{"name":"private_title_format","file":"wp-includes/post-template.php","type":"filter","doc":{"description":"Filters the text prepended to the post title of private posts.","long_description":"The filter is only applied on the front end.","long_description_html":"<p>The filter is only applied on the front end.</p>","tags":[{"name":"since","content":"2.8.0"},{"name":"param","content":"<p>Text displayed before the post title. Default 'Private: %s'.</p>","types":["string"],"variable":"$prepend"},{"name":"param","content":"<p>Current post object.</p>","types":["\\WP_Post"],"variable":"$post"}]},"args":2},{"name":"the_title","file":"wp-includes/post-template.php","type":"filter","doc":{"description":"Filters the post title.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"0.71"},{"name":"param","content":"<p>The post title.</p>","types":["string"],"variable":"$post_title"},{"name":"param","content":"<p>The post ID.</p>","types":["int"],"variable":"$post_id"}]},"args":2},{"name":"the_guid","file":"wp-includes/post-template.php","type":"filter","doc":{"description":"Filters the escaped Global Unique Identifier (guid) of the post.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.2.0"},{"name":"see","content":"","refers":"get_the_guid()"},{"name":"param","content":"<p>Escaped Global Unique Identifier (guid) of the post.</p>","types":["string"],"variable":"$post_guid"},{"name":"param","content":"<p>The post ID.</p>","types":["int"],"variable":"$post_id"}]},"args":2},{"name":"get_the_guid","file":"wp-includes/post-template.php","type":"filter","doc":{"description":"Filters the Global Unique Identifier (guid) of the post.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"1.5.0"},{"name":"param","content":"<p>Global Unique Identifier (guid) of the post.</p>","types":["string"],"variable":"$post_guid"},{"name":"param","content":"<p>The post ID.</p>","types":["int"],"variable":"$post_id"}]},"args":2},{"name":"the_content","file":"wp-includes/post-template.php","type":"filter","doc":{"description":"Filters the post content.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"0.71"},{"name":"param","content":"<p>Content of the current post.</p>","types":["string"],"variable":"$content"}]},"args":1},{"name":"the_content_more_link","file":"wp-includes/post-template.php","type":"filter","doc":{"description":"Filters the Read More link text.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.8.0"},{"name":"param","content":"<p>Read More link element.</p>","types":["string"],"variable":"$more_link_element"},{"name":"param","content":"<p>Read More text.</p>","types":["string"],"variable":"$more_link_text"}]},"args":2},{"name":"the_excerpt","file":"wp-includes/post-template.php","type":"filter","doc":{"description":"Filters the displayed post excerpt.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"0.71"},{"name":"see","content":"","refers":"get_the_excerpt()"},{"name":"param","content":"<p>The post excerpt.</p>","types":["string"],"variable":"$post_excerpt"}]},"args":1},{"name":"get_the_excerpt","file":"wp-includes/post-template.php","type":"filter","doc":{"description":"Filters the retrieved post excerpt.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"1.2.0"},{"name":"since","content":"4.5.0","description":"<p>Introduced the <code>$post</code> parameter.</p>"},{"name":"param","content":"<p>The post excerpt.</p>","types":["string"],"variable":"$post_excerpt"},{"name":"param","content":"<p>Post object.</p>","types":["\\WP_Post"],"variable":"$post"}]},"args":2},{"name":"post_class_taxonomies","file":"wp-includes/post-template.php","type":"filter","doc":{"description":"Filters the taxonomies to generate classes for each individual term.","long_description":"Default is all public taxonomies registered to the post type.","long_description_html":"<p>Default is all public taxonomies registered to the post type.</p>","tags":[{"name":"since","content":"6.1.0"},{"name":"param","content":"<p>List of all taxonomy names to generate classes for.</p>","types":["string[]"],"variable":"$taxonomies"},{"name":"param","content":"<p>The post ID.</p>","types":["int"],"variable":"$post_id"},{"name":"param","content":"<p>An array of post class names.</p>","types":["string[]"],"variable":"$classes"},{"name":"param","content":"<p>An array of additional class names added to the post.</p>","types":["string[]"],"variable":"$css_class"}]},"args":4},{"name":"post_class","file":"wp-includes/post-template.php","type":"filter","doc":{"description":"Filters the list of CSS class names for the current post.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.7.0"},{"name":"param","content":"<p>An array of post class names.</p>","types":["string[]"],"variable":"$classes"},{"name":"param","content":"<p>An array of additional class names added to the post.</p>","types":["string[]"],"variable":"$css_class"},{"name":"param","content":"<p>The post ID.</p>","types":["int"],"variable":"$post_id"}]},"args":3},{"name":"body_class","file":"wp-includes/post-template.php","type":"filter","doc":{"description":"Filters the list of CSS body class names for the current post or page.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.8.0"},{"name":"param","content":"<p>An array of body class names.</p>","types":["string[]"],"variable":"$classes"},{"name":"param","content":"<p>An array of additional class names added to the body.</p>","types":["string[]"],"variable":"$css_class"}]},"args":2},{"name":"post_password_required","file":"wp-includes/post-template.php","type":"filter","doc":{"description":"Filters whether a post requires the user to supply a password.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.7.0"},{"name":"param","content":"<p>Whether the user needs to supply a password. True if password has not been provided or is incorrect, false if password has been supplied or is not required.</p>","types":["bool"],"variable":"$required"},{"name":"param","content":"<p>Post object.</p>","types":["\\WP_Post"],"variable":"$post"}]},"args":2},{"name":"wp_link_pages_args","file":"wp-includes/post-template.php","type":"filter","doc":{"description":"Filters the arguments used in retrieving page links for paginated posts.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.0.0"},{"name":"param","content":"<p>An array of page link arguments. See wp_link_pages() for information on accepted arguments.</p>","types":["array"],"variable":"$parsed_args"}]},"args":1},{"name":"wp_link_pages_link","file":"wp-includes/post-template.php","type":"filter","doc":{"description":"Filters the HTML output of individual page number links.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.6.0"},{"name":"param","content":"<p>The page number HTML output.</p>","types":["string"],"variable":"$link"},{"name":"param","content":"<p>Page number for paginated posts' page links.</p>","types":["int"],"variable":"$i"}]},"args":2},{"name":"wp_link_pages","file":"wp-includes/post-template.php","type":"filter","doc":{"description":"Filters the HTML output of page links for paginated posts.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.6.0"},{"name":"param","content":"<p>HTML output of paginated posts' page links.</p>","types":["string"],"variable":"$output"},{"name":"param","content":"<p>An array or query string of arguments. See wp_link_pages() for information on accepted arguments.</p>","types":["array","string"],"variable":"$args"}]},"args":2},{"name":"the_meta_key","file":"wp-includes/post-template.php","type":"filter","doc":{"description":"Filters the HTML output of the li element in the post custom fields list.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.2.0"},{"name":"param","content":"<p>The HTML output for the li element.</p>","types":["string"],"variable":"$html"},{"name":"param","content":"<p>Meta key.</p>","types":["string"],"variable":"$key"},{"name":"param","content":"<p>Meta value.</p>","types":["string"],"variable":"$value"}]},"args":3},{"name":"wp_dropdown_pages","file":"wp-includes/post-template.php","type":"filter","doc":{"description":"Filters the HTML output of a list of pages as a dropdown.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.1.0"},{"name":"since","content":"4.4.0","description":"<p><code>$parsed_args</code> and <code>$pages</code> added as arguments.</p>"},{"name":"param","content":"<p>HTML output for dropdown list of pages.</p>","types":["string"],"variable":"$output"},{"name":"param","content":"<p>The parsed arguments array. See wp_dropdown_pages() for information on accepted arguments.</p>","types":["array"],"variable":"$parsed_args"},{"name":"param","content":"<p>Array of the page objects.</p>","types":["\\WP_Post[]"],"variable":"$pages"}]},"args":3},{"name":"wp_list_pages_excludes","file":"wp-includes/post-template.php","type":"filter","doc":{"description":"Filters the array of pages to exclude from the pages list.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.1.0"},{"name":"param","content":"<p>An array of page IDs to exclude.</p>","types":["string[]"],"variable":"$exclude_array"}]},"args":1},{"name":"wp_list_pages","file":"wp-includes/post-template.php","type":"filter","doc":{"description":"Filters the HTML output of the pages to list.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"1.5.1"},{"name":"since","content":"4.4.0","description":"<p><code>$pages</code> added as arguments.</p>"},{"name":"see","content":"","refers":"wp_list_pages()"},{"name":"param","content":"<p>HTML output of the pages list.</p>","types":["string"],"variable":"$output"},{"name":"param","content":"<p>An array of page-listing arguments. See wp_list_pages() for information on accepted arguments.</p>","types":["array"],"variable":"$parsed_args"},{"name":"param","content":"<p>Array of the page objects.</p>","types":["\\WP_Post[]"],"variable":"$pages"}]},"args":3},{"name":"wp_page_menu_args","file":"wp-includes/post-template.php","type":"filter","doc":{"description":"Filters the arguments used to generate a page-based menu.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.7.0"},{"name":"see","content":"","refers":"wp_page_menu()"},{"name":"param","content":"<p>An array of page menu arguments. See wp_page_menu() for information on accepted arguments.</p>","types":["array"],"variable":"$args"}]},"args":1},{"name":"wp_page_menu","file":"wp-includes/post-template.php","type":"filter","doc":{"description":"Filters the HTML output of a page-based menu.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.7.0"},{"name":"see","content":"","refers":"wp_page_menu()"},{"name":"param","content":"<p>The HTML output.</p>","types":["string"],"variable":"$menu"},{"name":"param","content":"<p>An array of arguments. See wp_page_menu() for information on accepted arguments.</p>","types":["array"],"variable":"$args"}]},"args":2},{"name":"wp_get_attachment_link_attributes","file":"wp-includes/post-template.php","type":"filter","doc":{"description":"Filters the list of attachment link attributes.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"6.2.0"},{"name":"param","content":"<p>An array of attributes for the link markup, keyed on the attribute name.</p>","types":["array"],"variable":"$attributes"},{"name":"param","content":"<p>Post ID.</p>","types":["int"],"variable":"$id"}]},"args":2},{"name":"wp_get_attachment_link","file":"wp-includes/post-template.php","type":"filter","doc":{"description":"Filters a retrieved attachment page link.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.7.0"},{"name":"since","content":"5.1.0","description":"<p>Added the <code>$attr</code> parameter.</p>"},{"name":"param","content":"<p>The page link HTML output.</p>","types":["string"],"variable":"$link_html"},{"name":"param","content":"<p>Post ID or object. Can be 0 for the current global post.</p>","types":["int","\\WP_Post"],"variable":"$post"},{"name":"param","content":"<p>Requested image size. Can be any registered image size name, or an array of width and height values in pixels (in that order).</p>","types":["string","int[]"],"variable":"$size"},{"name":"param","content":"<p>Whether to add permalink to image. Default false.</p>","types":["bool"],"variable":"$permalink"},{"name":"param","content":"<p>Whether to include an icon.</p>","types":["bool"],"variable":"$icon"},{"name":"param","content":"<p>If string, will be link text.</p>","types":["string","false"],"variable":"$text"},{"name":"param","content":"<p>Array or string of attributes.</p>","types":["array","string"],"variable":"$attr"}]},"args":7},{"name":"prepend_attachment","file":"wp-includes/post-template.php","type":"filter","doc":{"description":"Filters the attachment markup to be prepended to the post content.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.0.0"},{"name":"see","content":"","refers":"prepend_attachment()"},{"name":"param","content":"<p>The attachment HTML output.</p>","types":["string"],"variable":"$p"}]},"args":1},{"name":"the_password_form","file":"wp-includes/post-template.php","type":"filter","doc":{"description":"Filters the HTML output for the protected post password form.","long_description":"If modifying the password field, please note that the WordPress database schema limits the password field to 255 characters regardless of the value of the `minlength` or `maxlength` attributes or other validation that may be added to the input.","long_description_html":"<p>If modifying the password field, please note that the WordPress database schema limits the password field to 255 characters regardless of the value of the <code>minlength</code> or <code>maxlength</code> attributes or other validation that may be added to the input.</p>","tags":[{"name":"since","content":"2.7.0"},{"name":"since","content":"5.8.0","description":"<p>Added the <code>$post</code> parameter.</p>"},{"name":"param","content":"<p>The password form HTML output.</p>","types":["string"],"variable":"$output"},{"name":"param","content":"<p>Post object.</p>","types":["\\WP_Post"],"variable":"$post"}]},"args":2},{"name":"wp_post_revision_title_expanded","file":"wp-includes/post-template.php","type":"filter","doc":{"description":"Filters the formatted author and date for a revision.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.4.0"},{"name":"param","content":"<p>The formatted string.</p>","types":["string"],"variable":"$revision_date_author"},{"name":"param","content":"<p>The revision object.</p>","types":["\\WP_Post"],"variable":"$revision"},{"name":"param","content":"<p>Whether to link to the revisions page, as passed into wp_post_revision_title_expanded().</p>","types":["bool"],"variable":"$link"}]},"args":3},{"name":"https_local_ssl_verify","file":"wp-includes/class-wp-http-streams.php","type":"filter","doc":{"description":"Filters whether SSL should be verified for local HTTP API requests.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.8.0"},{"name":"since","content":"5.1.0","description":"<p>The <code>$url</code> parameter was added.</p>"},{"name":"param","content":"<p>Boolean to control whether to verify the SSL connection or path to an SSL certificate.</p>","types":["bool","string"],"variable":"$ssl_verify"},{"name":"param","content":"<p>The request URL.</p>","types":["string"],"variable":"$url"}]},"args":2},{"name":"use_streams_transport","file":"wp-includes/class-wp-http-streams.php","type":"filter","doc":{"description":"Filters whether streams can be used as a transport for retrieving a URL.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.7.0"},{"name":"param","content":"<p>Whether the class can be used. Default true.</p>","types":["bool"],"variable":"$use_class"},{"name":"param","content":"<p>Request arguments.</p>","types":["array"],"variable":"$args"}]},"args":2},{"name":"comment_max_links_url","file":"wp-includes/comment.php","type":"filter","doc":{"description":"Filters the number of links found in a comment.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.0.0"},{"name":"since","content":"4.7.0","description":"<p>Added the <code>$comment</code> parameter.</p>"},{"name":"param","content":"<p>The number of links found.</p>","types":["int"],"variable":"$num_links"},{"name":"param","content":"<p>Comment author's URL. Included in allowed links total.</p>","types":["string"],"variable":"$url"},{"name":"param","content":"<p>Content of the comment.</p>","types":["string"],"variable":"$comment"}]},"args":3},{"name":"get_comment","file":"wp-includes/comment.php","type":"filter","doc":{"description":"Fires after a comment is retrieved.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.3.0"},{"name":"param","content":"<p>Comment data.</p>","types":["\\WP_Comment"],"variable":"$_comment"}]},"args":1},{"name":"get_default_comment_status","file":"wp-includes/comment.php","type":"filter","doc":{"description":"Filters the default comment status for the given post type.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.3.0"},{"name":"param","content":"<p>Default status for the given post type, either 'open' or 'closed'.</p>","types":["string"],"variable":"$status"},{"name":"param","content":"<p>Post type. Default is <code>post</code>.</p>","types":["string"],"variable":"$post_type"},{"name":"param","content":"<p>Type of comment. Default is <code>comment</code>.</p>","types":["string"],"variable":"$comment_type"}]},"args":3},{"name":"comment_cookie_lifetime","file":"wp-includes/comment.php","type":"filter","doc":{"description":"Filters the lifetime of the comment cookie in seconds.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.8.0"},{"name":"since","content":"6.6.0","description":"<p>The default $seconds value changed from 30000000 to YEAR_IN_SECONDS.</p>"},{"name":"param","content":"<p>Comment cookie lifetime. Default YEAR_IN_SECONDS.</p>","types":["int"],"variable":"$seconds"}]},"args":1},{"name":"pre_comment_author_name","file":"wp-includes/comment.php","type":"filter","doc":{"description":"Filters the comment author's name cookie before it is set.","long_description":"When this filter hook is evaluated in wp_filter_comment(), the comment author's name string is passed.","long_description_html":"<p>When this filter hook is evaluated in wp_filter_comment(), the comment author's name string is passed.</p>","tags":[{"name":"since","content":"1.5.0"},{"name":"param","content":"<p>The comment author name cookie.</p>","types":["string"],"variable":"$author_cookie"}]},"args":1},{"name":"pre_comment_author_email","file":"wp-includes/comment.php","type":"filter","doc":{"description":"Filters the comment author's email cookie before it is set.","long_description":"When this filter hook is evaluated in wp_filter_comment(), the comment author's email string is passed.","long_description_html":"<p>When this filter hook is evaluated in wp_filter_comment(), the comment author's email string is passed.</p>","tags":[{"name":"since","content":"1.5.0"},{"name":"param","content":"<p>The comment author email cookie.</p>","types":["string"],"variable":"$author_email_cookie"}]},"args":1},{"name":"pre_comment_author_url","file":"wp-includes/comment.php","type":"filter","doc":{"description":"Filters the comment author's URL cookie before it is set.","long_description":"When this filter hook is evaluated in wp_filter_comment(), the comment author's URL string is passed.","long_description_html":"<p>When this filter hook is evaluated in wp_filter_comment(), the comment author's URL string is passed.</p>","tags":[{"name":"since","content":"1.5.0"},{"name":"param","content":"<p>The comment author URL cookie.</p>","types":["string"],"variable":"$author_url_cookie"}]},"args":1},{"name":"duplicate_comment_id","file":"wp-includes/comment.php","type":"filter","doc":{"description":"Filters the ID, if any, of the duplicate comment found when creating a new comment.","long_description":"Return an empty value from this filter to allow what WP considers a duplicate comment.","long_description_html":"<p>Return an empty value from this filter to allow what WP considers a duplicate comment.</p>","tags":[{"name":"since","content":"4.4.0"},{"name":"param","content":"<p>ID of the comment identified as a duplicate.</p>","types":["int"],"variable":"$dupe_id"},{"name":"param","content":"<p>Data for the comment being created.</p>","types":["array"],"variable":"$commentdata"}]},"args":2},{"name":"comment_duplicate_message","file":"wp-includes/comment.php","type":"filter","doc":{"description":"Filters duplicate comment error message.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.2.0"},{"name":"param","content":"<p>Duplicate comment error message.</p>","types":["string"],"variable":"$comment_duplicate_message"}]},"args":1},{"name":"wp_is_comment_flood","file":"wp-includes/comment.php","type":"filter","doc":{"description":"Filters whether a comment is part of a comment flood.","long_description":"The default check is wp_check_comment_flood(). See check_comment_flood_db().","long_description_html":"<p>The default check is wp_check_comment_flood(). See check_comment_flood_db().</p>","tags":[{"name":"since","content":"4.7.0"},{"name":"since","content":"5.5.0","description":"<p>The <code>$avoid_die</code> parameter was renamed to <code>$wp_error</code>.</p>"},{"name":"param","content":"<p>Is a comment flooding occurring? Default false.</p>","types":["bool"],"variable":"$is_flood"},{"name":"param","content":"<p>Comment author's IP address.</p>","types":["string"],"variable":"$comment_author_ip"},{"name":"param","content":"<p>Comment author's email.</p>","types":["string"],"variable":"$comment_author_email"},{"name":"param","content":"<p>GMT date the comment was posted.</p>","types":["string"],"variable":"$comment_date_gmt"},{"name":"param","content":"<p>Whether to return a WP_Error object instead of executing wp_die() or die() if a comment flood is occurring.</p>","types":["bool"],"variable":"$wp_error"}]},"args":5},{"name":"comment_flood_filter","file":"wp-includes/comment.php","type":"filter","doc":{"description":"Filters the comment flood status.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.1.0"},{"name":"param","content":"<p>Whether a comment flood is occurring. Default false.</p>","types":["bool"],"variable":"$bool"},{"name":"param","content":"<p>Timestamp of when the last comment was posted.</p>","types":["int"],"variable":"$time_lastcomment"},{"name":"param","content":"<p>Timestamp of when the new comment was posted.</p>","types":["int"],"variable":"$time_newcomment"}]},"args":3},{"name":"comment_flood_message","file":"wp-includes/comment.php","type":"filter","doc":{"description":"Filters the comment flood error message.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.2.0"},{"name":"param","content":"<p>Comment flood error message.</p>","types":["string"],"variable":"$comment_flood_message"}]},"args":1},{"name":"get_page_of_comment_query_args","file":"wp-includes/comment.php","type":"filter","doc":{"description":"Filters the arguments used to query comments in get_page_of_comment().","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.5.0"},{"name":"see","content":"","refers":"WP_Comment_Query::__construct()"},{"name":"param","content":"<p>{ Array of WP_Comment_Query arguments.</p>","types":["array"],"variable":"$comment_args"}]},"args":1},{"name":"get_page_of_comment","file":"wp-includes/comment.php","type":"filter","doc":{"description":"Filters the calculated page on which a comment appears.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.4.0"},{"name":"since","content":"4.7.0","description":"<p>Introduced the <code>$comment_id</code> parameter.</p>"},{"name":"param","content":"<p>Comment page.</p>","types":["int"],"variable":"$page"},{"name":"param","content":"<p>{ Arguments used to calculate pagination. These include arguments auto-detected by the function, based on query vars, system settings, etc. For pristine arguments passed to the function, see <code>$original_args</code>.</p>","types":["array"],"variable":"$args"},{"name":"param","content":"<p>{ Array of arguments passed to the function. Some or all of these may not be set.</p>","types":["array"],"variable":"$original_args"},{"name":"param","content":"<p>ID of the comment.</p>","types":["int"],"variable":"$comment_id"}]},"args":4},{"name":"wp_get_comment_fields_max_lengths","file":"wp-includes/comment.php","type":"filter","doc":{"description":"Filters the lengths for the comment form fields.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.5.0"},{"name":"param","content":"<p>Array of maximum lengths keyed by field name.</p>","types":["int[]"],"variable":"$lengths"}]},"args":1},{"name":"pre_comment_approved","file":"wp-includes/comment.php","type":"filter","doc":{"description":"Filters a comment's approval status before it is set.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.1.0"},{"name":"since","content":"4.9.0","description":"<p>Returning a WP_Error value from the filter will short-circuit comment insertion and allow skipping further processing.</p>"},{"name":"param","content":"<p>The approval status. Accepts 1, 0, 'spam', 'trash', or WP_Error.</p>","types":["int","string","\\WP_Error"],"variable":"$approved"},{"name":"param","content":"<p>Comment data.</p>","types":["array"],"variable":"$commentdata"}]},"args":2},{"name":"wp_count_comments","file":"wp-includes/comment.php","type":"filter","doc":{"description":"Filters the comments count for a given post or the whole site.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.7.0"},{"name":"param","content":"<p>An empty array or an object containing comment counts.</p>","types":["array","\\stdClass"],"variable":"$count"},{"name":"param","content":"<p>The post ID. Can be 0 to represent the whole site.</p>","types":["int"],"variable":"$post_id"}]},"args":2},{"name":"wp_get_current_commenter","file":"wp-includes/comment.php","type":"filter","doc":{"description":"Filters the current commenter's name, email, and URL.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.1.0"},{"name":"param","content":"<p>{ An array of current commenter variables.</p>","types":["array"],"variable":"$comment_author_data"}]},"args":1},{"name":"pre_user_id","file":"wp-includes/comment.php","type":"filter","doc":{"description":"Filters the comment author's user ID before it is set.","long_description":"The first time this filter is evaluated, `user_ID` is checked (for back-compat), followed by the standard `user_id` value.","long_description_html":"<p>The first time this filter is evaluated, <code>user_ID</code> is checked (for back-compat), followed by the standard <code>user_id</code> value.</p>","tags":[{"name":"since","content":"1.5.0"},{"name":"param","content":"<p>The comment author's user ID.</p>","types":["int"],"variable":"$user_id"}]},"args":1},{"name":"pre_comment_user_agent","file":"wp-includes/comment.php","type":"filter","doc":{"description":"Filters the comment author's browser user agent before it is set.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"1.5.0"},{"name":"param","content":"<p>The comment author's browser user agent.</p>","types":["string"],"variable":"$comment_agent"}]},"args":1},{"name":"pre_comment_content","file":"wp-includes/comment.php","type":"filter","doc":{"description":"Filters the comment content before it is set.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"1.5.0"},{"name":"param","content":"<p>The comment content.</p>","types":["string"],"variable":"$comment_content"}]},"args":1},{"name":"pre_comment_user_ip","file":"wp-includes/comment.php","type":"filter","doc":{"description":"Filters the comment author's IP address before it is set.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"1.5.0"},{"name":"param","content":"<p>The comment author's IP address.</p>","types":["string"],"variable":"$comment_author_ip"}]},"args":1},{"name":"preprocess_comment","file":"wp-includes/comment.php","type":"filter","doc":{"description":"Filters a comment's data before it is sanitized and inserted into the database.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"1.5.0"},{"name":"since","content":"5.6.0","description":"<p>Comment data includes the <code>comment_agent</code> and <code>comment_author_IP</code> values.</p>"},{"name":"param","content":"<p>Comment data.</p>","types":["array"],"variable":"$commentdata"}]},"args":1},{"name":"notify_post_author","file":"wp-includes/comment.php","type":"filter","doc":{"description":"Filters whether to send the post author new comment notification emails, overriding the site setting.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.4.0"},{"name":"param","content":"<p>Whether to notify the post author about the new comment.</p>","types":["bool"],"variable":"$maybe_notify"},{"name":"param","content":"<p>The ID of the comment for the notification.</p>","types":["int"],"variable":"$comment_id"}]},"args":2},{"name":"comment_save_pre","file":"wp-includes/comment.php","type":"filter","doc":{"description":"Filters the comment content before it is updated in the database.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"1.5.0"},{"name":"param","content":"<p>The comment data.</p>","types":["string"],"variable":"$comment_content"}]},"args":1},{"name":"wp_update_comment_data","file":"wp-includes/comment.php","type":"filter","doc":{"description":"Filters the comment data immediately before it is updated in the database.","long_description":"Note: data being passed to the filter is already unslashed.","long_description_html":"<p>Note: data being passed to the filter is already unslashed.</p>","tags":[{"name":"since","content":"4.7.0"},{"name":"since","content":"5.5.0","description":"<p>Returning a WP_Error value from the filter will short-circuit comment update and allow skipping further processing.</p>"},{"name":"param","content":"<p>The new, processed comment data, or WP_Error.</p>","types":["array","\\WP_Error"],"variable":"$data"},{"name":"param","content":"<p>The old, unslashed comment data.</p>","types":["array"],"variable":"$comment"},{"name":"param","content":"<p>The new, raw comment data.</p>","types":["array"],"variable":"$commentarr"}]},"args":3},{"name":"pre_wp_update_comment_count_now","file":"wp-includes/comment.php","type":"filter","doc":{"description":"Filters a post's comment count before it is updated in the database.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.5.0"},{"name":"param","content":"<p>The new comment count. Default null.</p>","types":["int","null"],"variable":"$new"},{"name":"param","content":"<p>The old comment count.</p>","types":["int"],"variable":"$old"},{"name":"param","content":"<p>Post ID.</p>","types":["int"],"variable":"$post_id"}]},"args":3},{"name":"pingback_useragent","file":"wp-includes/comment.php","type":"filter","doc":{"description":"Filters the user agent sent when pinging-back a URL.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.9.0"},{"name":"param","content":"<p>The user agent concatenated with ' -- WordPress/' and the WordPress version.</p>","types":["string"],"variable":"$concat_useragent"},{"name":"param","content":"<p>The useragent.</p>","types":["string"],"variable":"$useragent"},{"name":"param","content":"<p>The server URL being linked to.</p>","types":["string"],"variable":"$pingback_server_url"},{"name":"param","content":"<p>URL of page linked to.</p>","types":["string"],"variable":"$pagelinkedto"},{"name":"param","content":"<p>URL of page linked from.</p>","types":["string"],"variable":"$pagelinkedfrom"}]},"args":5},{"name":"close_comments_for_post_types","file":"wp-includes/comment.php","type":"filter","doc":{"description":"Filters the list of post types to automatically close comments for.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.2.0"},{"name":"param","content":"<p>An array of post type names.</p>","types":["string[]"],"variable":"$post_types"}]},"args":1},{"name":"allow_empty_comment","file":"wp-includes/comment.php","type":"filter","doc":{"description":"Filters whether an empty comment should be allowed.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.1.0"},{"name":"param","content":"<p>Whether to allow empty comments. Default false.</p>","types":["bool"],"variable":"$allow_empty_comment"},{"name":"param","content":"<p>Array of comment data to be sent to wp_insert_comment().</p>","types":["array"],"variable":"$commentdata"}]},"args":2},{"name":"wp_anonymize_comment","file":"wp-includes/comment.php","type":"filter","doc":{"description":"Filters whether to anonymize the comment.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.9.6"},{"name":"param","content":"<p>Whether to apply the comment anonymization (bool) or a custom message (string). Default true.</p>","types":["bool","string"],"variable":"$anon_message"},{"name":"param","content":"<p>WP_Comment object.</p>","types":["\\WP_Comment"],"variable":"$comment"},{"name":"param","content":"<p>Anonymized comment data.</p>","types":["array"],"variable":"$anonymized_comment"}]},"args":3},{"name":"wp_update_comment_type_batch_size","file":"wp-includes/comment.php","type":"filter","doc":{"description":"Filters the comment batch size for updating the comment type.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.5.0"},{"name":"param","content":"<p>The comment batch size. Default 100.</p>","types":["int"],"variable":"$comment_batch_size"}]},"args":1},{"name":"default_wp_template_part_areas","file":"wp-includes/block-template-utils.php","type":"filter","doc":{"description":"Filters the list of allowed template part area values.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.9.0"},{"name":"param","content":"<p>{ The allowed template part area values.</p>","types":["array[]"],"variable":"$default_area_definitions"}]},"args":1},{"name":"default_template_types","file":"wp-includes/block-template-utils.php","type":"filter","doc":{"description":"Filters the list of default template types.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.9.0"},{"name":"param","content":"<p>{ The default template types.</p>","types":["array[]"],"variable":"$default_template_types"}]},"args":1},{"name":"pre_get_block_templates","file":"wp-includes/block-template-utils.php","type":"filter","doc":{"description":"Filters the block templates array before the query takes place.","long_description":"Return a non-null value to bypass the WordPress queries.","long_description_html":"<p>Return a non-null value to bypass the WordPress queries.</p>","tags":[{"name":"since","content":"5.9.0"},{"name":"param","content":"<p>Return an array of block templates to short-circuit the default query, or null to allow WP to run its normal queries.</p>","types":["\\WP_Block_Template[]","null"],"variable":"$block_templates"},{"name":"param","content":"<p>{ Arguments to retrieve templates. All arguments are optional.</p>","types":["array"],"variable":"$query"},{"name":"param","content":"<p>Template type. Either 'wp_template' or 'wp_template_part'.</p>","types":["string"],"variable":"$template_type"}]},"args":3},{"name":"get_block_templates","file":"wp-includes/block-template-utils.php","type":"filter","doc":{"description":"Filters the array of queried block templates array after they've been fetched.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.9.0"},{"name":"param","content":"<p>Array of found block templates.</p>","types":["\\WP_Block_Template[]"],"variable":"$query_result"},{"name":"param","content":"<p>{ Arguments to retrieve templates. All arguments are optional.</p>","types":["array"],"variable":"$query"},{"name":"param","content":"<p>wp_template or wp_template_part.</p>","types":["string"],"variable":"$template_type"}]},"args":3},{"name":"pre_get_block_template","file":"wp-includes/block-template-utils.php","type":"filter","doc":{"description":"Filters the block template object before the query takes place.","long_description":"Return a non-null value to bypass the WordPress queries.","long_description_html":"<p>Return a non-null value to bypass the WordPress queries.</p>","tags":[{"name":"since","content":"5.9.0"},{"name":"param","content":"<p>Return block template object to short-circuit the default query, or null to allow WP to run its normal queries.</p>","types":["\\WP_Block_Template","null"],"variable":"$block_template"},{"name":"param","content":"<p>Template unique identifier (example: 'theme_slug//template_slug').</p>","types":["string"],"variable":"$id"},{"name":"param","content":"<p>Template type. Either 'wp_template' or 'wp_template_part'.</p>","types":["string"],"variable":"$template_type"}]},"args":3},{"name":"get_block_template","file":"wp-includes/block-template-utils.php","type":"filter","doc":{"description":"Filters the queried block template object after it's been fetched.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.9.0"},{"name":"param","content":"<p>The found block template, or null if there isn't one.</p>","types":["\\WP_Block_Template","null"],"variable":"$block_template"},{"name":"param","content":"<p>Template unique identifier (example: 'theme_slug//template_slug').</p>","types":["string"],"variable":"$id"},{"name":"param","content":"<p>Template type. Either 'wp_template' or 'wp_template_part'.</p>","types":["string"],"variable":"$template_type"}]},"args":3},{"name":"pre_get_block_file_template","file":"wp-includes/block-template-utils.php","type":"filter","doc":{"description":"Filters the block template object before the theme file discovery takes place.","long_description":"Return a non-null value to bypass the WordPress theme file discovery.","long_description_html":"<p>Return a non-null value to bypass the WordPress theme file discovery.</p>","tags":[{"name":"since","content":"5.9.0"},{"name":"param","content":"<p>Return block template object to short-circuit the default query, or null to allow WP to run its normal queries.</p>","types":["\\WP_Block_Template","null"],"variable":"$block_template"},{"name":"param","content":"<p>Template unique identifier (example: 'theme_slug//template_slug').</p>","types":["string"],"variable":"$id"},{"name":"param","content":"<p>Template type. Either 'wp_template' or 'wp_template_part'.</p>","types":["string"],"variable":"$template_type"}]},"args":3},{"name":"get_block_file_template","file":"wp-includes/block-template-utils.php","type":"filter","doc":{"description":"Filters the block template object after it has been (potentially) fetched from the theme file.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.9.0"},{"name":"param","content":"<p>The found block template, or null if there is none.</p>","types":["\\WP_Block_Template","null"],"variable":"$block_template"},{"name":"param","content":"<p>Template unique identifier (example: 'theme_slug//template_slug').</p>","types":["string"],"variable":"$id"},{"name":"param","content":"<p>Template type. Either 'wp_template' or 'wp_template_part'.</p>","types":["string"],"variable":"$template_type"}]},"args":3},{"name":"oembed_default_width","file":"wp-includes/class-wp-oembed-controller.php","type":"filter","doc":{"description":"Filters the maxwidth oEmbed parameter.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.4.0"},{"name":"param","content":"<p>Maximum allowed width. Default 600.</p>","types":["int"],"variable":"$maxwidth"}]},"args":1},{"name":"oembed_request_post_id","file":"wp-includes/class-wp-oembed-controller.php","type":"filter","doc":{"description":"Filters the determined post ID.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.4.0"},{"name":"param","content":"<p>The post ID.</p>","types":["int"],"variable":"$post_id"},{"name":"param","content":"<p>The requested URL.</p>","types":["string"],"variable":"$url"}]},"args":2},{"name":"rest_oembed_ttl","file":"wp-includes/class-wp-oembed-controller.php","type":"filter","doc":{"description":"Filters the oEmbed TTL value (time to live).","long_description":"Similar to the {@see 'oembed_ttl'} filter, but for the REST API oEmbed proxy endpoint.","long_description_html":"<p>Similar to the {@see 'oembed_ttl'} filter, but for the REST API oEmbed proxy endpoint.</p>","tags":[{"name":"since","content":"4.8.0"},{"name":"param","content":"<p>Time to live (in seconds).</p>","types":["int"],"variable":"$time"},{"name":"param","content":"<p>The attempted embed URL.</p>","types":["string"],"variable":"$url"},{"name":"param","content":"<p>An array of embed request arguments.</p>","types":["array"],"variable":"$args"}]},"args":3},{"name":"category_description","file":"wp-includes/class-walker-category.php","type":"filter","doc":{"description":"Filters the category description for display.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"1.2.0"},{"name":"param","content":"<p>Category description.</p>","types":["string"],"variable":"$description"},{"name":"param","content":"<p>Category object.</p>","types":["\\WP_Term"],"variable":"$category"}]},"args":2},{"name":"category_list_link_attributes","file":"wp-includes/class-walker-category.php","type":"filter","doc":{"description":"Filters the HTML attributes applied to a category list item's anchor element.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.2.0"},{"name":"param","content":"<p>{ The HTML attributes applied to the list item's <code>&lt;a&gt;</code> element, empty strings are ignored.</p>","types":["array"],"variable":"$atts"},{"name":"param","content":"<p>Term data object.</p>","types":["\\WP_Term"],"variable":"$category"},{"name":"param","content":"<p>Depth of category, used for padding.</p>","types":["int"],"variable":"$depth"},{"name":"param","content":"<p>An array of arguments.</p>","types":["array"],"variable":"$args"},{"name":"param","content":"<p>ID of the current category.</p>","types":["int"],"variable":"$current_object_id"}]},"args":5},{"name":"category_css_class","file":"wp-includes/class-walker-category.php","type":"filter","doc":{"description":"Filters the list of CSS classes to include with each category in the list.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.2.0"},{"name":"see","content":"","refers":"wp_list_categories()"},{"name":"param","content":"<p>An array of CSS classes to be applied to each list item.</p>","types":["string[]"],"variable":"$css_classes"},{"name":"param","content":"<p>Category data object.</p>","types":["\\WP_Term"],"variable":"$category"},{"name":"param","content":"<p>Depth of page, used for padding.</p>","types":["int"],"variable":"$depth"},{"name":"param","content":"<p>An array of wp_list_categories() arguments.</p>","types":["array"],"variable":"$args"}]},"args":4},{"name":"wp_get_nav_menu_object","file":"wp-includes/nav-menu.php","type":"filter","doc":{"description":"Filters the nav_menu term retrieved for wp_get_nav_menu_object().","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.3.0"},{"name":"param","content":"<p>Term from nav_menu taxonomy, or false if nothing had been found.</p>","types":["\\WP_Term","false"],"variable":"$menu_obj"},{"name":"param","content":"<p>The menu ID, slug, name, or object passed to wp_get_nav_menu_object().</p>","types":["int","string","\\WP_Term"],"variable":"$menu"}]},"args":2},{"name":"has_nav_menu","file":"wp-includes/nav-menu.php","type":"filter","doc":{"description":"Filters whether a nav menu is assigned to the specified location.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.3.0"},{"name":"param","content":"<p>Whether there is a menu assigned to a location.</p>","types":["bool"],"variable":"$has_nav_menu"},{"name":"param","content":"<p>Menu location.</p>","types":["string"],"variable":"$location"}]},"args":2},{"name":"wp_get_nav_menu_name","file":"wp-includes/nav-menu.php","type":"filter","doc":{"description":"Filters the navigation menu name being returned.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.9.0"},{"name":"param","content":"<p>Menu name.</p>","types":["string"],"variable":"$menu_name"},{"name":"param","content":"<p>Menu location identifier.</p>","types":["string"],"variable":"$location"}]},"args":2},{"name":"wp_get_nav_menus","file":"wp-includes/nav-menu.php","type":"filter","doc":{"description":"Filters the navigation menu objects being returned.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.0.0"},{"name":"see","content":"","refers":"get_terms()"},{"name":"param","content":"<p>An array of menu objects.</p>","types":["\\WP_Term[]"],"variable":"$menus"},{"name":"param","content":"<p>An array of arguments used to retrieve menu objects.</p>","types":["array"],"variable":"$args"}]},"args":2},{"name":"wp_get_nav_menu_items","file":"wp-includes/nav-menu.php","type":"filter","doc":{"description":"Filters the navigation menu items being returned.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.0.0"},{"name":"param","content":"<p>An array of menu item post objects.</p>","types":["array"],"variable":"$items"},{"name":"param","content":"<p>The menu object.</p>","types":["object"],"variable":"$menu"},{"name":"param","content":"<p>An array of arguments used to retrieve menu item objects.</p>","types":["array"],"variable":"$args"}]},"args":3},{"name":"pre_wp_setup_nav_menu_item","file":"wp-includes/nav-menu.php","type":"filter","doc":{"description":"Filters whether to short-circuit the wp_setup_nav_menu_item() output.","long_description":"Returning a non-null value from the filter will short-circuit wp_setup_nav_menu_item(), returning that value instead.","long_description_html":"<p>Returning a non-null value from the filter will short-circuit wp_setup_nav_menu_item(), returning that value instead.</p>","tags":[{"name":"since","content":"6.3.0"},{"name":"param","content":"<p>Modified menu item. Default null.</p>","types":["object","null"],"variable":"$modified_menu_item"},{"name":"param","content":"<p>The menu item to modify.</p>","types":["object"],"variable":"$menu_item"}]},"args":2},{"name":"nav_menu_attr_title","file":"wp-includes/nav-menu.php","type":"filter","doc":{"description":"Filters a navigation menu item's title attribute.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.0.0"},{"name":"param","content":"<p>The menu item title attribute.</p>","types":["string"],"variable":"$item_title"}]},"args":1},{"name":"nav_menu_description","file":"wp-includes/nav-menu.php","type":"filter","doc":{"description":"Filters a navigation menu item's description.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.0.0"},{"name":"param","content":"<p>The menu item description.</p>","types":["string"],"variable":"$description"}]},"args":1},{"name":"wp_setup_nav_menu_item","file":"wp-includes/nav-menu.php","type":"filter","doc":{"description":"Filters a navigation menu item object.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.0.0"},{"name":"param","content":"<p>The menu item object.</p>","types":["object"],"variable":"$menu_item"}]},"args":1},{"name":"user_has_cap","file":"wp-includes/class-wp-user.php","type":"filter","doc":{"description":"Dynamically filter a user's capabilities.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.0.0"},{"name":"since","content":"3.7.0","description":"<p>Added the <code>$user</code> parameter.</p>"},{"name":"param","content":"<p>Array of key/value pairs where keys represent a capability name and boolean values represent whether the user has that capability.</p>","types":["bool[]"],"variable":"$allcaps"},{"name":"param","content":"<p>Required primitive capabilities for the requested capability.</p>","types":["string[]"],"variable":"$caps"},{"name":"param","content":"<p>{ Arguments that accompany the requested capability check.</p>","types":["array"],"variable":"$args"},{"name":"param","content":"<p>The user object.</p>","types":["\\WP_User"],"variable":"$user"}]},"args":4},{"name":"font_dir","file":"wp-includes/fonts.php","type":"filter","doc":{"description":"Filters the fonts directory data.","long_description":"This filter allows developers to modify the fonts directory data.","long_description_html":"<p>This filter allows developers to modify the fonts directory data.</p>","tags":[{"name":"since","content":"6.5.0"},{"name":"param","content":"<p>{ Array of information about the font upload directory.</p>","types":["array"],"variable":"$font_dir"}]},"args":1},{"name":"pre_option_{$option}","file":"wp-includes/option.php","type":"filter","doc":{"description":"Filters the value of an existing option before it is retrieved.","long_description":"The dynamic portion of the hook name, `$option`, refers to the option name.\n Returning a value other than false from the filter will short-circuit retrieval and return that value instead.","long_description_html":"<p>The dynamic portion of the hook name, <code>$option</code>, refers to the option name.</p> <p>Returning a value other than false from the filter will short-circuit retrieval and return that value instead.</p>","tags":[{"name":"since","content":"1.5.0"},{"name":"since","content":"4.4.0","description":"<p>The <code>$option</code> parameter was added.</p>"},{"name":"since","content":"4.9.0","description":"<p>The <code>$default_value</code> parameter was added.</p>"},{"name":"param","content":"<p>The value to return instead of the option value. This differs from <code>$default_value</code>, which is used as the fallback value in the event the option doesn't exist elsewhere in get_option(). Default false (to skip past the short-circuit).</p>","types":["mixed"],"variable":"$pre_option"},{"name":"param","content":"<p>Option name.</p>","types":["string"],"variable":"$option"},{"name":"param","content":"<p>The fallback value to return if the option does not exist. Default false.</p>","types":["mixed"],"variable":"$default_value"}]},"args":3},{"name":"pre_option","file":"wp-includes/option.php","type":"filter","doc":{"description":"Filters the value of all existing options before it is retrieved.","long_description":"Returning a truthy value from the filter will effectively short-circuit retrieval and return the passed value instead.","long_description_html":"<p>Returning a truthy value from the filter will effectively short-circuit retrieval and return the passed value instead.</p>","tags":[{"name":"since","content":"6.1.0"},{"name":"param","content":"<p>The value to return instead of the option value. This differs from <code>$default_value</code>, which is used as the fallback value in the event the option doesn't exist elsewhere in get_option(). Default false (to skip past the short-circuit).</p>","types":["mixed"],"variable":"$pre_option"},{"name":"param","content":"<p>Name of the option.</p>","types":["string"],"variable":"$option"},{"name":"param","content":"<p>The fallback value to return if the option does not exist. Default false.</p>","types":["mixed"],"variable":"$default_value"}]},"args":3},{"name":"default_option_{$option}","file":"wp-includes/option.php","type":"filter","doc":{"description":"Filters the default value for an option.","long_description":"The dynamic portion of the hook name, `$option`, refers to the option name.","long_description_html":"<p>The dynamic portion of the hook name, <code>$option</code>, refers to the option name.</p>","tags":[{"name":"since","content":"3.4.0"},{"name":"since","content":"4.4.0","description":"<p>The <code>$option</code> parameter was added.</p>"},{"name":"since","content":"4.7.0","description":"<p>The <code>$passed_default</code> parameter was added to distinguish between a <code>false</code> value and the default parameter value.</p>"},{"name":"param","content":"<p>The default value to return if the option does not exist in the database.</p>","types":["mixed"],"variable":"$default_value"},{"name":"param","content":"<p>Option name.</p>","types":["string"],"variable":"$option"},{"name":"param","content":"<p>Was <code>get_option()</code> passed a default value?</p>","types":["bool"],"variable":"$passed_default"}]},"args":3},{"name":"option_{$option}","file":"wp-includes/option.php","type":"filter","doc":{"description":"Filters the value of an existing option.","long_description":"The dynamic portion of the hook name, `$option`, refers to the option name.","long_description_html":"<p>The dynamic portion of the hook name, <code>$option</code>, refers to the option name.</p>","tags":[{"name":"since","content":"1.5.0","description":"<p>As 'option_' . $setting</p>"},{"name":"since","content":"3.0.0"},{"name":"since","content":"4.4.0","description":"<p>The <code>$option</code> parameter was added.</p>"},{"name":"param","content":"<p>Value of the option. If stored serialized, it will be unserialized prior to being returned.</p>","types":["mixed"],"variable":"$value"},{"name":"param","content":"<p>Option name.</p>","types":["string"],"variable":"$option"}]},"args":2},{"name":"pre_wp_load_alloptions","file":"wp-includes/option.php","type":"filter","doc":{"description":"Filters the array of alloptions before it is populated.","long_description":"Returning an array from the filter will effectively short circuit wp_load_alloptions(), returning that value instead.","long_description_html":"<p>Returning an array from the filter will effectively short circuit wp_load_alloptions(), returning that value instead.</p>","tags":[{"name":"since","content":"6.2.0"},{"name":"param","content":"<p>An array of alloptions. Default null.</p>","types":["array","null"],"variable":"$alloptions"},{"name":"param","content":"<p>Whether to force an update of the local cache from the persistent cache. Default false.</p>","types":["bool"],"variable":"$force_cache"}]},"args":2},{"name":"pre_cache_alloptions","file":"wp-includes/option.php","type":"filter","doc":{"description":"Filters all options before caching them.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.9.0"},{"name":"param","content":"<p>Array with all options.</p>","types":["array"],"variable":"$alloptions"}]},"args":1},{"name":"alloptions","file":"wp-includes/option.php","type":"filter","doc":{"description":"Filters all options after retrieving them.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.9.0"},{"name":"param","content":"<p>Array with all options.</p>","types":["array"],"variable":"$alloptions"}]},"args":1},{"name":"pre_update_option_{$option}","file":"wp-includes/option.php","type":"filter","doc":{"description":"Filters a specific option before its value is (maybe) serialized and updated.","long_description":"The dynamic portion of the hook name, `$option`, refers to the option name.","long_description_html":"<p>The dynamic portion of the hook name, <code>$option</code>, refers to the option name.</p>","tags":[{"name":"since","content":"2.6.0"},{"name":"since","content":"4.4.0","description":"<p>The <code>$option</code> parameter was added.</p>"},{"name":"param","content":"<p>The new, unserialized option value.</p>","types":["mixed"],"variable":"$value"},{"name":"param","content":"<p>The old option value.</p>","types":["mixed"],"variable":"$old_value"},{"name":"param","content":"<p>Option name.</p>","types":["string"],"variable":"$option"}]},"args":3},{"name":"pre_update_option","file":"wp-includes/option.php","type":"filter","doc":{"description":"Filters an option before its value is (maybe) serialized and updated.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.9.0"},{"name":"param","content":"<p>The new, unserialized option value.</p>","types":["mixed"],"variable":"$value"},{"name":"param","content":"<p>Name of the option.</p>","types":["string"],"variable":"$option"},{"name":"param","content":"<p>The old option value.</p>","types":["mixed"],"variable":"$old_value"}]},"args":3},{"name":"wp_default_autoload_value","file":"wp-includes/option.php","type":"filter","doc":{"description":"Allows to determine the default autoload value for an option where no explicit value is passed.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"6.6.0"},{"name":"param","content":"<p>The default autoload value to set. Returning true will be set as 'auto-on' in the database, false will be set as 'auto-off', and null will be set as 'auto'.</p>","types":["bool","null"],"variable":"$autoload"},{"name":"param","content":"<p>The passed option name.</p>","types":["string"],"variable":"$option"},{"name":"param","content":"<p>The passed option value to be saved.</p>","types":["mixed"],"variable":"$value"}]},"args":4},{"name":"wp_max_autoloaded_option_size","file":"wp-includes/option.php","type":"filter","doc":{"description":"Filters the maximum size of option value in bytes.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"6.6.0"},{"name":"param","content":"<p>The option-size threshold, in bytes. Default 150000.</p>","types":["int"],"variable":"$max_option_size"},{"name":"param","content":"<p>The name of the option.</p>","types":["string"],"variable":"$option"}]},"args":2},{"name":"pre_transient_{$transient}","file":"wp-includes/option.php","type":"filter","doc":{"description":"Filters the value of an existing transient before it is retrieved.","long_description":"The dynamic portion of the hook name, `$transient`, refers to the transient name.\n Returning a value other than false from the filter will short-circuit retrieval and return that value instead.","long_description_html":"<p>The dynamic portion of the hook name, <code>$transient</code>, refers to the transient name.</p> <p>Returning a value other than false from the filter will short-circuit retrieval and return that value instead.</p>","tags":[{"name":"since","content":"2.8.0"},{"name":"since","content":"4.4.0","description":"<p>The <code>$transient</code> parameter was added</p>"},{"name":"param","content":"<p>The default value to return if the transient does not exist. Any value other than false will short-circuit the retrieval of the transient, and return that value.</p>","types":["mixed"],"variable":"$pre_transient"},{"name":"param","content":"<p>Transient name.</p>","types":["string"],"variable":"$transient"}]},"args":2},{"name":"transient_{$transient}","file":"wp-includes/option.php","type":"filter","doc":{"description":"Filters an existing transient's value.","long_description":"The dynamic portion of the hook name, `$transient`, refers to the transient name.","long_description_html":"<p>The dynamic portion of the hook name, <code>$transient</code>, refers to the transient name.</p>","tags":[{"name":"since","content":"2.8.0"},{"name":"since","content":"4.4.0","description":"<p>The <code>$transient</code> parameter was added</p>"},{"name":"param","content":"<p>Value of transient.</p>","types":["mixed"],"variable":"$value"},{"name":"param","content":"<p>Transient name.</p>","types":["string"],"variable":"$transient"}]},"args":2},{"name":"pre_set_transient_{$transient}","file":"wp-includes/option.php","type":"filter","doc":{"description":"Filters a specific transient before its value is set.","long_description":"The dynamic portion of the hook name, `$transient`, refers to the transient name.","long_description_html":"<p>The dynamic portion of the hook name, <code>$transient</code>, refers to the transient name.</p>","tags":[{"name":"since","content":"3.0.0"},{"name":"since","content":"4.2.0","description":"<p>The <code>$expiration</code> parameter was added.</p>"},{"name":"since","content":"4.4.0","description":"<p>The <code>$transient</code> parameter was added.</p>"},{"name":"param","content":"<p>New value of transient.</p>","types":["mixed"],"variable":"$value"},{"name":"param","content":"<p>Time until expiration in seconds.</p>","types":["int"],"variable":"$expiration"},{"name":"param","content":"<p>Transient name.</p>","types":["string"],"variable":"$transient"}]},"args":3},{"name":"expiration_of_transient_{$transient}","file":"wp-includes/option.php","type":"filter","doc":{"description":"Filters the expiration for a transient before its value is set.","long_description":"The dynamic portion of the hook name, `$transient`, refers to the transient name.","long_description_html":"<p>The dynamic portion of the hook name, <code>$transient</code>, refers to the transient name.</p>","tags":[{"name":"since","content":"4.4.0"},{"name":"param","content":"<p>Time until expiration in seconds. Use 0 for no expiration.</p>","types":["int"],"variable":"$expiration"},{"name":"param","content":"<p>New value of transient.</p>","types":["mixed"],"variable":"$value"},{"name":"param","content":"<p>Transient name.</p>","types":["string"],"variable":"$transient"}]},"args":3},{"name":"pre_site_option_{$option}","file":"wp-includes/option.php","type":"filter","doc":{"description":"Filters the value of an existing network option before it is retrieved.","long_description":"The dynamic portion of the hook name, `$option`, refers to the option name.\n Returning a value other than false from the filter will short-circuit retrieval and return that value instead.","long_description_html":"<p>The dynamic portion of the hook name, <code>$option</code>, refers to the option name.</p> <p>Returning a value other than false from the filter will short-circuit retrieval and return that value instead.</p>","tags":[{"name":"since","content":"2.9.0","description":"<p>As 'pre_site<em>option</em>' . $key</p>"},{"name":"since","content":"3.0.0"},{"name":"since","content":"4.4.0","description":"<p>The <code>$option</code> parameter was added.</p>"},{"name":"since","content":"4.7.0","description":"<p>The <code>$network_id</code> parameter was added.</p>"},{"name":"since","content":"4.9.0","description":"<p>The <code>$default_value</code> parameter was added.</p>"},{"name":"param","content":"<p>The value to return instead of the option value. This differs from <code>$default_value</code>, which is used as the fallback value in the event the option doesn't exist elsewhere in get_network_option(). Default false (to skip past the short-circuit).</p>","types":["mixed"],"variable":"$pre_site_option"},{"name":"param","content":"<p>Option name.</p>","types":["string"],"variable":"$option"},{"name":"param","content":"<p>ID of the network.</p>","types":["int"],"variable":"$network_id"},{"name":"param","content":"<p>The fallback value to return if the option does not exist. Default false.</p>","types":["mixed"],"variable":"$default_value"}]},"args":4},{"name":"default_site_option_{$option}","file":"wp-includes/option.php","type":"filter","doc":{"description":"Filters the value of a specific default network option.","long_description":"The dynamic portion of the hook name, `$option`, refers to the option name.","long_description_html":"<p>The dynamic portion of the hook name, <code>$option</code>, refers to the option name.</p>","tags":[{"name":"since","content":"3.4.0"},{"name":"since","content":"4.4.0","description":"<p>The <code>$option</code> parameter was added.</p>"},{"name":"since","content":"4.7.0","description":"<p>The <code>$network_id</code> parameter was added.</p>"},{"name":"param","content":"<p>The value to return if the site option does not exist in the database.</p>","types":["mixed"],"variable":"$default_value"},{"name":"param","content":"<p>Option name.</p>","types":["string"],"variable":"$option"},{"name":"param","content":"<p>ID of the network.</p>","types":["int"],"variable":"$network_id"}]},"args":3},{"name":"site_option_{$option}","file":"wp-includes/option.php","type":"filter","doc":{"description":"Filters the value of an existing network option.","long_description":"The dynamic portion of the hook name, `$option`, refers to the option name.","long_description_html":"<p>The dynamic portion of the hook name, <code>$option</code>, refers to the option name.</p>","tags":[{"name":"since","content":"2.9.0","description":"<p>As 'site<em>option</em>' . $key</p>"},{"name":"since","content":"3.0.0"},{"name":"since","content":"4.4.0","description":"<p>The <code>$option</code> parameter was added.</p>"},{"name":"since","content":"4.7.0","description":"<p>The <code>$network_id</code> parameter was added.</p>"},{"name":"param","content":"<p>Value of network option.</p>","types":["mixed"],"variable":"$value"},{"name":"param","content":"<p>Option name.</p>","types":["string"],"variable":"$option"},{"name":"param","content":"<p>ID of the network.</p>","types":["int"],"variable":"$network_id"}]},"args":3},{"name":"pre_add_site_option_{$option}","file":"wp-includes/option.php","type":"filter","doc":{"description":"Filters the value of a specific network option before it is added.","long_description":"The dynamic portion of the hook name, `$option`, refers to the option name.","long_description_html":"<p>The dynamic portion of the hook name, <code>$option</code>, refers to the option name.</p>","tags":[{"name":"since","content":"2.9.0","description":"<p>As 'pre_add_site<em>option</em>' . $key</p>"},{"name":"since","content":"3.0.0"},{"name":"since","content":"4.4.0","description":"<p>The <code>$option</code> parameter was added.</p>"},{"name":"since","content":"4.7.0","description":"<p>The <code>$network_id</code> parameter was added.</p>"},{"name":"param","content":"<p>Value of network option.</p>","types":["mixed"],"variable":"$value"},{"name":"param","content":"<p>Option name.</p>","types":["string"],"variable":"$option"},{"name":"param","content":"<p>ID of the network.</p>","types":["int"],"variable":"$network_id"}]},"args":3},{"name":"pre_update_site_option_{$option}","file":"wp-includes/option.php","type":"filter","doc":{"description":"Filters a specific network option before its value is updated.","long_description":"The dynamic portion of the hook name, `$option`, refers to the option name.","long_description_html":"<p>The dynamic portion of the hook name, <code>$option</code>, refers to the option name.</p>","tags":[{"name":"since","content":"2.9.0","description":"<p>As 'pre_update_site<em>option</em>' . $key</p>"},{"name":"since","content":"3.0.0"},{"name":"since","content":"4.4.0","description":"<p>The <code>$option</code> parameter was added.</p>"},{"name":"since","content":"4.7.0","description":"<p>The <code>$network_id</code> parameter was added.</p>"},{"name":"param","content":"<p>New value of the network option.</p>","types":["mixed"],"variable":"$value"},{"name":"param","content":"<p>Old value of the network option.</p>","types":["mixed"],"variable":"$old_value"},{"name":"param","content":"<p>Option name.</p>","types":["string"],"variable":"$option"},{"name":"param","content":"<p>ID of the network.</p>","types":["int"],"variable":"$network_id"}]},"args":4},{"name":"pre_site_transient_{$transient}","file":"wp-includes/option.php","type":"filter","doc":{"description":"Filters the value of an existing site transient before it is retrieved.","long_description":"The dynamic portion of the hook name, `$transient`, refers to the transient name.\n Returning a value other than boolean false will short-circuit retrieval and return that value instead.","long_description_html":"<p>The dynamic portion of the hook name, <code>$transient</code>, refers to the transient name.</p> <p>Returning a value other than boolean false will short-circuit retrieval and return that value instead.</p>","tags":[{"name":"since","content":"2.9.0"},{"name":"since","content":"4.4.0","description":"<p>The <code>$transient</code> parameter was added.</p>"},{"name":"param","content":"<p>The default value to return if the site transient does not exist. Any value other than false will short-circuit the retrieval of the transient, and return that value.</p>","types":["mixed"],"variable":"$pre_site_transient"},{"name":"param","content":"<p>Transient name.</p>","types":["string"],"variable":"$transient"}]},"args":2},{"name":"site_transient_{$transient}","file":"wp-includes/option.php","type":"filter","doc":{"description":"Filters the value of an existing site transient.","long_description":"The dynamic portion of the hook name, `$transient`, refers to the transient name.","long_description_html":"<p>The dynamic portion of the hook name, <code>$transient</code>, refers to the transient name.</p>","tags":[{"name":"since","content":"2.9.0"},{"name":"since","content":"4.4.0","description":"<p>The <code>$transient</code> parameter was added.</p>"},{"name":"param","content":"<p>Value of site transient.</p>","types":["mixed"],"variable":"$value"},{"name":"param","content":"<p>Transient name.</p>","types":["string"],"variable":"$transient"}]},"args":2},{"name":"pre_set_site_transient_{$transient}","file":"wp-includes/option.php","type":"filter","doc":{"description":"Filters the value of a specific site transient before it is set.","long_description":"The dynamic portion of the hook name, `$transient`, refers to the transient name.","long_description_html":"<p>The dynamic portion of the hook name, <code>$transient</code>, refers to the transient name.</p>","tags":[{"name":"since","content":"3.0.0"},{"name":"since","content":"4.4.0","description":"<p>The <code>$transient</code> parameter was added.</p>"},{"name":"param","content":"<p>New value of site transient.</p>","types":["mixed"],"variable":"$value"},{"name":"param","content":"<p>Transient name.</p>","types":["string"],"variable":"$transient"}]},"args":2},{"name":"expiration_of_site_transient_{$transient}","file":"wp-includes/option.php","type":"filter","doc":{"description":"Filters the expiration for a site transient before its value is set.","long_description":"The dynamic portion of the hook name, `$transient`, refers to the transient name.","long_description_html":"<p>The dynamic portion of the hook name, <code>$transient</code>, refers to the transient name.</p>","tags":[{"name":"since","content":"4.4.0"},{"name":"param","content":"<p>Time until expiration in seconds. Use 0 for no expiration.</p>","types":["int"],"variable":"$expiration"},{"name":"param","content":"<p>New value of site transient.</p>","types":["mixed"],"variable":"$value"},{"name":"param","content":"<p>Transient name.</p>","types":["string"],"variable":"$transient"}]},"args":3},{"name":"register_setting_args","file":"wp-includes/option.php","type":"filter","doc":{"description":"Filters the registration arguments when registering a setting.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.7.0"},{"name":"param","content":"<p>Array of setting registration arguments.</p>","types":["array"],"variable":"$args"},{"name":"param","content":"<p>Array of default arguments.</p>","types":["array"],"variable":"$defaults"},{"name":"param","content":"<p>Setting group.</p>","types":["string"],"variable":"$option_group"},{"name":"param","content":"<p>Setting name.</p>","types":["string"],"variable":"$option_name"}]},"args":4},{"name":"wp_autoload_values_to_autoload","file":"wp-includes/option.php","type":"filter","doc":{"description":"Filters the autoload values that should be considered for autoloading from the options table.","long_description":"The filter can only be used to remove autoload values from the default list.","long_description_html":"<p>The filter can only be used to remove autoload values from the default list.</p>","tags":[{"name":"since","content":"6.6.0"},{"name":"param","content":"<p>Autoload values used to autoload option. Default list contains 'yes', 'on', 'auto-on', and 'auto'.</p>","types":["string[]"],"variable":"$autoload_values"}]},"args":1},{"name":"script_loader_src","file":"wp-includes/class-wp-scripts.php","type":"filter","doc":{"description":"Filters the script loader source.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.2.0"},{"name":"param","content":"<p>Script loader source path.</p>","types":["string"],"variable":"$src"},{"name":"param","content":"<p>Script handle.</p>","types":["string"],"variable":"$handle"}]},"args":2},{"name":"script_loader_tag","file":"wp-includes/class-wp-scripts.php","type":"filter","doc":{"description":"Filters the HTML script tag of an enqueued script.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.1.0"},{"name":"param","content":"<p>The <code>&lt;script&gt;</code> tag for the enqueued script.</p>","types":["string"],"variable":"$tag"},{"name":"param","content":"<p>The script's registered handle.</p>","types":["string"],"variable":"$handle"},{"name":"param","content":"<p>The script's source URL.</p>","types":["string"],"variable":"$src"}]},"args":3},{"name":"print_scripts_array","file":"wp-includes/class-wp-scripts.php","type":"filter","doc":{"description":"Filters the list of script dependencies left to print.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.3.0"},{"name":"param","content":"<p>An array of script dependency handles.</p>","types":["string[]"],"variable":"$to_do"}]},"args":1},{"name":"lang_dir_for_domain","file":"wp-includes/class-wp-textdomain-registry.php","type":"filter","doc":{"description":"Filters the determined languages directory path for a specific domain and locale.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"6.6.0"},{"name":"param","content":"<p>Languages directory path for the given domain and locale.</p>","types":["string","false"],"variable":"$path"},{"name":"param","content":"<p>Text domain.</p>","types":["string"],"variable":"$domain"},{"name":"param","content":"<p>Locale.</p>","types":["string"],"variable":"$locale"}]},"args":3},{"name":"pre_get_language_files_from_path","file":"wp-includes/class-wp-textdomain-registry.php","type":"filter","doc":{"description":"Filters the translation files retrieved from a specified path before the actual lookup.","long_description":"Returning a non-null value from the filter will effectively short-circuit the MO files lookup, returning that value instead.\n This can be useful in situations where the directory contains a large number of files and the default glob() function becomes expensive in terms of performance.","long_description_html":"<p>Returning a non-null value from the filter will effectively short-circuit the MO files lookup, returning that value instead.</p> <p>This can be useful in situations where the directory contains a large number of files and the default glob() function becomes expensive in terms of performance.</p>","tags":[{"name":"since","content":"6.5.0"},{"name":"param","content":"<p>List of translation files. Default null.</p>","types":["null","array"],"variable":"$files"},{"name":"param","content":"<p>The path from which translation files are being fetched.</p>","types":["string"],"variable":"$path"}]},"args":2},{"name":"wp_feed_cache_transient_lifetime","file":"wp-includes/class-wp-feed-cache-transient.php","type":"filter","doc":{"description":"Filters the transient lifetime of the feed cache.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.8.0"},{"name":"param","content":"<p>Cache duration in seconds. Default is 43200 seconds (12 hours).</p>","types":["int"],"variable":"$lifetime"},{"name":"param","content":"<p>Unique identifier for the cache object.</p>","types":["string"],"variable":"$name"}]},"args":2},{"name":"wp_plugin_dependencies_slug","file":"wp-includes/class-wp-plugin-dependencies.php","type":"filter","doc":{"description":"Filters a plugin dependency's slug before matching to the WordPress.org slug format.","long_description":"Can be used to switch between free and premium plugin slugs, for example.","long_description_html":"<p>Can be used to switch between free and premium plugin slugs, for example.</p>","tags":[{"name":"since","content":"6.5.0"},{"name":"param","content":"<p>The slug.</p>","types":["string"],"variable":"$slug"}]},"args":1},{"name":"locale","file":"wp-includes/l10n.php","type":"filter","doc":{"description":"Filters the locale ID of the WordPress installation.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"1.5.0"},{"name":"param","content":"<p>The locale ID.</p>","types":["string"],"variable":"$locale"}]},"args":1},{"name":"pre_determine_locale","file":"wp-includes/l10n.php","type":"filter","doc":{"description":"Filters the locale for the current request prior to the default determination process.","long_description":"Using this filter allows to override the default logic, effectively short-circuiting the function.","long_description_html":"<p>Using this filter allows to override the default logic, effectively short-circuiting the function.</p>","tags":[{"name":"since","content":"5.0.0"},{"name":"param","content":"<p>The locale to return and short-circuit. Default null.</p>","types":["string","null"],"variable":"$locale"}]},"args":1},{"name":"determine_locale","file":"wp-includes/l10n.php","type":"filter","doc":{"description":"Filters the locale for the current request.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.0.0"},{"name":"param","content":"<p>The locale.</p>","types":["string"],"variable":"$determined_locale"}]},"args":1},{"name":"gettext","file":"wp-includes/l10n.php","type":"filter","doc":{"description":"Filters text with its translation.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.0.11"},{"name":"param","content":"<p>Translated text.</p>","types":["string"],"variable":"$translation"},{"name":"param","content":"<p>Text to translate.</p>","types":["string"],"variable":"$text"},{"name":"param","content":"<p>Text domain. Unique identifier for retrieving translated strings.</p>","types":["string"],"variable":"$domain"}]},"args":3},{"name":"gettext_{$domain}","file":"wp-includes/l10n.php","type":"filter","doc":{"description":"Filters text with its translation for a domain.","long_description":"The dynamic portion of the hook name, `$domain`, refers to the text domain.","long_description_html":"<p>The dynamic portion of the hook name, <code>$domain</code>, refers to the text domain.</p>","tags":[{"name":"since","content":"5.5.0"},{"name":"param","content":"<p>Translated text.</p>","types":["string"],"variable":"$translation"},{"name":"param","content":"<p>Text to translate.</p>","types":["string"],"variable":"$text"},{"name":"param","content":"<p>Text domain. Unique identifier for retrieving translated strings.</p>","types":["string"],"variable":"$domain"}]},"args":3},{"name":"gettext_with_context","file":"wp-includes/l10n.php","type":"filter","doc":{"description":"Filters text with its translation based on context information.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.8.0"},{"name":"param","content":"<p>Translated text.</p>","types":["string"],"variable":"$translation"},{"name":"param","content":"<p>Text to translate.</p>","types":["string"],"variable":"$text"},{"name":"param","content":"<p>Context information for the translators.</p>","types":["string"],"variable":"$context"},{"name":"param","content":"<p>Text domain. Unique identifier for retrieving translated strings.</p>","types":["string"],"variable":"$domain"}]},"args":4},{"name":"gettext_with_context_{$domain}","file":"wp-includes/l10n.php","type":"filter","doc":{"description":"Filters text with its translation based on context information for a domain.","long_description":"The dynamic portion of the hook name, `$domain`, refers to the text domain.","long_description_html":"<p>The dynamic portion of the hook name, <code>$domain</code>, refers to the text domain.</p>","tags":[{"name":"since","content":"5.5.0"},{"name":"param","content":"<p>Translated text.</p>","types":["string"],"variable":"$translation"},{"name":"param","content":"<p>Text to translate.</p>","types":["string"],"variable":"$text"},{"name":"param","content":"<p>Context information for the translators.</p>","types":["string"],"variable":"$context"},{"name":"param","content":"<p>Text domain. Unique identifier for retrieving translated strings.</p>","types":["string"],"variable":"$domain"}]},"args":4},{"name":"ngettext","file":"wp-includes/l10n.php","type":"filter","doc":{"description":"Filters the singular or plural form of a string.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.2.0"},{"name":"param","content":"<p>Translated text.</p>","types":["string"],"variable":"$translation"},{"name":"param","content":"<p>The text to be used if the number is singular.</p>","types":["string"],"variable":"$single"},{"name":"param","content":"<p>The text to be used if the number is plural.</p>","types":["string"],"variable":"$plural"},{"name":"param","content":"<p>The number to compare against to use either the singular or plural form.</p>","types":["int"],"variable":"$number"},{"name":"param","content":"<p>Text domain. Unique identifier for retrieving translated strings.</p>","types":["string"],"variable":"$domain"}]},"args":5},{"name":"ngettext_{$domain}","file":"wp-includes/l10n.php","type":"filter","doc":{"description":"Filters the singular or plural form of a string for a domain.","long_description":"The dynamic portion of the hook name, `$domain`, refers to the text domain.","long_description_html":"<p>The dynamic portion of the hook name, <code>$domain</code>, refers to the text domain.</p>","tags":[{"name":"since","content":"5.5.0"},{"name":"param","content":"<p>Translated text.</p>","types":["string"],"variable":"$translation"},{"name":"param","content":"<p>The text to be used if the number is singular.</p>","types":["string"],"variable":"$single"},{"name":"param","content":"<p>The text to be used if the number is plural.</p>","types":["string"],"variable":"$plural"},{"name":"param","content":"<p>The number to compare against to use either the singular or plural form.</p>","types":["int"],"variable":"$number"},{"name":"param","content":"<p>Text domain. Unique identifier for retrieving translated strings.</p>","types":["string"],"variable":"$domain"}]},"args":5},{"name":"ngettext_with_context","file":"wp-includes/l10n.php","type":"filter","doc":{"description":"Filters the singular or plural form of a string with gettext context.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.8.0"},{"name":"param","content":"<p>Translated text.</p>","types":["string"],"variable":"$translation"},{"name":"param","content":"<p>The text to be used if the number is singular.</p>","types":["string"],"variable":"$single"},{"name":"param","content":"<p>The text to be used if the number is plural.</p>","types":["string"],"variable":"$plural"},{"name":"param","content":"<p>The number to compare against to use either the singular or plural form.</p>","types":["int"],"variable":"$number"},{"name":"param","content":"<p>Context information for the translators.</p>","types":["string"],"variable":"$context"},{"name":"param","content":"<p>Text domain. Unique identifier for retrieving translated strings.</p>","types":["string"],"variable":"$domain"}]},"args":6},{"name":"ngettext_with_context_{$domain}","file":"wp-includes/l10n.php","type":"filter","doc":{"description":"Filters the singular or plural form of a string with gettext context for a domain.","long_description":"The dynamic portion of the hook name, `$domain`, refers to the text domain.","long_description_html":"<p>The dynamic portion of the hook name, <code>$domain</code>, refers to the text domain.</p>","tags":[{"name":"since","content":"5.5.0"},{"name":"param","content":"<p>Translated text.</p>","types":["string"],"variable":"$translation"},{"name":"param","content":"<p>The text to be used if the number is singular.</p>","types":["string"],"variable":"$single"},{"name":"param","content":"<p>The text to be used if the number is plural.</p>","types":["string"],"variable":"$plural"},{"name":"param","content":"<p>The number to compare against to use either the singular or plural form.</p>","types":["int"],"variable":"$number"},{"name":"param","content":"<p>Context information for the translators.</p>","types":["string"],"variable":"$context"},{"name":"param","content":"<p>Text domain. Unique identifier for retrieving translated strings.</p>","types":["string"],"variable":"$domain"}]},"args":6},{"name":"pre_load_textdomain","file":"wp-includes/l10n.php","type":"filter","doc":{"description":"Filters whether to short-circuit loading .mo file.","long_description":"Returning a non-null value from the filter will effectively short-circuit the loading, returning the passed value instead.","long_description_html":"<p>Returning a non-null value from the filter will effectively short-circuit the loading, returning the passed value instead.</p>","tags":[{"name":"since","content":"6.3.0"},{"name":"param","content":"<p>The result of loading a .mo file. Default null.</p>","types":["bool","null"],"variable":"$loaded"},{"name":"param","content":"<p>Text domain. Unique identifier for retrieving translated strings.</p>","types":["string"],"variable":"$domain"},{"name":"param","content":"<p>Path to the MO file.</p>","types":["string"],"variable":"$mofile"},{"name":"param","content":"<p>Locale.</p>","types":["string","null"],"variable":"$locale"}]},"args":4},{"name":"override_load_textdomain","file":"wp-includes/l10n.php","type":"filter","doc":{"description":"Filters whether to override the .mo file loading.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.9.0"},{"name":"since","content":"6.2.0","description":"<p>Added the <code>$locale</code> parameter.</p>"},{"name":"param","content":"<p>Whether to override the .mo file loading. Default false.</p>","types":["bool"],"variable":"$override"},{"name":"param","content":"<p>Text domain. Unique identifier for retrieving translated strings.</p>","types":["string"],"variable":"$domain"},{"name":"param","content":"<p>Path to the MO file.</p>","types":["string"],"variable":"$mofile"},{"name":"param","content":"<p>Locale.</p>","types":["string","null"],"variable":"$locale"}]},"args":4},{"name":"load_textdomain_mofile","file":"wp-includes/l10n.php","type":"filter","doc":{"description":"Filters MO file path for loading translations for a specific text domain.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.9.0"},{"name":"param","content":"<p>Path to the MO file.</p>","types":["string"],"variable":"$mofile"},{"name":"param","content":"<p>Text domain. Unique identifier for retrieving translated strings.</p>","types":["string"],"variable":"$domain"}]},"args":2},{"name":"translation_file_format","file":"wp-includes/l10n.php","type":"filter","doc":{"description":"Filters the preferred file format for translation files.","long_description":"Can be used to disable the use of PHP files for translations.","long_description_html":"<p>Can be used to disable the use of PHP files for translations.</p>","tags":[{"name":"since","content":"6.5.0"},{"name":"param","content":"<p>Preferred file format. Possible values: 'php', 'mo'. Default: 'php'.</p>","types":["string"],"variable":"$preferred_format"},{"name":"param","content":"<p>The text domain.</p>","types":["string"],"variable":"$domain"}]},"args":2},{"name":"load_translation_file","file":"wp-includes/l10n.php","type":"filter","doc":{"description":"Filters the file path for loading translations for the given text domain.","long_description":"Similar to the {@see 'load_textdomain_mofile'} filter with the difference that the file path could be for an MO or PHP file.","long_description_html":"<p>Similar to the {@see 'load_textdomain_mofile'} filter with the difference that the file path could be for an MO or PHP file.</p>","tags":[{"name":"since","content":"6.5.0"},{"name":"since","content":"6.6.0","description":"<p>Added the <code>$locale</code> parameter.</p>"},{"name":"param","content":"<p>Path to the translation file to load.</p>","types":["string"],"variable":"$file"},{"name":"param","content":"<p>The text domain.</p>","types":["string"],"variable":"$domain"},{"name":"param","content":"<p>The locale.</p>","types":["string"],"variable":"$locale"}]},"args":3},{"name":"override_unload_textdomain","file":"wp-includes/l10n.php","type":"filter","doc":{"description":"Filters whether to override the text domain unloading.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.0.0"},{"name":"since","content":"6.1.0","description":"<p>Added the <code>$reloadable</code> parameter.</p>"},{"name":"param","content":"<p>Whether to override the text domain unloading. Default false.</p>","types":["bool"],"variable":"$override"},{"name":"param","content":"<p>Text domain. Unique identifier for retrieving translated strings.</p>","types":["string"],"variable":"$domain"},{"name":"param","content":"<p>Whether the text domain can be loaded just-in-time again.</p>","types":["bool"],"variable":"$reloadable"}]},"args":3},{"name":"load_script_textdomain_relative_path","file":"wp-includes/l10n.php","type":"filter","doc":{"description":"Filters the relative path of scripts used for finding translation files.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.0.2"},{"name":"param","content":"<p>The relative path of the script. False if it could not be determined.</p>","types":["string","false"],"variable":"$relative"},{"name":"param","content":"<p>The full source URL of the script.</p>","types":["string"],"variable":"$src"}]},"args":2},{"name":"pre_load_script_translations","file":"wp-includes/l10n.php","type":"filter","doc":{"description":"Pre-filters script translations for the given file, script handle and text domain.","long_description":"Returning a non-null value allows to override the default logic, effectively short-circuiting the function.","long_description_html":"<p>Returning a non-null value allows to override the default logic, effectively short-circuiting the function.</p>","tags":[{"name":"since","content":"5.0.2"},{"name":"param","content":"<p>JSON-encoded translation data. Default null.</p>","types":["string","false","null"],"variable":"$translations"},{"name":"param","content":"<p>Path to the translation file to load. False if there isn't one.</p>","types":["string","false"],"variable":"$file"},{"name":"param","content":"<p>Name of the script to register a translation domain to.</p>","types":["string"],"variable":"$handle"},{"name":"param","content":"<p>The text domain.</p>","types":["string"],"variable":"$domain"}]},"args":4},{"name":"load_script_translation_file","file":"wp-includes/l10n.php","type":"filter","doc":{"description":"Filters the file path for loading script translations for the given script handle and text domain.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.0.2"},{"name":"param","content":"<p>Path to the translation file to load. False if there isn't one.</p>","types":["string","false"],"variable":"$file"},{"name":"param","content":"<p>Name of the script to register a translation domain to.</p>","types":["string"],"variable":"$handle"},{"name":"param","content":"<p>The text domain.</p>","types":["string"],"variable":"$domain"}]},"args":3},{"name":"load_script_translations","file":"wp-includes/l10n.php","type":"filter","doc":{"description":"Filters script translations for the given file, script handle and text domain.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.0.2"},{"name":"param","content":"<p>JSON-encoded translation data.</p>","types":["string"],"variable":"$translations"},{"name":"param","content":"<p>Path to the translation file that was loaded.</p>","types":["string"],"variable":"$file"},{"name":"param","content":"<p>Name of the script to register a translation domain to.</p>","types":["string"],"variable":"$handle"},{"name":"param","content":"<p>The text domain.</p>","types":["string"],"variable":"$domain"}]},"args":4},{"name":"get_available_languages","file":"wp-includes/l10n.php","type":"filter","doc":{"description":"Filters the list of available language codes.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.7.0"},{"name":"param","content":"<p>An array of available language codes.</p>","types":["string[]"],"variable":"$languages"},{"name":"param","content":"<p>The directory where the language files were found.</p>","types":["string"],"variable":"$dir"}]},"args":2},{"name":"use_google_chrome_frame","file":"wp-includes/vars.php","type":"filter","doc":{"description":"Filters whether Google Chrome Frame should be used, if available.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.2.0"},{"name":"param","content":"<p>Whether to use the Google Chrome Frame. Default is the value of is_admin().</p>","types":["bool"],"variable":"$is_admin"}]},"args":1},{"name":"wp_is_mobile","file":"wp-includes/vars.php","type":"filter","doc":{"description":"Filters whether the request should be treated as coming from a mobile device or not.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.9.0"},{"name":"param","content":"<p>Whether the request is from a mobile device or not.</p>","types":["bool"],"variable":"$is_mobile"}]},"args":1},{"name":"pre_schedule_event","file":"wp-includes/cron.php","type":"filter","doc":{"description":"Filter to override scheduling an event.","long_description":"Returning a non-null value will short-circuit adding the event to the cron array, causing the function to return the filtered value instead.\n Both single events and recurring events are passed through this filter; single events have `$event->schedule` as false, whereas recurring events have this set to a recurrence from wp_get_schedules(). Recurring events also have the integer recurrence interval set as `$event->interval`.\n For plugins replacing wp-cron, it is recommended you check for an identical event within ten minutes and apply the {@see 'schedule_event'} filter to check if another plugin has disallowed the event before scheduling.\n Return true if the event was scheduled, false or a WP_Error if not.","long_description_html":"<p>Returning a non-null value will short-circuit adding the event to the cron array, causing the function to return the filtered value instead.</p> <p>Both single events and recurring events are passed through this filter; single events have <code>$event-&gt;schedule</code> as false, whereas recurring events have this set to a recurrence from wp_get_schedules(). Recurring events also have the integer recurrence interval set as <code>$event-&gt;interval</code>.</p> <p>For plugins replacing wp-cron, it is recommended you check for an identical event within ten minutes and apply the {@see 'schedule_event'} filter to check if another plugin has disallowed the event before scheduling.</p> <p>Return true if the event was scheduled, false or a WP_Error if not.</p>","tags":[{"name":"since","content":"5.1.0"},{"name":"since","content":"5.7.0","description":"<p>The <code>$wp_error</code> parameter was added, and a <code>WP_Error</code> object can now be returned.</p>"},{"name":"param","content":"<p>The value to return instead. Default null to continue adding the event.</p>","types":["null","bool","\\WP_Error"],"variable":"$result"},{"name":"param","content":"<p>{ An object containing an event's data.</p>","types":["object"],"variable":"$event"},{"name":"param","content":"<p>Whether to return a WP_Error on failure.</p>","types":["bool"],"variable":"$wp_error"}]},"args":3},{"name":"schedule_event","file":"wp-includes/cron.php","type":"filter","doc":{"description":"Modify an event before it is scheduled.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.1.0"},{"name":"param","content":"<p>{ An object containing an event's data, or boolean false to prevent the event from being scheduled.</p>","types":["object","false"],"variable":"$event"}]},"args":1},{"name":"pre_reschedule_event","file":"wp-includes/cron.php","type":"filter","doc":{"description":"Filter to override rescheduling of a recurring event.","long_description":"Returning a non-null value will short-circuit the normal rescheduling process, causing the function to return the filtered value instead.\n For plugins replacing wp-cron, return true if the event was successfully rescheduled, false or a WP_Error if not.","long_description_html":"<p>Returning a non-null value will short-circuit the normal rescheduling process, causing the function to return the filtered value instead.</p> <p>For plugins replacing wp-cron, return true if the event was successfully rescheduled, false or a WP_Error if not.</p>","tags":[{"name":"since","content":"5.1.0"},{"name":"since","content":"5.7.0","description":"<p>The <code>$wp_error</code> parameter was added, and a <code>WP_Error</code> object can now be returned.</p>"},{"name":"param","content":"<p>Value to return instead. Default null to continue adding the event.</p>","types":["null","bool","\\WP_Error"],"variable":"$pre"},{"name":"param","content":"<p>{ An object containing an event's data.</p>","types":["object"],"variable":"$event"},{"name":"param","content":"<p>Whether to return a WP_Error on failure.</p>","types":["bool"],"variable":"$wp_error"}]},"args":3},{"name":"pre_unschedule_event","file":"wp-includes/cron.php","type":"filter","doc":{"description":"Filter to override unscheduling of events.","long_description":"Returning a non-null value will short-circuit the normal unscheduling process, causing the function to return the filtered value instead.\n For plugins replacing wp-cron, return true if the event was successfully unscheduled, false or a WP_Error if not.","long_description_html":"<p>Returning a non-null value will short-circuit the normal unscheduling process, causing the function to return the filtered value instead.</p> <p>For plugins replacing wp-cron, return true if the event was successfully unscheduled, false or a WP_Error if not.</p>","tags":[{"name":"since","content":"5.1.0"},{"name":"since","content":"5.7.0","description":"<p>The <code>$wp_error</code> parameter was added, and a <code>WP_Error</code> object can now be returned.</p>"},{"name":"param","content":"<p>Value to return instead. Default null to continue unscheduling the event.</p>","types":["null","bool","\\WP_Error"],"variable":"$pre"},{"name":"param","content":"<p>Timestamp for when to run the event.</p>","types":["int"],"variable":"$timestamp"},{"name":"param","content":"<p>Action hook, the execution of which will be unscheduled.</p>","types":["string"],"variable":"$hook"},{"name":"param","content":"<p>Arguments to pass to the hook's callback function.</p>","types":["array"],"variable":"$args"},{"name":"param","content":"<p>Whether to return a WP_Error on failure.</p>","types":["bool"],"variable":"$wp_error"}]},"args":5},{"name":"pre_clear_scheduled_hook","file":"wp-includes/cron.php","type":"filter","doc":{"description":"Filter to override clearing a scheduled hook.","long_description":"Returning a non-null value will short-circuit the normal unscheduling process, causing the function to return the filtered value instead.\n For plugins replacing wp-cron, return the number of events successfully unscheduled (zero if no events were registered with the hook) or false or a WP_Error if unscheduling one or more events fails.","long_description_html":"<p>Returning a non-null value will short-circuit the normal unscheduling process, causing the function to return the filtered value instead.</p> <p>For plugins replacing wp-cron, return the number of events successfully unscheduled (zero if no events were registered with the hook) or false or a WP_Error if unscheduling one or more events fails.</p>","tags":[{"name":"since","content":"5.1.0"},{"name":"since","content":"5.7.0","description":"<p>The <code>$wp_error</code> parameter was added, and a <code>WP_Error</code> object can now be returned.</p>"},{"name":"param","content":"<p>Value to return instead. Default null to continue unscheduling the event.</p>","types":["null","int","false","\\WP_Error"],"variable":"$pre"},{"name":"param","content":"<p>Action hook, the execution of which will be unscheduled.</p>","types":["string"],"variable":"$hook"},{"name":"param","content":"<p>Arguments to pass to the hook's callback function.</p>","types":["array"],"variable":"$args"},{"name":"param","content":"<p>Whether to return a WP_Error on failure.</p>","types":["bool"],"variable":"$wp_error"}]},"args":4},{"name":"pre_unschedule_hook","file":"wp-includes/cron.php","type":"filter","doc":{"description":"Filter to override clearing all events attached to the hook.","long_description":"Returning a non-null value will short-circuit the normal unscheduling process, causing the function to return the filtered value instead.\n For plugins replacing wp-cron, return the number of events successfully unscheduled (zero if no events were registered with the hook). If unscheduling one or more events fails then return either a WP_Error object or false depending on the value of the `$wp_error` parameter.","long_description_html":"<p>Returning a non-null value will short-circuit the normal unscheduling process, causing the function to return the filtered value instead.</p> <p>For plugins replacing wp-cron, return the number of events successfully unscheduled (zero if no events were registered with the hook). If unscheduling one or more events fails then return either a WP_Error object or false depending on the value of the <code>$wp_error</code> parameter.</p>","tags":[{"name":"since","content":"5.1.0"},{"name":"since","content":"5.7.0","description":"<p>The <code>$wp_error</code> parameter was added, and a <code>WP_Error</code> object can now be returned.</p>"},{"name":"param","content":"<p>Value to return instead. Default null to continue unscheduling the hook.</p>","types":["null","int","false","\\WP_Error"],"variable":"$pre"},{"name":"param","content":"<p>Action hook, the execution of which will be unscheduled.</p>","types":["string"],"variable":"$hook"},{"name":"param","content":"<p>Whether to return a WP_Error on failure.</p>","types":["bool"],"variable":"$wp_error"}]},"args":3},{"name":"pre_get_scheduled_event","file":"wp-includes/cron.php","type":"filter","doc":{"description":"Filter to override retrieving a scheduled event.","long_description":"Returning a non-null value will short-circuit the normal process, returning the filtered value instead.\n Return false if the event does not exist, otherwise an event object should be returned.","long_description_html":"<p>Returning a non-null value will short-circuit the normal process, returning the filtered value instead.</p> <p>Return false if the event does not exist, otherwise an event object should be returned.</p>","tags":[{"name":"since","content":"5.1.0"},{"name":"param","content":"<p>Value to return instead. Default null to continue retrieving the event.</p>","types":["null","false","object"],"variable":"$pre"},{"name":"param","content":"<p>Action hook of the event.</p>","types":["string"],"variable":"$hook"},{"name":"param","content":"<p>Array containing each separate argument to pass to the hook's callback function. Although not passed to a callback, these arguments are used to uniquely identify the event.</p>","types":["array"],"variable":"$args"},{"name":"param","content":"<p>Unix timestamp (UTC) of the event. Null to retrieve next scheduled event.</p>","types":["int","null"],"variable":"$timestamp"}]},"args":4},{"name":"cron_request","file":"wp-includes/cron.php","type":"filter","doc":{"description":"Filters the cron request arguments.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.5.0"},{"name":"since","content":"4.5.0","description":"<p>The <code>$doing_wp_cron</code> parameter was added.</p>"},{"name":"param","content":"<p>{ An array of cron request URL arguments.</p>","types":["array"],"variable":"$cron_request_array"},{"name":"param","content":"<p>The unix timestamp of the cron lock.</p>","types":["string"],"variable":"$doing_wp_cron"}]},"args":2},{"name":"cron_schedules","file":"wp-includes/cron.php","type":"filter","doc":{"description":"Filters the non-default cron schedules.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.1.0"},{"name":"param","content":"<p>{ An array of non-default cron schedules keyed by the schedule name. Default empty array.</p>","types":["array"],"variable":"$new_schedules"}]},"args":1},{"name":"get_schedule","file":"wp-includes/cron.php","type":"filter","doc":{"description":"Filters the schedule name for a hook.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.1.0"},{"name":"param","content":"<p>Schedule for the hook. False if not found.</p>","types":["string","false"],"variable":"$schedule"},{"name":"param","content":"<p>Action hook to execute when cron is run.</p>","types":["string"],"variable":"$hook"},{"name":"param","content":"<p>Arguments to pass to the hook's callback function.</p>","types":["array"],"variable":"$args"}]},"args":3},{"name":"pre_get_ready_cron_jobs","file":"wp-includes/cron.php","type":"filter","doc":{"description":"Filter to override retrieving ready cron jobs.","long_description":"Returning an array will short-circuit the normal retrieval of ready cron jobs, causing the function to return the filtered value instead.","long_description_html":"<p>Returning an array will short-circuit the normal retrieval of ready cron jobs, causing the function to return the filtered value instead.</p>","tags":[{"name":"since","content":"5.1.0"},{"name":"param","content":"<p>Array of ready cron tasks to return instead. Default null to continue using results from _get_cron_array().</p>","types":["null","array[]"],"variable":"$pre"}]},"args":1},{"name":"get_categories_taxonomy","file":"wp-includes/category.php","type":"filter","doc":{"description":"Filters the taxonomy used to retrieve terms when calling get_categories().","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.7.0"},{"name":"param","content":"<p>Taxonomy to retrieve terms from.</p>","types":["string"],"variable":"$taxonomy"},{"name":"param","content":"<p>An array of arguments. See get_terms().</p>","types":["array"],"variable":"$args"}]},"args":2},{"name":"get_tags","file":"wp-includes/category.php","type":"filter","doc":{"description":"Filters the array of term objects returned for the 'post_tag' taxonomy.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.3.0"},{"name":"param","content":"<p>Array of 'post_tag' term objects, a count thereof, or WP_Error if any of the taxonomies do not exist.</p>","types":["\\WP_Term[]","int","\\WP_Error"],"variable":"$tags"},{"name":"param","content":"<p>An array of arguments. See {@see \\get_terms()}.</p>","types":["array"],"variable":"$args"}]},"args":2},{"name":"page_css_class","file":"wp-includes/class-walker-page.php","type":"filter","doc":{"description":"Filters the list of CSS classes to include with each page item in the list.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.8.0"},{"name":"see","content":"","refers":"wp_list_pages()"},{"name":"param","content":"<p>An array of CSS classes to be applied to each list item.</p>","types":["string[]"],"variable":"$css_class"},{"name":"param","content":"<p>Page data object.</p>","types":["\\WP_Post"],"variable":"$page"},{"name":"param","content":"<p>Depth of page, used for padding.</p>","types":["int"],"variable":"$depth"},{"name":"param","content":"<p>An array of arguments.</p>","types":["array"],"variable":"$args"},{"name":"param","content":"<p>ID of the current page.</p>","types":["int"],"variable":"$current_page_id"}]},"args":5},{"name":"page_menu_link_attributes","file":"wp-includes/class-walker-page.php","type":"filter","doc":{"description":"Filters the HTML attributes applied to a page menu item's anchor element.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.8.0"},{"name":"param","content":"<p>{ The HTML attributes applied to the menu item's <code>&lt;a&gt;</code> element, empty strings are ignored.</p>","types":["array"],"variable":"$atts"},{"name":"param","content":"<p>Page data object.</p>","types":["\\WP_Post"],"variable":"$page"},{"name":"param","content":"<p>Depth of page, used for padding.</p>","types":["int"],"variable":"$depth"},{"name":"param","content":"<p>An array of arguments.</p>","types":["array"],"variable":"$args"},{"name":"param","content":"<p>ID of the current page.</p>","types":["int"],"variable":"$current_page_id"}]},"args":5},{"name":"get_bloginfo_rss","file":"wp-includes/feed.php","type":"filter","doc":{"description":"Filters the bloginfo for use in RSS feeds.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.2.0"},{"name":"see","content":"","refers":"convert_chars()"},{"name":"see","content":"","refers":"get_bloginfo()"},{"name":"param","content":"<p>Converted string value of the blog information.</p>","types":["string"],"variable":"$info"},{"name":"param","content":"<p>The type of blog information to retrieve.</p>","types":["string"],"variable":"$show"}]},"args":2},{"name":"bloginfo_rss","file":"wp-includes/feed.php","type":"filter","doc":{"description":"Filters the bloginfo for display in RSS feeds.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.1.0"},{"name":"see","content":"","refers":"get_bloginfo()"},{"name":"param","content":"<p>RSS container for the blog information.</p>","types":["string"],"variable":"$rss_container"},{"name":"param","content":"<p>The type of blog information to retrieve.</p>","types":["string"],"variable":"$show"}]},"args":2},{"name":"default_feed","file":"wp-includes/feed.php","type":"filter","doc":{"description":"Filters the default feed type.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.5.0"},{"name":"param","content":"<p>Type of default feed. Possible values include 'rss2', 'atom'. Default 'rss2'.</p>","types":["string"],"variable":"$feed_type"}]},"args":1},{"name":"get_wp_title_rss","file":"wp-includes/feed.php","type":"filter","doc":{"description":"Filters the blog title for use as the feed title.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.2.0"},{"name":"since","content":"4.4.0","description":"<p>The <code>$sep</code> parameter was deprecated and renamed to <code>$deprecated</code>.</p>"},{"name":"param","content":"<p>The current blog title.</p>","types":["string"],"variable":"$title"},{"name":"param","content":"<p>Unused.</p>","types":["string"],"variable":"$deprecated"}]},"args":2},{"name":"wp_title_rss","file":"wp-includes/feed.php","type":"filter","doc":{"description":"Filters the blog title for display of the feed title.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.2.0"},{"name":"since","content":"4.4.0","description":"<p>The <code>$sep</code> parameter was deprecated and renamed to <code>$deprecated</code>.</p>"},{"name":"see","content":"","refers":"get_wp_title_rss()"},{"name":"param","content":"<p>The current blog title.</p>","types":["string"],"variable":"$wp_title_rss"},{"name":"param","content":"<p>Unused.</p>","types":["string"],"variable":"$deprecated"}]},"args":2},{"name":"the_title_rss","file":"wp-includes/feed.php","type":"filter","doc":{"description":"Filters the post title for use in a feed.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"1.2.0"},{"name":"param","content":"<p>The current post title.</p>","types":["string"],"variable":"$title"}]},"args":1},{"name":"the_content_feed","file":"wp-includes/feed.php","type":"filter","doc":{"description":"Filters the post content for use in feeds.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.9.0"},{"name":"param","content":"<p>The current post content.</p>","types":["string"],"variable":"$content"},{"name":"param","content":"<p>Type of feed. Possible values include 'rss2', 'atom'. Default 'rss2'.</p>","types":["string"],"variable":"$feed_type"}]},"args":2},{"name":"the_excerpt_rss","file":"wp-includes/feed.php","type":"filter","doc":{"description":"Filters the post excerpt for a feed.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"1.2.0"},{"name":"param","content":"<p>The current post excerpt.</p>","types":["string"],"variable":"$output"}]},"args":1},{"name":"the_permalink_rss","file":"wp-includes/feed.php","type":"filter","doc":{"description":"Filters the permalink to the post for use in feeds.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.3.0"},{"name":"param","content":"<p>The current post permalink.</p>","types":["string"],"variable":"$post_permalink"}]},"args":1},{"name":"comments_link_feed","file":"wp-includes/feed.php","type":"filter","doc":{"description":"Filters the comments permalink for the current post.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.6.0"},{"name":"param","content":"<p>The current comment permalink with '#comments' appended.</p>","types":["string"],"variable":"$comment_permalink"}]},"args":1},{"name":"comment_link","file":"wp-includes/feed.php","type":"filter","doc":{"description":"Filters the current comment's permalink.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.6.0"},{"name":"see","content":"","refers":"get_comment_link()"},{"name":"param","content":"<p>The current comment permalink.</p>","types":["string"],"variable":"$comment_permalink"}]},"args":1},{"name":"comment_author_rss","file":"wp-includes/feed.php","type":"filter","doc":{"description":"Filters the current comment author for use in a feed.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"1.5.0"},{"name":"see","content":"","refers":"get_comment_author()"},{"name":"param","content":"<p>The current comment author.</p>","types":["string"],"variable":"$comment_author"}]},"args":1},{"name":"comment_text_rss","file":"wp-includes/feed.php","type":"filter","doc":{"description":"Filters the current comment content for use in a feed.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"1.5.0"},{"name":"param","content":"<p>The content of the current comment.</p>","types":["string"],"variable":"$comment_text"}]},"args":1},{"name":"the_category_rss","file":"wp-includes/feed.php","type":"filter","doc":{"description":"Filters all of the post categories for display in a feed.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"1.2.0"},{"name":"param","content":"<p>All of the RSS post categories.</p>","types":["string"],"variable":"$the_list"},{"name":"param","content":"<p>Type of feed. Possible values include 'rss2', 'atom'. Default 'rss2'.</p>","types":["string"],"variable":"$type"}]},"args":2},{"name":"rss_enclosure","file":"wp-includes/feed.php","type":"filter","doc":{"description":"Filters the RSS enclosure HTML link tag for the current post.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.2.0"},{"name":"param","content":"<p>The HTML link tag with a URI and other attributes.</p>","types":["string"],"variable":"$html_link_tag"}]},"args":1},{"name":"atom_enclosure","file":"wp-includes/feed.php","type":"filter","doc":{"description":"Filters the atom enclosure HTML link tag for the current post.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.2.0"},{"name":"param","content":"<p>The HTML link tag with a URI and other attributes.</p>","types":["string"],"variable":"$html_link_tag"}]},"args":1},{"name":"self_link","file":"wp-includes/feed.php","type":"filter","doc":{"description":"Filters the current feed URL.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.6.0"},{"name":"see","content":"","refers":"set_url_scheme()"},{"name":"see","content":"","refers":"wp_unslash()"},{"name":"param","content":"<p>The link for the feed with set URL scheme.</p>","types":["string"],"variable":"$feed_link"}]},"args":1},{"name":"get_feed_build_date","file":"wp-includes/feed.php","type":"filter","doc":{"description":"Filters the date the last post or comment in the query was modified.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.2.0"},{"name":"param","content":"<p>Date the last post or comment was modified in the query, in UTC. False on failure.</p>","types":["string","false"],"variable":"$max_modified_time"},{"name":"param","content":"<p>The date format requested in get_feed_build_date().</p>","types":["string"],"variable":"$format"}]},"args":2},{"name":"feed_content_type","file":"wp-includes/feed.php","type":"filter","doc":{"description":"Filters the content type for a specific feed type.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.8.0"},{"name":"param","content":"<p>Content type indicating the type of data that a feed contains.</p>","types":["string"],"variable":"$content_type"},{"name":"param","content":"<p>Type of feed. Possible values include 'rss', rss2', 'atom', and 'rdf'.</p>","types":["string"],"variable":"$type"}]},"args":2},{"name":"wp_cache_themes_persistently","file":"wp-includes/class-wp-theme.php","type":"filter","doc":{"description":"This action is documented in wp-includes/theme.php","long_description":"","long_description_html":"","tags":[]},"args":2},{"name":"theme_templates","file":"wp-includes/class-wp-theme.php","type":"filter","doc":{"description":"Filters list of page templates for a theme.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.9.6"},{"name":"param","content":"<p>Array of template header names keyed by the template file name.</p>","types":["string[]"],"variable":"$post_templates"},{"name":"param","content":"<p>The theme object.</p>","types":["\\WP_Theme"],"variable":"$theme"},{"name":"param","content":"<p>The post being edited, provided for context, or null.</p>","types":["\\WP_Post","null"],"variable":"$post"},{"name":"param","content":"<p>Post type to get the templates for.</p>","types":["string"],"variable":"$post_type"}]},"args":4},{"name":"theme_{$post_type}_templates","aliases":["theme_attachment_templates","theme_page_templates","theme_post_templates"],"file":"wp-includes/class-wp-theme.php","type":"filter","doc":{"description":"Filters list of page templates for a theme.","long_description":"The dynamic portion of the hook name, `$post_type`, refers to the post type.\n Possible hook names include:\n\n  - `theme_post_templates`\n  - `theme_page_templates`\n  - `theme_attachment_templates`","long_description_html":"<p>The dynamic portion of the hook name, <code>$post_type</code>, refers to the post type.</p> <p>Possible hook names include:</p> <ul> <li><code>theme_post_templates</code></li> <li><code>theme_page_templates</code></li> <li><code>theme_attachment_templates</code></li> </ul>","tags":[{"name":"since","content":"3.9.0"},{"name":"since","content":"4.4.0","description":"<p>Converted to allow complete control over the <code>$page_templates</code> array.</p>"},{"name":"since","content":"4.7.0","description":"<p>Added the <code>$post_type</code> parameter.</p>"},{"name":"param","content":"<p>Array of template header names keyed by the template file name.</p>","types":["string[]"],"variable":"$post_templates"},{"name":"param","content":"<p>The theme object.</p>","types":["\\WP_Theme"],"variable":"$theme"},{"name":"param","content":"<p>The post being edited, provided for context, or null.</p>","types":["\\WP_Post","null"],"variable":"$post"},{"name":"param","content":"<p>Post type to get the templates for.</p>","types":["string"],"variable":"$post_type"}]},"args":4},{"name":"theme_scandir_exclusions","file":"wp-includes/class-wp-theme.php","type":"filter","doc":{"description":"Filters the array of excluded directories and files while scanning theme folder.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.7.4"},{"name":"param","content":"<p>Array of excluded directories and files.</p>","types":["string[]"],"variable":"$exclusions"}]},"args":1},{"name":"network_allowed_themes","file":"wp-includes/class-wp-theme.php","type":"filter","doc":{"description":"Filters the array of themes allowed on the network.","long_description":"Site is provided as context so that a list of network allowed themes can be filtered further.","long_description_html":"<p>Site is provided as context so that a list of network allowed themes can be filtered further.</p>","tags":[{"name":"since","content":"4.5.0"},{"name":"param","content":"<p>An array of theme stylesheet names.</p>","types":["string[]"],"variable":"$allowed_themes"},{"name":"param","content":"<p>ID of the site.</p>","types":["int"],"variable":"$blog_id"}]},"args":2},{"name":"allowed_themes","file":"wp-includes/class-wp-theme.php","type":"filter","doc":{"description":"Filters the array of themes allowed on the network.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"MU (3.0.0)","description":"MU (3.0.0)"},{"name":"param","content":"<p>An array of theme stylesheet names.</p>","types":["string[]"],"variable":"$allowed_themes"}]},"args":1},{"name":"site_allowed_themes","file":"wp-includes/class-wp-theme.php","type":"filter","doc":{"description":"Filters the array of themes allowed on the site.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.5.0"},{"name":"param","content":"<p>An array of theme stylesheet names.</p>","types":["string[]"],"variable":"$allowed_themes"},{"name":"param","content":"<p>ID of the site. Defaults to current site.</p>","types":["int"],"variable":"$blog_id"}]},"args":2},{"name":"wp_theme_files_cache_ttl","file":"wp-includes/class-wp-theme.php","type":"filter","doc":{"description":"Filters the cache expiration time for theme files.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"6.6.0"},{"name":"param","content":"<p>Cache expiration time in seconds.</p>","types":["int"],"variable":"$cache_expiration"},{"name":"param","content":"<p>Type of cache being set.</p>","types":["string"],"variable":"$cache_type"}]},"args":2},{"name":"do_parse_request","file":"wp-includes/class-wp.php","type":"filter","doc":{"description":"Filters whether to parse the request.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.5.0"},{"name":"param","content":"<p>Whether or not to parse the request. Default true.</p>","types":["bool"],"variable":"$bool"},{"name":"param","content":"<p>Current WordPress environment instance.</p>","types":["\\WP"],"variable":"$wp"},{"name":"param","content":"<p>Extra passed query variables.</p>","types":["array","string"],"variable":"$extra_query_vars"}]},"args":3},{"name":"query_vars","file":"wp-includes/class-wp.php","type":"filter","doc":{"description":"Filters the query variables allowed before processing.","long_description":"Allows (publicly allowed) query vars to be added, removed, or changed prior to executing the query. Needed to allow custom rewrite rules using your own arguments to work, or any other custom query variables you want to be publicly available.","long_description_html":"<p>Allows (publicly allowed) query vars to be added, removed, or changed prior to executing the query. Needed to allow custom rewrite rules using your own arguments to work, or any other custom query variables you want to be publicly available.</p>","tags":[{"name":"since","content":"1.5.0"},{"name":"param","content":"<p>The array of allowed query variable names.</p>","types":["string[]"],"variable":"$public_query_vars"}]},"args":1},{"name":"request","file":"wp-includes/class-wp.php","type":"filter","doc":{"description":"Filters the array of parsed query variables.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.1.0"},{"name":"param","content":"<p>The array of requested query variables.</p>","types":["array"],"variable":"$query_vars"}]},"args":1},{"name":"wp_headers","file":"wp-includes/class-wp.php","type":"filter","doc":{"description":"Filters the HTTP headers before they're sent to the browser.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.8.0"},{"name":"param","content":"<p>Associative array of headers to be sent.</p>","types":["string[]"],"variable":"$headers"},{"name":"param","content":"<p>Current WordPress environment instance.</p>","types":["\\WP"],"variable":"$wp"}]},"args":2},{"name":"pre_handle_404","file":"wp-includes/class-wp.php","type":"filter","doc":{"description":"Filters whether to short-circuit default header status handling.","long_description":"Returning a non-false value from the filter will short-circuit the handling and return early.","long_description_html":"<p>Returning a non-false value from the filter will short-circuit the handling and return early.</p>","tags":[{"name":"since","content":"4.5.0"},{"name":"param","content":"<p>Whether to short-circuit default header status handling. Default false.</p>","types":["bool"],"variable":"$preempt"},{"name":"param","content":"<p>WordPress Query object.</p>","types":["\\WP_Query"],"variable":"$wp_query"}]},"args":2},{"name":"get_terms_defaults","file":"wp-includes/class-wp-term-query.php","type":"filter","doc":{"description":"Filters the terms query default arguments.","long_description":"Use {@see 'get_terms_args'} to filter the passed arguments.","long_description_html":"<p>Use {@see 'get_terms_args'} to filter the passed arguments.</p>","tags":[{"name":"since","content":"4.4.0"},{"name":"param","content":"<p>An array of default get_terms() arguments.</p>","types":["array"],"variable":"$defaults"},{"name":"param","content":"<p>An array of taxonomy names.</p>","types":["string[]"],"variable":"$taxonomies"}]},"args":2},{"name":"get_terms_args","file":"wp-includes/class-wp-term-query.php","type":"filter","doc":{"description":"Filters the terms query arguments.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.1.0"},{"name":"param","content":"<p>An array of get_terms() arguments.</p>","types":["array"],"variable":"$args"},{"name":"param","content":"<p>An array of taxonomy names.</p>","types":["string[]"],"variable":"$taxonomies"}]},"args":2},{"name":"list_terms_exclusions","file":"wp-includes/class-wp-term-query.php","type":"filter","doc":{"description":"Filters the terms to exclude from the terms query.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.3.0"},{"name":"param","content":"<p><code>NOT IN</code> clause of the terms query.</p>","types":["string"],"variable":"$exclusions"},{"name":"param","content":"<p>An array of terms query arguments.</p>","types":["array"],"variable":"$args"},{"name":"param","content":"<p>An array of taxonomy names.</p>","types":["string[]"],"variable":"$taxonomies"}]},"args":3},{"name":"get_terms_fields","file":"wp-includes/class-wp-term-query.php","type":"filter","doc":{"description":"Filters the fields to select in the terms query.","long_description":"Field lists modified using this filter will only modify the term fields returned by the function when the `$fields` parameter set to 'count' or 'all'. In all other cases, the term fields in the results array will be determined by the `$fields` parameter alone.\n Use of this filter can result in unpredictable behavior, and is not recommended.","long_description_html":"<p>Field lists modified using this filter will only modify the term fields returned by the function when the <code>$fields</code> parameter set to 'count' or 'all'. In all other cases, the term fields in the results array will be determined by the <code>$fields</code> parameter alone.</p> <p>Use of this filter can result in unpredictable behavior, and is not recommended.</p>","tags":[{"name":"since","content":"2.8.0"},{"name":"param","content":"<p>An array of fields to select for the terms query.</p>","types":["string[]"],"variable":"$selects"},{"name":"param","content":"<p>An array of term query arguments.</p>","types":["array"],"variable":"$args"},{"name":"param","content":"<p>An array of taxonomy names.</p>","types":["string[]"],"variable":"$taxonomies"}]},"args":3},{"name":"terms_clauses","file":"wp-includes/class-wp-term-query.php","type":"filter","doc":{"description":"Filters the terms query SQL clauses.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.1.0"},{"name":"param","content":"<p>{ Associative array of the clauses for the query.</p>","types":["string[]"],"variable":"$clauses"},{"name":"param","content":"<p>An array of taxonomy names.</p>","types":["string[]"],"variable":"$taxonomies"},{"name":"param","content":"<p>An array of term query arguments.</p>","types":["array"],"variable":"$args"}]},"args":3},{"name":"terms_pre_query","file":"wp-includes/class-wp-term-query.php","type":"filter","doc":{"description":"Filters the terms array before the query takes place.","long_description":"Return a non-null value to bypass WordPress' default term queries.","long_description_html":"<p>Return a non-null value to bypass WordPress' default term queries.</p>","tags":[{"name":"since","content":"5.3.0"},{"name":"param","content":"<p>Return an array of term data to short-circuit WP's term query, or null to allow WP queries to run normally.</p>","types":["array","null"],"variable":"$terms"},{"name":"param","content":"<p>The WP_Term_Query instance, passed by reference.</p>","types":["\\WP_Term_Query"],"variable":"$query"}]},"args":1},{"name":"get_terms_orderby","file":"wp-includes/class-wp-term-query.php","type":"filter","doc":{"description":"Filters the ORDERBY clause of the terms query.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.8.0"},{"name":"param","content":"<p><code>ORDERBY</code> clause of the terms query.</p>","types":["string"],"variable":"$orderby"},{"name":"param","content":"<p>An array of term query arguments.</p>","types":["array"],"variable":"$args"},{"name":"param","content":"<p>An array of taxonomy names.</p>","types":["string[]"],"variable":"$taxonomies"}]},"args":3},{"name":"list_pages","file":"wp-includes/class-walker-page-dropdown.php","type":"filter","doc":{"description":"Filters the page title when creating an HTML drop-down list of pages.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.1.0"},{"name":"param","content":"<p>Page title.</p>","types":["string"],"variable":"$title"},{"name":"param","content":"<p>Page data object.</p>","types":["\\WP_Post"],"variable":"$page"}]},"args":2},{"name":"wp_rest_search_handlers","file":"wp-includes/rest-api.php","type":"filter","doc":{"description":"Filters the search handlers to use in the REST search controller.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.0.0"},{"name":"param","content":"<p>List of search handlers to use in the controller. Each search handler instance must extend the <code>WP_REST_Search_Handler</code> class. Default is only a handler for posts.</p>","types":["array"],"variable":"$search_handlers"}]},"args":1},{"name":"rest_url_prefix","file":"wp-includes/rest-api.php","type":"filter","doc":{"description":"Filters the REST URL prefix.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.4.0"},{"name":"param","content":"<p>URL prefix. Default 'wp-json'.</p>","types":["string"],"variable":"$prefix"}]},"args":1},{"name":"rest_url","file":"wp-includes/rest-api.php","type":"filter","doc":{"description":"Filters the REST URL.","long_description":"Use this filter to adjust the url returned by the get_rest_url() function.","long_description_html":"<p>Use this filter to adjust the url returned by the get_rest_url() function.</p>","tags":[{"name":"since","content":"4.4.0"},{"name":"param","content":"<p>REST URL.</p>","types":["string"],"variable":"$url"},{"name":"param","content":"<p>REST route.</p>","types":["string"],"variable":"$path"},{"name":"param","content":"<p>Blog ID.</p>","types":["int","null"],"variable":"$blog_id"},{"name":"param","content":"<p>Sanitization scheme.</p>","types":["string"],"variable":"$scheme"}]},"args":4},{"name":"wp_rest_server_class","file":"wp-includes/rest-api.php","type":"filter","doc":{"description":"Filters the REST Server Class.","long_description":"This filter allows you to adjust the server class used by the REST API, using a different class to handle requests.","long_description_html":"<p>This filter allows you to adjust the server class used by the REST API, using a different class to handle requests.</p>","tags":[{"name":"since","content":"4.4.0"},{"name":"param","content":"<p>The name of the server class. Default 'WP_REST_Server'.</p>","types":["string"],"variable":"$class_name"}]},"args":1},{"name":"rest_avatar_sizes","file":"wp-includes/rest-api.php","type":"filter","doc":{"description":"Filters the REST avatar sizes.","long_description":"Use this filter to adjust the array of sizes returned by the `rest_get_avatar_sizes` function.","long_description_html":"<p>Use this filter to adjust the array of sizes returned by the <code>rest_get_avatar_sizes</code> function.</p>","tags":[{"name":"since","content":"4.4.0"},{"name":"param","content":"<p>An array of int values that are the pixel sizes for avatars. Default <code>[ 24, 48, 96 ]</code>.</p>","types":["int[]"],"variable":"$sizes"}]},"args":1},{"name":"rest_route_for_post","file":"wp-includes/rest-api.php","type":"filter","doc":{"description":"Filters the REST API route for a post.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.5.0"},{"name":"param","content":"<p>The route path.</p>","types":["string"],"variable":"$route"},{"name":"param","content":"<p>The post object.</p>","types":["\\WP_Post"],"variable":"$post"}]},"args":2},{"name":"rest_route_for_post_type_items","file":"wp-includes/rest-api.php","type":"filter","doc":{"description":"Filters the REST API route for a post type.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.9.0"},{"name":"param","content":"<p>The route path.</p>","types":["string"],"variable":"$route"},{"name":"param","content":"<p>The post type object.</p>","types":["\\WP_Post_Type"],"variable":"$post_type"}]},"args":2},{"name":"rest_route_for_term","file":"wp-includes/rest-api.php","type":"filter","doc":{"description":"Filters the REST API route for a term.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.5.0"},{"name":"param","content":"<p>The route path.</p>","types":["string"],"variable":"$route"},{"name":"param","content":"<p>The term object.</p>","types":["\\WP_Term"],"variable":"$term"}]},"args":2},{"name":"rest_route_for_taxonomy_items","file":"wp-includes/rest-api.php","type":"filter","doc":{"description":"Filters the REST API route for a taxonomy.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.9.0"},{"name":"param","content":"<p>The route path.</p>","types":["string"],"variable":"$route"},{"name":"param","content":"<p>The taxonomy object.</p>","types":["\\WP_Taxonomy"],"variable":"$taxonomy"}]},"args":2},{"name":"rest_queried_resource_route","file":"wp-includes/rest-api.php","type":"filter","doc":{"description":"Filters the REST route for the currently queried object.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.5.0"},{"name":"param","content":"<p>The route with a leading slash, or an empty string.</p>","types":["string"],"variable":"$link"}]},"args":1},{"name":"wp_is_rest_endpoint","file":"wp-includes/rest-api.php","type":"filter","doc":{"description":"Filters whether a REST endpoint request is currently being handled.","long_description":"This may be a standalone REST API request, or an internal request dispatched from within a regular page load.","long_description_html":"<p>This may be a standalone REST API request, or an internal request dispatched from within a regular page load.</p>","tags":[{"name":"since","content":"6.5.0"},{"name":"param","content":"<p>Whether a REST endpoint request is currently being handled.</p>","types":["bool"],"variable":"$is_request_endpoint"}]},"args":1},{"name":"block_categories_all","file":"wp-includes/block-editor.php","type":"filter","doc":{"description":"Filters the default array of categories for block types.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.8.0"},{"name":"param","content":"<p>Array of categories for block types.</p>","types":["array[]"],"variable":"$block_categories"},{"name":"param","content":"<p>The current block editor context.</p>","types":["\\WP_Block_Editor_Context"],"variable":"$block_editor_context"}]},"args":2},{"name":"allowed_block_types_all","file":"wp-includes/block-editor.php","type":"filter","doc":{"description":"Filters the allowed block types for all editor types.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.8.0"},{"name":"param","content":"<p>Array of block type slugs, or boolean to enable/disable all. Default true (all registered block types supported).</p>","types":["bool","string[]"],"variable":"$allowed_block_types"},{"name":"param","content":"<p>The current block editor context.</p>","types":["\\WP_Block_Editor_Context"],"variable":"$block_editor_context"}]},"args":2},{"name":"widget_types_to_hide_from_legacy_widget_block","file":"wp-includes/block-editor.php","type":"filter","doc":{"description":"Filters the list of widget-type IDs that should **not** be offered by the Legacy Widget block.","long_description":"Returning an empty array will make all widgets available.","long_description_html":"<p>Returning an empty array will make all widgets available.</p>","tags":[{"name":"since","content":"5.8.0"},{"name":"param","content":"<p>An array of excluded widget-type IDs.</p>","types":["string[]"],"variable":"$widgets"}]},"args":1},{"name":"block_editor_settings_all","file":"wp-includes/block-editor.php","type":"filter","doc":{"description":"Filters the settings to pass to the block editor for all editor type.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.8.0"},{"name":"param","content":"<p>Default editor settings.</p>","types":["array"],"variable":"$editor_settings"},{"name":"param","content":"<p>The current block editor context.</p>","types":["\\WP_Block_Editor_Context"],"variable":"$block_editor_context"}]},"args":2},{"name":"block_editor_rest_api_preload_paths","file":"wp-includes/block-editor.php","type":"filter","doc":{"description":"Filters the array of REST API paths that will be used to preloaded common data for the block editor.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.8.0"},{"name":"param","content":"<p>Array of paths to preload.</p>","types":["(string","string[])[]"],"variable":"$preload_paths"},{"name":"param","content":"<p>The current block editor context.</p>","types":["\\WP_Block_Editor_Context"],"variable":"$block_editor_context"}]},"args":2},{"name":"image_save_progressive","file":"wp-includes/class-wp-image-editor-gd.php","type":"filter","doc":{"description":"Filters whether to output progressive images (if available).","long_description":"","long_description_html":"","tags":[{"name":"since","content":"6.5.0"},{"name":"param","content":"<p>Whether to use progressive images for output if available. Default false.</p>","types":["bool"],"variable":"$interlace"},{"name":"param","content":"<p>The mime type being saved.</p>","types":["string"],"variable":"$mime_type"}]},"args":2},{"name":"image_make_intermediate_size","file":"wp-includes/class-wp-image-editor-gd.php","type":"filter","doc":{"description":"Filters the name of the saved image file.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.6.0"},{"name":"param","content":"<p>Name of the file.</p>","types":["string"],"variable":"$filename"}]},"args":1},{"name":"pre_http_send_through_proxy","file":"wp-includes/class-wp-http-proxy.php","type":"filter","doc":{"description":"Filters whether to preempt sending the request through the proxy.","long_description":"Returning false will bypass the proxy; returning true will send the request through the proxy. Returning null bypasses the filter.","long_description_html":"<p>Returning false will bypass the proxy; returning true will send the request through the proxy. Returning null bypasses the filter.</p>","tags":[{"name":"since","content":"3.5.0"},{"name":"param","content":"<p>Whether to send the request through the proxy. Default null.</p>","types":["bool","null"],"variable":"$override"},{"name":"param","content":"<p>URL of the request.</p>","types":["string"],"variable":"$uri"},{"name":"param","content":"<p>Associative array result of parsing the request URL with <code>parse_url()</code>.</p>","types":["array"],"variable":"$check"},{"name":"param","content":"<p>Associative array result of parsing the site URL with <code>parse_url()</code>.</p>","types":["array"],"variable":"$home"}]},"args":4},{"name":"comments_pre_query","file":"wp-includes/class-wp-comment-query.php","type":"filter","doc":{"description":"Filters the comments data before the query takes place.","long_description":"Return a non-null value to bypass WordPress' default comment queries.\n The expected return type from this filter depends on the value passed in the request query vars: - When `$this->query_vars['count']` is set, the filter should return   the comment count as an integer. - When `'ids' === $this->query_vars['fields']`, the filter should return   an array of comment IDs. - Otherwise the filter should return an array of WP_Comment objects.\n Note that if the filter returns an array of comment data, it will be assigned to the `comments` property of the current WP_Comment_Query instance.\n Filtering functions that require pagination information are encouraged to set the `found_comments` and `max_num_pages` properties of the WP_Comment_Query object, passed to the filter by reference. If WP_Comment_Query does not perform a database query, it will not have enough information to generate these values itself.","long_description_html":"<p>Return a non-null value to bypass WordPress' default comment queries.</p> <p>The expected return type from this filter depends on the value passed in the request query vars:</p> <ul> <li>When <code>$this-&gt;query_vars['count']</code> is set, the filter should return the comment count as an integer.</li> <li>When <code>'ids' === $this-&gt;query_vars['fields']</code>, the filter should return an array of comment IDs.</li> <li>Otherwise the filter should return an array of WP_Comment objects.</li> </ul> <p>Note that if the filter returns an array of comment data, it will be assigned to the <code>comments</code> property of the current WP_Comment_Query instance.</p> <p>Filtering functions that require pagination information are encouraged to set the <code>found_comments</code> and <code>max_num_pages</code> properties of the WP_Comment_Query object, passed to the filter by reference. If WP_Comment_Query does not perform a database query, it will not have enough information to generate these values itself.</p>","tags":[{"name":"since","content":"5.3.0"},{"name":"since","content":"5.6.0","description":"<p>The returned array of comment data is assigned to the <code>comments</code> property of the current WP_Comment_Query instance.</p>"},{"name":"param","content":"<p>Return an array of comment data to short-circuit WP's comment query, the comment count as an integer if <code>$this-&gt;query_vars['count']</code> is set, or null to allow WP to run its normal queries.</p>","types":["array","int","null"],"variable":"$comment_data"},{"name":"param","content":"<p>The WP_Comment_Query instance, passed by reference.</p>","types":["\\WP_Comment_Query"],"variable":"$query"}]},"args":1},{"name":"the_comments","file":"wp-includes/class-wp-comment-query.php","type":"filter","doc":{"description":"Filters the comment query results.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.1.0"},{"name":"param","content":"<p>An array of comments.</p>","types":["\\WP_Comment[]"],"variable":"$_comments"},{"name":"param","content":"<p>Current instance of WP_Comment_Query (passed by reference).</p>","types":["\\WP_Comment_Query"],"variable":"$query"}]},"args":1},{"name":"comments_clauses","file":"wp-includes/class-wp-comment-query.php","type":"filter","doc":{"description":"Filters the comment query clauses.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.1.0"},{"name":"param","content":"<p>{ Associative array of the clauses for the query.</p>","types":["string[]"],"variable":"$clauses"},{"name":"param","content":"<p>Current instance of WP_Comment_Query (passed by reference).</p>","types":["\\WP_Comment_Query"],"variable":"$query"}]},"args":1},{"name":"found_comments_query","file":"wp-includes/class-wp-comment-query.php","type":"filter","doc":{"description":"Filters the query used to retrieve found comment count.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.4.0"},{"name":"param","content":"<p>SQL query. Default 'SELECT FOUND_ROWS()'.</p>","types":["string"],"variable":"$found_comments_query"},{"name":"param","content":"<p>The <code>WP_Comment_Query</code> instance.</p>","types":["\\WP_Comment_Query"],"variable":"$comment_query"}]},"args":2},{"name":"wp_mail","file":"wp-includes/pluggable.php","type":"filter","doc":{"description":"Filters the wp_mail() arguments.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.2.0"},{"name":"param","content":"<p>{ Array of the <code>wp_mail()</code> arguments.</p>","types":["array"],"variable":"$args"}]},"args":1},{"name":"pre_wp_mail","file":"wp-includes/pluggable.php","type":"filter","doc":{"description":"Filters whether to preempt sending an email.","long_description":"Returning a non-null value will short-circuit {@see \\wp_mail()}, returning that value instead. A boolean return value should be used to indicate whether the email was successfully sent.","long_description_html":"<p>Returning a non-null value will short-circuit {@see \\wp_mail()}, returning that value instead. A boolean return value should be used to indicate whether the email was successfully sent.</p>","tags":[{"name":"since","content":"5.7.0"},{"name":"param","content":"<p>Short-circuit return value.</p>","types":["null","bool"],"variable":"$return"},{"name":"param","content":"<p>{ Array of the <code>wp_mail()</code> arguments.</p>","types":["array"],"variable":"$atts"}]},"args":2},{"name":"wp_mail_from","file":"wp-includes/pluggable.php","type":"filter","doc":{"description":"Filters the email address to send from.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.2.0"},{"name":"param","content":"<p>Email address to send from.</p>","types":["string"],"variable":"$from_email"}]},"args":1},{"name":"wp_mail_from_name","file":"wp-includes/pluggable.php","type":"filter","doc":{"description":"Filters the name to associate with the \"from\" email address.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.3.0"},{"name":"param","content":"<p>Name associated with the &quot;from&quot; email address.</p>","types":["string"],"variable":"$from_name"}]},"args":1},{"name":"wp_mail_content_type","file":"wp-includes/pluggable.php","type":"filter","doc":{"description":"Filters the wp_mail() content type.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.3.0"},{"name":"param","content":"<p>Default wp_mail() content type.</p>","types":["string"],"variable":"$content_type"}]},"args":1},{"name":"wp_mail_charset","file":"wp-includes/pluggable.php","type":"filter","doc":{"description":"Filters the default wp_mail() charset.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.3.0"},{"name":"param","content":"<p>Default email charset.</p>","types":["string"],"variable":"$charset"}]},"args":1},{"name":"authenticate","file":"wp-includes/pluggable.php","type":"filter","doc":{"description":"Filters whether a set of user login credentials are valid.","long_description":"A WP_User object is returned if the credentials authenticate a user. WP_Error or null otherwise.","long_description_html":"<p>A WP_User object is returned if the credentials authenticate a user. WP_Error or null otherwise.</p>","tags":[{"name":"since","content":"2.8.0"},{"name":"since","content":"4.5.0","description":"<p><code>$username</code> now accepts an email address.</p>"},{"name":"param","content":"<p>WP_User if the user is authenticated. WP_Error or null otherwise.</p>","types":["null","\\WP_User","\\WP_Error"],"variable":"$user"},{"name":"param","content":"<p>Username or email address.</p>","types":["string"],"variable":"$username"},{"name":"param","content":"<p>User password.</p>","types":["string"],"variable":"$password"}]},"args":3},{"name":"auth_cookie","file":"wp-includes/pluggable.php","type":"filter","doc":{"description":"Filters the authentication cookie.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.5.0"},{"name":"since","content":"4.0.0","description":"<p>The <code>$token</code> parameter was added.</p>"},{"name":"param","content":"<p>Authentication cookie.</p>","types":["string"],"variable":"$cookie"},{"name":"param","content":"<p>User ID.</p>","types":["int"],"variable":"$user_id"},{"name":"param","content":"<p>The time the cookie expires as a UNIX timestamp.</p>","types":["int"],"variable":"$expiration"},{"name":"param","content":"<p>Cookie scheme used. Accepts 'auth', 'secure_auth', or 'logged_in'.</p>","types":["string"],"variable":"$scheme"},{"name":"param","content":"<p>User's session token used.</p>","types":["string"],"variable":"$token"}]},"args":5},{"name":"auth_cookie_expiration","file":"wp-includes/pluggable.php","type":"filter","doc":{"description":"Filters the duration of the authentication cookie expiration period.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.8.0"},{"name":"param","content":"<p>Duration of the expiration period in seconds.</p>","types":["int"],"variable":"$length"},{"name":"param","content":"<p>User ID.</p>","types":["int"],"variable":"$user_id"},{"name":"param","content":"<p>Whether to remember the user login. Default false.</p>","types":["bool"],"variable":"$remember"}]},"args":3},{"name":"secure_auth_cookie","file":"wp-includes/pluggable.php","type":"filter","doc":{"description":"Filters whether the auth cookie should only be sent over HTTPS.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.1.0"},{"name":"param","content":"<p>Whether the cookie should only be sent over HTTPS.</p>","types":["bool"],"variable":"$secure"},{"name":"param","content":"<p>User ID.</p>","types":["int"],"variable":"$user_id"}]},"args":2},{"name":"secure_logged_in_cookie","file":"wp-includes/pluggable.php","type":"filter","doc":{"description":"Filters whether the logged in cookie should only be sent over HTTPS.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.1.0"},{"name":"param","content":"<p>Whether the logged in cookie should only be sent over HTTPS.</p>","types":["bool"],"variable":"$secure_logged_in_cookie"},{"name":"param","content":"<p>User ID.</p>","types":["int"],"variable":"$user_id"},{"name":"param","content":"<p>Whether the auth cookie should only be sent over HTTPS.</p>","types":["bool"],"variable":"$secure"}]},"args":3},{"name":"send_auth_cookies","file":"wp-includes/pluggable.php","type":"filter","doc":{"description":"Allows preventing auth cookies from actually being sent to the client.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.7.4"},{"name":"since","content":"6.2.0","description":"<p>The <code>$expire</code>, <code>$expiration</code>, <code>$user_id</code>, <code>$scheme</code>, and <code>$token</code> parameters were added.</p>"},{"name":"param","content":"<p>Whether to send auth cookies to the client. Default true.</p>","types":["bool"],"variable":"$send"},{"name":"param","content":"<p>The time the login grace period expires as a UNIX timestamp. Default is 12 hours past the cookie's expiration time. Zero when clearing cookies.</p>","types":["int"],"variable":"$expire"},{"name":"param","content":"<p>The time when the logged-in authentication cookie expires as a UNIX timestamp. Default is 14 days from now. Zero when clearing cookies.</p>","types":["int"],"variable":"$expiration"},{"name":"param","content":"<p>User ID. Zero when clearing cookies.</p>","types":["int"],"variable":"$user_id"},{"name":"param","content":"<p>Authentication scheme. Values include 'auth' or 'secure_auth'. Empty string when clearing cookies.</p>","types":["string"],"variable":"$scheme"},{"name":"param","content":"<p>User's session token to use for this cookie. Empty string when clearing cookies.</p>","types":["string"],"variable":"$token"}]},"args":6},{"name":"secure_auth_redirect","file":"wp-includes/pluggable.php","type":"filter","doc":{"description":"Filters whether to use a secure authentication redirect.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.1.0"},{"name":"param","content":"<p>Whether to use a secure authentication redirect. Default false.</p>","types":["bool"],"variable":"$secure"}]},"args":1},{"name":"auth_redirect_scheme","file":"wp-includes/pluggable.php","type":"filter","doc":{"description":"Filters the authentication redirect scheme.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.9.0"},{"name":"param","content":"<p>Authentication redirect scheme. Default empty.</p>","types":["string"],"variable":"$scheme"}]},"args":1},{"name":"wp_redirect","file":"wp-includes/pluggable.php","type":"filter","doc":{"description":"Filters the redirect location.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.1.0"},{"name":"param","content":"<p>The path or URL to redirect to.</p>","types":["string"],"variable":"$location"},{"name":"param","content":"<p>The HTTP response status code to use.</p>","types":["int"],"variable":"$status"}]},"args":2},{"name":"wp_redirect_status","file":"wp-includes/pluggable.php","type":"filter","doc":{"description":"Filters the redirect HTTP response status code to use.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.3.0"},{"name":"param","content":"<p>The HTTP response status code to use.</p>","types":["int"],"variable":"$status"},{"name":"param","content":"<p>The path or URL to redirect to.</p>","types":["string"],"variable":"$location"}]},"args":2},{"name":"x_redirect_by","file":"wp-includes/pluggable.php","type":"filter","doc":{"description":"Filters the X-Redirect-By header.","long_description":"Allows applications to identify themselves when they're doing a redirect.","long_description_html":"<p>Allows applications to identify themselves when they're doing a redirect.</p>","tags":[{"name":"since","content":"5.1.0"},{"name":"param","content":"<p>The application doing the redirect or false to omit the header.</p>","types":["string","false"],"variable":"$x_redirect_by"},{"name":"param","content":"<p>Status code to use.</p>","types":["int"],"variable":"$status"},{"name":"param","content":"<p>The path to redirect to.</p>","types":["string"],"variable":"$location"}]},"args":3},{"name":"wp_safe_redirect_fallback","file":"wp-includes/pluggable.php","type":"filter","doc":{"description":"Filters the redirect fallback URL for when the provided redirect is not safe (local).","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.3.0"},{"name":"param","content":"<p>The fallback URL to use by default.</p>","types":["string"],"variable":"$fallback_url"},{"name":"param","content":"<p>The HTTP response status code to use.</p>","types":["int"],"variable":"$status"}]},"args":2},{"name":"allowed_redirect_hosts","file":"wp-includes/pluggable.php","type":"filter","doc":{"description":"Filters the list of allowed hosts to redirect to.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.3.0"},{"name":"param","content":"<p>An array of allowed host names.</p>","types":["string[]"],"variable":"$hosts"},{"name":"param","content":"<p>The host name of the redirect destination; empty string if not set.</p>","types":["string"],"variable":"$host"}]},"args":2},{"name":"comment_notification_recipients","file":"wp-includes/pluggable.php","type":"filter","doc":{"description":"Filters the list of email addresses to receive a comment notification.","long_description":"By default, only post authors are notified of comments. This filter allows others to be added.","long_description_html":"<p>By default, only post authors are notified of comments. This filter allows others to be added.</p>","tags":[{"name":"since","content":"3.7.0"},{"name":"param","content":"<p>An array of email addresses to receive a comment notification.</p>","types":["string[]"],"variable":"$emails"},{"name":"param","content":"<p>The comment ID as a numeric string.</p>","types":["string"],"variable":"$comment_id"}]},"args":2},{"name":"comment_notification_notify_author","file":"wp-includes/pluggable.php","type":"filter","doc":{"description":"Filters whether to notify comment authors of their comments on their own posts.","long_description":"By default, comment authors aren't notified of their comments on their own posts. This filter allows you to override that.","long_description_html":"<p>By default, comment authors aren't notified of their comments on their own posts. This filter allows you to override that.</p>","tags":[{"name":"since","content":"3.8.0"},{"name":"param","content":"<p>Whether to notify the post author of their own comment. Default false.</p>","types":["bool"],"variable":"$notify"},{"name":"param","content":"<p>The comment ID as a numeric string.</p>","types":["string"],"variable":"$comment_id"}]},"args":2},{"name":"comment_notification_headers","file":"wp-includes/pluggable.php","type":"filter","doc":{"description":"Filters the comment notification email headers.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"1.5.2"},{"name":"param","content":"<p>Headers for the comment notification email.</p>","types":["string"],"variable":"$message_headers"},{"name":"param","content":"<p>Comment ID as a numeric string.</p>","types":["string"],"variable":"$comment_id"}]},"args":2},{"name":"comment_notification_text","file":"wp-includes/pluggable.php","type":"filter","doc":{"description":"Filters the comment notification email text.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"1.5.2"},{"name":"param","content":"<p>The comment notification email text.</p>","types":["string"],"variable":"$notify_message"},{"name":"param","content":"<p>Comment ID as a numeric string.</p>","types":["string"],"variable":"$comment_id"}]},"args":2},{"name":"comment_notification_subject","file":"wp-includes/pluggable.php","type":"filter","doc":{"description":"Filters the comment notification email subject.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"1.5.2"},{"name":"param","content":"<p>The comment notification email subject.</p>","types":["string"],"variable":"$subject"},{"name":"param","content":"<p>Comment ID as a numeric string.</p>","types":["string"],"variable":"$comment_id"}]},"args":2},{"name":"notify_moderator","file":"wp-includes/pluggable.php","type":"filter","doc":{"description":"Filters whether to send the site moderator email notifications, overriding the site setting.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.4.0"},{"name":"param","content":"<p>Whether to notify blog moderator.</p>","types":["bool"],"variable":"$maybe_notify"},{"name":"param","content":"<p>The ID of the comment for the notification.</p>","types":["int"],"variable":"$comment_id"}]},"args":2},{"name":"comment_moderation_recipients","file":"wp-includes/pluggable.php","type":"filter","doc":{"description":"Filters the list of recipients for comment moderation emails.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.7.0"},{"name":"param","content":"<p>List of email addresses to notify for comment moderation.</p>","types":["string[]"],"variable":"$emails"},{"name":"param","content":"<p>Comment ID.</p>","types":["int"],"variable":"$comment_id"}]},"args":2},{"name":"comment_moderation_headers","file":"wp-includes/pluggable.php","type":"filter","doc":{"description":"Filters the comment moderation email headers.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.8.0"},{"name":"param","content":"<p>Headers for the comment moderation email.</p>","types":["string"],"variable":"$message_headers"},{"name":"param","content":"<p>Comment ID.</p>","types":["int"],"variable":"$comment_id"}]},"args":2},{"name":"comment_moderation_text","file":"wp-includes/pluggable.php","type":"filter","doc":{"description":"Filters the comment moderation email text.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"1.5.2"},{"name":"param","content":"<p>Text of the comment moderation email.</p>","types":["string"],"variable":"$notify_message"},{"name":"param","content":"<p>Comment ID.</p>","types":["int"],"variable":"$comment_id"}]},"args":2},{"name":"comment_moderation_subject","file":"wp-includes/pluggable.php","type":"filter","doc":{"description":"Filters the comment moderation email subject.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"1.5.2"},{"name":"param","content":"<p>Subject of the comment moderation email.</p>","types":["string"],"variable":"$subject"},{"name":"param","content":"<p>Comment ID.</p>","types":["int"],"variable":"$comment_id"}]},"args":2},{"name":"wp_password_change_notification_email","file":"wp-includes/pluggable.php","type":"filter","doc":{"description":"Filters the contents of the password change notification email sent to the site admin.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.9.0"},{"name":"param","content":"<p>{ Used to build wp_mail().</p>","types":["array"],"variable":"$wp_password_change_notification_email"},{"name":"param","content":"<p>User object for user whose password was changed.</p>","types":["\\WP_User"],"variable":"$user"},{"name":"param","content":"<p>The site title.</p>","types":["string"],"variable":"$blogname"}]},"args":3},{"name":"wp_send_new_user_notification_to_admin","file":"wp-includes/pluggable.php","type":"filter","doc":{"description":"Filters whether the admin is notified of a new user registration.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"6.1.0"},{"name":"param","content":"<p>Whether to send the email. Default true.</p>","types":["bool"],"variable":"$send"},{"name":"param","content":"<p>User object for new user.</p>","types":["\\WP_User"],"variable":"$user"}]},"args":2},{"name":"wp_new_user_notification_email_admin","file":"wp-includes/pluggable.php","type":"filter","doc":{"description":"Filters the contents of the new user notification email sent to the site admin.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.9.0"},{"name":"param","content":"<p>{ Used to build wp_mail().</p>","types":["array"],"variable":"$wp_new_user_notification_email_admin"},{"name":"param","content":"<p>User object for new user.</p>","types":["\\WP_User"],"variable":"$user"},{"name":"param","content":"<p>The site title.</p>","types":["string"],"variable":"$blogname"}]},"args":3},{"name":"wp_send_new_user_notification_to_user","file":"wp-includes/pluggable.php","type":"filter","doc":{"description":"Filters whether the user is notified of their new user registration.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"6.1.0"},{"name":"param","content":"<p>Whether to send the email. Default true.</p>","types":["bool"],"variable":"$send"},{"name":"param","content":"<p>User object for new user.</p>","types":["\\WP_User"],"variable":"$user"}]},"args":2},{"name":"wp_new_user_notification_email","file":"wp-includes/pluggable.php","type":"filter","doc":{"description":"Filters the contents of the new user notification email sent to the new user.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.9.0"},{"name":"param","content":"<p>{ Used to build wp_mail().</p>","types":["array"],"variable":"$wp_new_user_notification_email"},{"name":"param","content":"<p>User object for new user.</p>","types":["\\WP_User"],"variable":"$user"},{"name":"param","content":"<p>The site title.</p>","types":["string"],"variable":"$blogname"}]},"args":3},{"name":"nonce_life","file":"wp-includes/pluggable.php","type":"filter","doc":{"description":"Filters the lifespan of nonces in seconds.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.5.0"},{"name":"since","content":"6.1.0","description":"<p>Added <code>$action</code> argument to allow for more targeted filters.</p>"},{"name":"param","content":"<p>Lifespan of nonces in seconds. Default 86,400 seconds, or one day.</p>","types":["int"],"variable":"$lifespan"},{"name":"param","content":"<p>The nonce action, or -1 if none was provided.</p>","types":["string","int"],"variable":"$action"}]},"args":2},{"name":"nonce_user_logged_out","file":"wp-includes/pluggable.php","type":"filter","doc":{"description":"Filters whether the user who generated the nonce is logged out.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.5.0"},{"name":"param","content":"<p>ID of the nonce-owning user.</p>","types":["int"],"variable":"$uid"},{"name":"param","content":"<p>The nonce action, or -1 if none was provided.</p>","types":["string","int"],"variable":"$action"}]},"args":2},{"name":"salt","file":"wp-includes/pluggable.php","type":"filter","doc":{"description":"Filters the WordPress salt.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.5.0"},{"name":"param","content":"<p>Cached salt for the given scheme.</p>","types":["string"],"variable":"$cached_salt"},{"name":"param","content":"<p>Authentication scheme. Values include 'auth', 'secure_auth', 'logged_in', and 'nonce'.</p>","types":["string"],"variable":"$scheme"}]},"args":2},{"name":"check_password","file":"wp-includes/pluggable.php","type":"filter","doc":{"description":"Filters whether the plaintext password matches the encrypted password.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.5.0"},{"name":"param","content":"<p>Whether the passwords match.</p>","types":["bool"],"variable":"$check"},{"name":"param","content":"<p>The plaintext password.</p>","types":["string"],"variable":"$password"},{"name":"param","content":"<p>The hashed password.</p>","types":["string"],"variable":"$hash"},{"name":"param","content":"<p>User ID. Can be empty.</p>","types":["string","int"],"variable":"$user_id"}]},"args":4},{"name":"random_password","file":"wp-includes/pluggable.php","type":"filter","doc":{"description":"Filters the randomly-generated password.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.0.0"},{"name":"since","content":"5.3.0","description":"<p>Added the <code>$length</code>, <code>$special_chars</code>, and <code>$extra_special_chars</code> parameters.</p>"},{"name":"param","content":"<p>The generated password.</p>","types":["string"],"variable":"$password"},{"name":"param","content":"<p>The length of password to generate.</p>","types":["int"],"variable":"$length"},{"name":"param","content":"<p>Whether to include standard special characters.</p>","types":["bool"],"variable":"$special_chars"},{"name":"param","content":"<p>Whether to include other special characters.</p>","types":["bool"],"variable":"$extra_special_chars"}]},"args":4},{"name":"pre_get_avatar","file":"wp-includes/pluggable.php","type":"filter","doc":{"description":"Allows the HTML for a user's avatar to be returned early.","long_description":"Returning a non-null value will effectively short-circuit get_avatar(), passing the value through the {@see 'get_avatar'} filter and returning early.","long_description_html":"<p>Returning a non-null value will effectively short-circuit get_avatar(), passing the value through the {@see 'get_avatar'} filter and returning early.</p>","tags":[{"name":"since","content":"4.2.0"},{"name":"param","content":"<p>HTML for the user's avatar. Default null.</p>","types":["string","null"],"variable":"$avatar"},{"name":"param","content":"<p>The avatar to retrieve. Accepts a user ID, Gravatar MD5 hash, user email, WP_User object, WP_Post object, or WP_Comment object.</p>","types":["mixed"],"variable":"$id_or_email"},{"name":"param","content":"<p>Arguments passed to get_avatar_url(), after processing.</p>","types":["array"],"variable":"$args"}]},"args":3},{"name":"get_avatar","file":"wp-includes/pluggable.php","type":"filter","doc":{"description":"Filters the HTML for a user's avatar.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.5.0"},{"name":"since","content":"4.2.0","description":"<p>Added the <code>$args</code> parameter.</p>"},{"name":"param","content":"<p>HTML for the user's avatar.</p>","types":["string"],"variable":"$avatar"},{"name":"param","content":"<p>The avatar to retrieve. Accepts a user ID, Gravatar MD5 hash, user email, WP_User object, WP_Post object, or WP_Comment object.</p>","types":["mixed"],"variable":"$id_or_email"},{"name":"param","content":"<p>Height and width of the avatar in pixels.</p>","types":["int"],"variable":"$size"},{"name":"param","content":"<p>URL for the default image or a default type. Accepts: - '404' (return a 404 instead of a default image) - 'retro' (a 8-bit arcade-style pixelated face) - 'robohash' (a robot) - 'monsterid' (a monster) - 'wavatar' (a cartoon face) - 'identicon' (the &quot;quilt&quot;, a geometric pattern) - 'mystery', 'mm', or 'mysteryman' (The Oyster Man) - 'blank' (transparent GIF) - 'gravatar_default' (the Gravatar logo)</p>","types":["string"],"variable":"$default_value"},{"name":"param","content":"<p>Alternative text to use in the avatar image tag.</p>","types":["string"],"variable":"$alt"},{"name":"param","content":"<p>Arguments passed to get_avatar_data(), after processing.</p>","types":["array"],"variable":"$args"}]},"args":6},{"name":"_wp_post_revision_fields","file":"wp-includes/revision.php","type":"filter","doc":{"description":"Filters the list of fields saved in post revisions.","long_description":"Included by default: 'post_title', 'post_content' and 'post_excerpt'.\n Disallowed fields: 'ID', 'post_name', 'post_parent', 'post_date', 'post_date_gmt', 'post_status', 'post_type', 'comment_count', and 'post_author'.","long_description_html":"<p>Included by default: 'post_title', 'post_content' and 'post_excerpt'.</p> <p>Disallowed fields: 'ID', 'post_name', 'post_parent', 'post_date', 'post_date_gmt', 'post_status', 'post_type', 'comment_count', and 'post_author'.</p>","tags":[{"name":"since","content":"2.6.0"},{"name":"since","content":"4.5.0","description":"<p>The <code>$post</code> parameter was added.</p>"},{"name":"param","content":"<p>List of fields to revision. Contains 'post_title', 'post_content', and 'post_excerpt' by default.</p>","types":["string[]"],"variable":"$fields"},{"name":"param","content":"<p>A post array being processed for insertion as a post revision.</p>","types":["array"],"variable":"$post"}]},"args":2},{"name":"wp_save_post_revision_check_for_changes","file":"wp-includes/revision.php","type":"filter","doc":{"description":"Filters whether the post has changed since the latest revision.","long_description":"By default a revision is saved only if one of the revisioned fields has changed. This filter can override that so a revision is saved even if nothing has changed.","long_description_html":"<p>By default a revision is saved only if one of the revisioned fields has changed. This filter can override that so a revision is saved even if nothing has changed.</p>","tags":[{"name":"since","content":"3.6.0"},{"name":"param","content":"<p>Whether to check for changes before saving a new revision. Default true.</p>","types":["bool"],"variable":"$check_for_changes"},{"name":"param","content":"<p>The latest revision post object.</p>","types":["\\WP_Post"],"variable":"$latest_revision"},{"name":"param","content":"<p>The post object.</p>","types":["\\WP_Post"],"variable":"$post"}]},"args":3},{"name":"wp_save_post_revision_post_has_changed","file":"wp-includes/revision.php","type":"filter","doc":{"description":"Filters whether a post has changed.","long_description":"By default a revision is saved only if one of the revisioned fields has changed. This filter allows for additional checks to determine if there were changes.","long_description_html":"<p>By default a revision is saved only if one of the revisioned fields has changed. This filter allows for additional checks to determine if there were changes.</p>","tags":[{"name":"since","content":"4.1.0"},{"name":"param","content":"<p>Whether the post has changed.</p>","types":["bool"],"variable":"$post_has_changed"},{"name":"param","content":"<p>The latest revision post object.</p>","types":["\\WP_Post"],"variable":"$latest_revision"},{"name":"param","content":"<p>The post object.</p>","types":["\\WP_Post"],"variable":"$post"}]},"args":3},{"name":"wp_save_post_revision_revisions_before_deletion","file":"wp-includes/revision.php","type":"filter","doc":{"description":"Filters the revisions to be considered for deletion.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"6.2.0"},{"name":"param","content":"<p>Array of revisions, or an empty array if none.</p>","types":["\\WP_Post[]"],"variable":"$revisions"},{"name":"param","content":"<p>The ID of the post to save as a revision.</p>","types":["int"],"variable":"$post_id"}]},"args":2},{"name":"wp_post_revision_meta_keys","file":"wp-includes/revision.php","type":"filter","doc":{"description":"Filter the list of post meta keys to be revisioned.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"6.4.0"},{"name":"param","content":"<p>An array of meta fields to be revisioned.</p>","types":["array"],"variable":"$keys"},{"name":"param","content":"<p>The post type being revisioned.</p>","types":["string"],"variable":"$post_type"}]},"args":2},{"name":"wp_revisions_to_keep","file":"wp-includes/revision.php","type":"filter","doc":{"description":"Filters the number of revisions to save for the given post.","long_description":"Overrides the value of WP_POST_REVISIONS.","long_description_html":"<p>Overrides the value of WP_POST_REVISIONS.</p>","tags":[{"name":"since","content":"3.6.0"},{"name":"param","content":"<p>Number of revisions to store.</p>","types":["int"],"variable":"$num"},{"name":"param","content":"<p>Post object.</p>","types":["\\WP_Post"],"variable":"$post"}]},"args":2},{"name":"wp_{$post->post_type}_revisions_to_keep","aliases":["wp_page_revisions_to_keep","wp_post_revisions_to_keep"],"file":"wp-includes/revision.php","type":"filter","doc":{"description":"Filters the number of revisions to save for the given post by its post type.","long_description":"Overrides both the value of WP_POST_REVISIONS and the {@see 'wp_revisions_to_keep'} filter.\n The dynamic portion of the hook name, `$post->post_type`, refers to the post type slug.\n Possible hook names include:\n\n  - `wp_post_revisions_to_keep`\n  - `wp_page_revisions_to_keep`","long_description_html":"<p>Overrides both the value of WP_POST_REVISIONS and the {@see 'wp_revisions_to_keep'} filter.</p> <p>The dynamic portion of the hook name, <code>$post-&gt;post_type</code>, refers to the post type slug.</p> <p>Possible hook names include:</p> <ul> <li><code>wp_post_revisions_to_keep</code></li> <li><code>wp_page_revisions_to_keep</code></li> </ul>","tags":[{"name":"since","content":"5.8.0"},{"name":"param","content":"<p>Number of revisions to store.</p>","types":["int"],"variable":"$num"},{"name":"param","content":"<p>Post object.</p>","types":["\\WP_Post"],"variable":"$post"}]},"args":2},{"name":"embed_thumbnail_id","file":"wp-includes/theme-compat/embed-content.php","type":"filter","doc":{"description":"Filters the thumbnail image ID for use in the embed template.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.9.0"},{"name":"param","content":"<p>Attachment ID, or false if there is none.</p>","types":["int","false"],"variable":"$thumbnail_id"}]},"args":1},{"name":"embed_thumbnail_image_size","file":"wp-includes/theme-compat/embed-content.php","type":"filter","doc":{"description":"Filters the thumbnail image size for use in the embed template.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.4.0"},{"name":"since","content":"4.5.0","description":"<p>Added <code>$thumbnail_id</code> parameter.</p>"},{"name":"param","content":"<p>Thumbnail image size.</p>","types":["string"],"variable":"$image_size"},{"name":"param","content":"<p>Attachment ID.</p>","types":["int"],"variable":"$thumbnail_id"}]},"args":2},{"name":"embed_thumbnail_image_shape","file":"wp-includes/theme-compat/embed-content.php","type":"filter","doc":{"description":"Filters the thumbnail shape for use in the embed template.","long_description":"Rectangular images are shown above the title while square images are shown next to the content.","long_description_html":"<p>Rectangular images are shown above the title while square images are shown next to the content.</p>","tags":[{"name":"since","content":"4.4.0"},{"name":"since","content":"4.5.0","description":"<p>Added <code>$thumbnail_id</code> parameter.</p>"},{"name":"param","content":"<p>Thumbnail image shape. Either 'rectangular' or 'square'.</p>","types":["string"],"variable":"$shape"},{"name":"param","content":"<p>Attachment ID.</p>","types":["int"],"variable":"$thumbnail_id"}]},"args":2},{"name":"customize_loaded_components","file":"wp-includes/class-wp-customize-manager.php","type":"filter","doc":{"description":"Filters the core Customizer components to load.","long_description":"This allows Core components to be excluded from being instantiated by filtering them out of the array. Note that this filter generally runs during the {@see 'plugins_loaded'} action, so it cannot be added in a theme.","long_description_html":"<p>This allows Core components to be excluded from being instantiated by filtering them out of the array. Note that this filter generally runs during the {@see 'plugins_loaded'} action, so it cannot be added in a theme.</p>","tags":[{"name":"since","content":"4.4.0"},{"name":"see","content":"","refers":"WP_Customize_Manager::__construct()"},{"name":"param","content":"<p>Array of core components to load.</p>","types":["string[]"],"variable":"$components"},{"name":"param","content":"<p>WP_Customize_Manager instance.</p>","types":["\\WP_Customize_Manager"],"variable":"$manager"}]},"args":2},{"name":"customize_changeset_branching","file":"wp-includes/class-wp-customize-manager.php","type":"filter","doc":{"description":"Filters whether or not changeset branching is\u00a0allowed.","long_description":"By default in core, when changeset branching is not allowed, changesets will operate linearly in that only one saved changeset will exist at a time (with a 'draft' or 'future' status). This makes the Customizer operate in a way that is similar to going to \"edit\" to one existing post: all users will be making changes to the same post, and autosave revisions will be made for that post.\n By contrast, when changeset branching is allowed, then the model is like users going to \"add new\" for a page and each user makes changes independently of each other since they are all operating on their own separate pages, each getting their own separate initial auto-drafts and then once initially saved, autosave revisions on top of that user's specific post.\n Since linear changesets are deemed to be more suitable for the majority of WordPress users, they are the default. For WordPress sites that have heavy site management in the Customizer by multiple users then branching changesets should be enabled by means of this filter.","long_description_html":"<p>By default in core, when changeset branching is not allowed, changesets will operate linearly in that only one saved changeset will exist at a time (with a 'draft' or 'future' status). This makes the Customizer operate in a way that is similar to going to &quot;edit&quot; to one existing post: all users will be making changes to the same post, and autosave revisions will be made for that post.</p> <p>By contrast, when changeset branching is allowed, then the model is like users going to &quot;add new&quot; for a page and each user makes changes independently of each other since they are all operating on their own separate pages, each getting their own separate initial auto-drafts and then once initially saved, autosave revisions on top of that user's specific post.</p> <p>Since linear changesets are deemed to be more suitable for the majority of WordPress users, they are the default. For WordPress sites that have heavy site management in the Customizer by multiple users then branching changesets should be enabled by means of this filter.</p>","tags":[{"name":"since","content":"4.9.0"},{"name":"param","content":"<p>Whether branching is allowed. If <code>false</code>, the default, then only one saved changeset exists at a time.</p>","types":["bool"],"variable":"$allow_branching"},{"name":"param","content":"<p>Manager instance.</p>","types":["\\WP_Customize_Manager"],"variable":"$wp_customize"}]},"args":2},{"name":"customize_save_response","file":"wp-includes/class-wp-customize-manager.php","type":"filter","doc":{"description":"Filters response data for a successful customize_save Ajax request.","long_description":"This filter does not apply if there was a nonce or authentication failure.","long_description_html":"<p>This filter does not apply if there was a nonce or authentication failure.</p>","tags":[{"name":"since","content":"4.2.0"},{"name":"param","content":"<p>Additional information passed back to the 'saved' event on <code>wp.customize</code>.</p>","types":["array"],"variable":"$response"},{"name":"param","content":"<p>WP_Customize_Manager instance.</p>","types":["\\WP_Customize_Manager"],"variable":"$manager"}]},"args":2},{"name":"customize_changeset_save_data","file":"wp-includes/class-wp-customize-manager.php","type":"filter","doc":{"description":"Filters the settings' data that will be persisted into the changeset.","long_description":"Plugins may amend additional data (such as additional meta for settings) into the changeset with this filter.","long_description_html":"<p>Plugins may amend additional data (such as additional meta for settings) into the changeset with this filter.</p>","tags":[{"name":"since","content":"4.7.0"},{"name":"param","content":"<p>Updated changeset data, mapping setting IDs to arrays containing a $value item and optionally other metadata.</p>","types":["array"],"variable":"$data"},{"name":"param","content":"<p>{ Filter context.</p>","types":["array"],"variable":"$context"}]},"args":2},{"name":"customize_dynamic_setting_args","file":"wp-includes/class-wp-customize-manager.php","type":"filter","doc":{"description":"Filters a dynamic setting's constructor args.","long_description":"For a dynamic setting to be registered, this filter must be employed to override the default false value with an array of args to pass to the WP_Customize_Setting constructor.","long_description_html":"<p>For a dynamic setting to be registered, this filter must be employed to override the default false value with an array of args to pass to the WP_Customize_Setting constructor.</p>","tags":[{"name":"since","content":"4.2.0"},{"name":"param","content":"<p>The arguments to the WP_Customize_Setting constructor.</p>","types":["false","array"],"variable":"$setting_args"},{"name":"param","content":"<p>ID for dynamic setting, usually coming from <code>$_POST['customized']</code>.</p>","types":["string"],"variable":"$setting_id"}]},"args":2},{"name":"customize_dynamic_setting_class","file":"wp-includes/class-wp-customize-manager.php","type":"filter","doc":{"description":"Allow non-statically created settings to be constructed with custom WP_Customize_Setting subclass.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.2.0"},{"name":"param","content":"<p>WP_Customize_Setting or a subclass.</p>","types":["string"],"variable":"$setting_class"},{"name":"param","content":"<p>ID for dynamic setting, usually coming from <code>$_POST['customized']</code>.</p>","types":["string"],"variable":"$setting_id"},{"name":"param","content":"<p>WP_Customize_Setting or a subclass.</p>","types":["array"],"variable":"$setting_args"}]},"args":3},{"name":"customize_allowed_urls","file":"wp-includes/class-wp-customize-manager.php","type":"filter","doc":{"description":"Filters the list of URLs allowed to be clicked and followed in the Customizer preview.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.4.0"},{"name":"param","content":"<p>An array of allowed URLs.</p>","types":["string[]"],"variable":"$allowed_urls"}]},"args":1},{"name":"customize_refresh_nonces","file":"wp-includes/class-wp-customize-manager.php","type":"filter","doc":{"description":"Filters nonces for Customizer.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.2.0"},{"name":"param","content":"<p>Array of refreshed nonces for save and preview actions.</p>","types":["string[]"],"variable":"$nonces"},{"name":"param","content":"<p>WP_Customize_Manager instance.</p>","types":["\\WP_Customize_Manager"],"variable":"$manager"}]},"args":2},{"name":"customize_previewable_devices","file":"wp-includes/class-wp-customize-manager.php","type":"filter","doc":{"description":"Filters the available devices to allow previewing in the Customizer.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.5.0"},{"name":"see","content":"","refers":"WP_Customize_Manager::get_previewable_devices()"},{"name":"param","content":"<p>List of devices with labels and default setting.</p>","types":["array"],"variable":"$devices"}]},"args":1},{"name":"customize_load_themes","file":"wp-includes/class-wp-customize-manager.php","type":"filter","doc":{"description":"Filters the theme data loaded in the customizer.","long_description":"This allows theme data to be loading from an external source, or modification of data loaded from `wp_prepare_themes_for_js()` or WordPress.org via `themes_api()`.","long_description_html":"<p>This allows theme data to be loading from an external source, or modification of data loaded from <code>wp_prepare_themes_for_js()</code> or WordPress.org via <code>themes_api()</code>.</p>","tags":[{"name":"since","content":"4.9.0"},{"name":"see","content":"","refers":"wp_prepare_themes_for_js()"},{"name":"see","content":"","refers":"themes_api()"},{"name":"see","content":"","refers":"WP_Customize_Manager::__construct()"},{"name":"param","content":"<p>Nested array or object of theme data.</p>","types":["array","\\stdClass"],"variable":"$themes"},{"name":"param","content":"<p>List of arguments, such as page, search term, and tags to query for.</p>","types":["array"],"variable":"$args"},{"name":"param","content":"<p>Instance of Customize manager.</p>","types":["\\WP_Customize_Manager"],"variable":"$manager"}]},"args":3},{"name":"customize_control_active","file":"wp-includes/class-wp-customize-control.php","type":"filter","doc":{"description":"Filters response of WP_Customize_Control::active().","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.0.0"},{"name":"param","content":"<p>Whether the Customizer control is active.</p>","types":["bool"],"variable":"$active"},{"name":"param","content":"<p>WP_Customize_Control instance.</p>","types":["\\WP_Customize_Control"],"variable":"$control"}]},"args":2},{"name":"get_bookmarks","file":"wp-includes/bookmark.php","type":"filter","doc":{"description":"Filters the returned list of bookmarks.","long_description":"The first time the hook is evaluated in this file, it returns the cached bookmarks list. The second evaluation returns a cached bookmarks list if the link category is passed but does not exist. The third evaluation returns the full cached results.","long_description_html":"<p>The first time the hook is evaluated in this file, it returns the cached bookmarks list. The second evaluation returns a cached bookmarks list if the link category is passed but does not exist. The third evaluation returns the full cached results.</p>","tags":[{"name":"since","content":"2.1.0"},{"name":"see","content":"","refers":"get_bookmarks()"},{"name":"param","content":"<p>List of the cached bookmarks.</p>","types":["array"],"variable":"$bookmarks"},{"name":"param","content":"<p>An array of bookmark query arguments.</p>","types":["array"],"variable":"$parsed_args"}]},"args":2},{"name":"recovery_mode_email_rate_limit","file":"wp-includes/class-wp-recovery-mode.php","type":"filter","doc":{"description":"Filters the rate limit between sending new recovery mode email links.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.2.0"},{"name":"param","content":"<p>Time to wait in seconds. Defaults to 1 day.</p>","types":["int"],"variable":"$rate_limit"}]},"args":1},{"name":"recovery_mode_email_link_ttl","file":"wp-includes/class-wp-recovery-mode.php","type":"filter","doc":{"description":"Filters the amount of time the recovery mode email link is valid for.","long_description":"The ttl must be at least as long as the email rate limit.","long_description_html":"<p>The ttl must be at least as long as the email rate limit.</p>","tags":[{"name":"since","content":"5.2.0"},{"name":"param","content":"<p>The number of seconds the link is valid for.</p>","types":["int"],"variable":"$valid_for"}]},"args":1},{"name":"customize_sanitize_{$this->id}","file":"wp-includes/class-wp-customize-setting.php","type":"filter","doc":{"description":"Filters a Customize setting value in un-slashed form.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.4.0"},{"name":"param","content":"<p>Value of the setting.</p>","types":["mixed"],"variable":"$value"},{"name":"param","content":"<p>WP_Customize_Setting instance.</p>","types":["\\WP_Customize_Setting"],"variable":"$setting"}]},"args":2},{"name":"customize_validate_{$this->id}","file":"wp-includes/class-wp-customize-setting.php","type":"filter","doc":{"description":"Validates a Customize setting value.","long_description":"Plugins should amend the `$validity` object via its `WP_Error::add()` method.\n The dynamic portion of the hook name, `$this->ID`, refers to the setting ID.","long_description_html":"<p>Plugins should amend the <code>$validity</code> object via its <code>WP_Error::add()</code> method.</p> <p>The dynamic portion of the hook name, <code>$this-&gt;ID</code>, refers to the setting ID.</p>","tags":[{"name":"since","content":"4.6.0"},{"name":"param","content":"<p>Filtered from <code>true</code> to <code>WP_Error</code> when invalid.</p>","types":["\\WP_Error"],"variable":"$validity"},{"name":"param","content":"<p>Value of the setting.</p>","types":["mixed"],"variable":"$value"},{"name":"param","content":"<p>WP_Customize_Setting instance.</p>","types":["\\WP_Customize_Setting"],"variable":"$setting"}]},"args":3},{"name":"customize_value_{$id_base}","file":"wp-includes/class-wp-customize-setting.php","type":"filter","doc":{"description":"Filters a Customize setting value not handled as a theme_mod or option.","long_description":"The dynamic portion of the hook name, `$id_base`, refers to the base slug of the setting name, initialized from `$this->id_data['base']`.\n For settings handled as theme_mods or options, see those corresponding functions for available hooks.","long_description_html":"<p>The dynamic portion of the hook name, <code>$id_base</code>, refers to the base slug of the setting name, initialized from <code>$this-&gt;id_data['base']</code>.</p> <p>For settings handled as theme_mods or options, see those corresponding functions for available hooks.</p>","tags":[{"name":"since","content":"3.4.0"},{"name":"since","content":"4.6.0","description":"<p>Added the <code>$this</code> setting instance as the second parameter.</p>"},{"name":"param","content":"<p>The setting default value. Default empty.</p>","types":["mixed"],"variable":"$default_value"},{"name":"param","content":"<p>The setting instance.</p>","types":["\\WP_Customize_Setting"],"variable":"$setting"}]},"args":2},{"name":"customize_sanitize_js_{$this->id}","file":"wp-includes/class-wp-customize-setting.php","type":"filter","doc":{"description":"Filters a Customize setting value for use in JavaScript.","long_description":"The dynamic portion of the hook name, `$this->id`, refers to the setting ID.","long_description_html":"<p>The dynamic portion of the hook name, <code>$this-&gt;id</code>, refers to the setting ID.</p>","tags":[{"name":"since","content":"3.4.0"},{"name":"param","content":"<p>The setting value.</p>","types":["mixed"],"variable":"$value"},{"name":"param","content":"<p>WP_Customize_Setting instance.</p>","types":["\\WP_Customize_Setting"],"variable":"$setting"}]},"args":2},{"name":"rest_authentication_errors","file":"wp-includes/rest-api/class-wp-rest-server.php","type":"filter","doc":{"description":"Filters REST API authentication errors.","long_description":"This is used to pass a WP_Error from an authentication method back to the API.\n Authentication methods should check first if they're being used, as multiple authentication methods can be enabled on a site (cookies, HTTP basic auth, OAuth). If the authentication method hooked in is not actually being attempted, null should be returned to indicate another authentication method should check instead. Similarly, callbacks should ensure the value is `null` before checking for errors.\n A WP_Error instance can be returned if an error occurs, and this should match the format used by API methods internally (that is, the `status` data should be used). A callback can return `true` to indicate that the authentication method was used, and it succeeded.","long_description_html":"<p>This is used to pass a WP_Error from an authentication method back to the API.</p> <p>Authentication methods should check first if they're being used, as multiple authentication methods can be enabled on a site (cookies, HTTP basic auth, OAuth). If the authentication method hooked in is not actually being attempted, null should be returned to indicate another authentication method should check instead. Similarly, callbacks should ensure the value is <code>null</code> before checking for errors.</p> <p>A WP_Error instance can be returned if an error occurs, and this should match the format used by API methods internally (that is, the <code>status</code> data should be used). A callback can return <code>true</code> to indicate that the authentication method was used, and it succeeded.</p>","tags":[{"name":"since","content":"4.4.0"},{"name":"param","content":"<p>WP_Error if authentication error, null if authentication method wasn't used, true if authentication succeeded.</p>","types":["\\WP_Error","null","true"],"variable":"$errors"}]},"args":1},{"name":"rest_json_encode_options","file":"wp-includes/rest-api/class-wp-rest-server.php","type":"filter","doc":{"description":"Filters the JSON encoding options used to send the REST API response.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"6.1.0"},{"name":"param","content":"<p>JSON encoding options {@see \\json_encode()}.</p>","types":["int"],"variable":"$options"},{"name":"param","content":"<p>Current request object.</p>","types":["\\WP_REST_Request"],"variable":"$request"}]},"args":2},{"name":"rest_jsonp_enabled","file":"wp-includes/rest-api/class-wp-rest-server.php","type":"filter","doc":{"description":"Filters whether JSONP is enabled for the REST API.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.4.0"},{"name":"param","content":"<p>Whether JSONP is enabled. Default true.</p>","types":["bool"],"variable":"$jsonp_enabled"}]},"args":1},{"name":"rest_exposed_cors_headers","file":"wp-includes/rest-api/class-wp-rest-server.php","type":"filter","doc":{"description":"Filters the list of response headers that are exposed to REST API CORS requests.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.5.0"},{"name":"since","content":"6.3.0","description":"<p>The <code>$request</code> parameter was added.</p>"},{"name":"param","content":"<p>The list of response headers to expose.</p>","types":["string[]"],"variable":"$expose_headers"},{"name":"param","content":"<p>The request in context.</p>","types":["\\WP_REST_Request"],"variable":"$request"}]},"args":2},{"name":"rest_allowed_cors_headers","file":"wp-includes/rest-api/class-wp-rest-server.php","type":"filter","doc":{"description":"Filters the list of request headers that are allowed for REST API CORS requests.","long_description":"The allowed headers are passed to the browser to specify which headers can be passed to the REST API. By default, we allow the Content-* headers needed to upload files to the media endpoints. As well as the Authorization and Nonce headers for allowing authentication.","long_description_html":"<p>The allowed headers are passed to the browser to specify which headers can be passed to the REST API. By default, we allow the Content-* headers needed to upload files to the media endpoints. As well as the Authorization and Nonce headers for allowing authentication.</p>","tags":[{"name":"since","content":"5.5.0"},{"name":"since","content":"6.3.0","description":"<p>The <code>$request</code> parameter was added.</p>"},{"name":"param","content":"<p>The list of request headers to allow.</p>","types":["string[]"],"variable":"$allow_headers"},{"name":"param","content":"<p>The request in context.</p>","types":["\\WP_REST_Request"],"variable":"$request"}]},"args":2},{"name":"rest_post_dispatch","file":"wp-includes/rest-api/class-wp-rest-server.php","type":"filter","doc":{"description":"Filters the REST API response.","long_description":"Allows modification of the response before returning.","long_description_html":"<p>Allows modification of the response before returning.</p>","tags":[{"name":"since","content":"4.4.0"},{"name":"since","content":"4.5.0","description":"<p>Applied to embedded responses.</p>"},{"name":"param","content":"<p>Result to send to the client. Usually a <code>WP_REST_Response</code>.</p>","types":["\\WP_HTTP_Response"],"variable":"$result"},{"name":"param","content":"<p>Server instance.</p>","types":["\\WP_REST_Server"],"variable":"$server"},{"name":"param","content":"<p>Request used to generate the response.</p>","types":["\\WP_REST_Request"],"variable":"$request"}]},"args":3},{"name":"rest_send_nocache_headers","file":"wp-includes/rest-api/class-wp-rest-server.php","type":"filter","doc":{"description":"Filters whether to send no-cache headers on a REST API request.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.4.0"},{"name":"since","content":"6.3.2","description":"<p>Moved the block to catch the filter added on rest_cookie_check_errors() from wp-includes/rest-api.php.</p>"},{"name":"param","content":"<p>Whether to send no-cache headers.</p>","types":["bool"],"variable":"$rest_send_nocache_headers"}]},"args":1},{"name":"rest_pre_serve_request","file":"wp-includes/rest-api/class-wp-rest-server.php","type":"filter","doc":{"description":"Filters whether the REST API request has already been served.","long_description":"Allow sending the request manually - by returning true, the API result will not be sent to the client.","long_description_html":"<p>Allow sending the request manually - by returning true, the API result will not be sent to the client.</p>","tags":[{"name":"since","content":"4.4.0"},{"name":"param","content":"<p>Whether the request has already been served. Default false.</p>","types":["bool"],"variable":"$served"},{"name":"param","content":"<p>Result to send to the client. Usually a <code>WP_REST_Response</code>.</p>","types":["\\WP_HTTP_Response"],"variable":"$result"},{"name":"param","content":"<p>Request used to generate the response.</p>","types":["\\WP_REST_Request"],"variable":"$request"},{"name":"param","content":"<p>Server instance.</p>","types":["\\WP_REST_Server"],"variable":"$server"}]},"args":4},{"name":"rest_pre_echo_response","file":"wp-includes/rest-api/class-wp-rest-server.php","type":"filter","doc":{"description":"Filters the REST API response.","long_description":"Allows modification of the response data after inserting embedded data (if any) and before echoing the response data.","long_description_html":"<p>Allows modification of the response data after inserting embedded data (if any) and before echoing the response data.</p>","tags":[{"name":"since","content":"4.8.1"},{"name":"param","content":"<p>Response data to send to the client.</p>","types":["array"],"variable":"$result"},{"name":"param","content":"<p>Server instance.</p>","types":["\\WP_REST_Server"],"variable":"$server"},{"name":"param","content":"<p>Request used to generate the response.</p>","types":["\\WP_REST_Request"],"variable":"$request"}]},"args":3},{"name":"rest_envelope_response","file":"wp-includes/rest-api/class-wp-rest-server.php","type":"filter","doc":{"description":"Filters the enveloped form of a REST API response.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.4.0"},{"name":"param","content":"<p>{ Envelope data.</p>","types":["array"],"variable":"$envelope"},{"name":"param","content":"<p>Original response data.</p>","types":["\\WP_REST_Response"],"variable":"$response"}]},"args":2},{"name":"rest_endpoints","file":"wp-includes/rest-api/class-wp-rest-server.php","type":"filter","doc":{"description":"Filters the array of available REST API endpoints.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.4.0"},{"name":"param","content":"<p>The available endpoints. An array of matching regex patterns, each mapped to an array of callbacks for the endpoint. These take the format <code>'/path/regex' =&gt; array( $callback, $bitmask )</code> or `'/path/regex' =&gt; array( array( $callback, $bitmask ).</p>","types":["array"],"variable":"$endpoints"}]},"args":1},{"name":"rest_pre_dispatch","file":"wp-includes/rest-api/class-wp-rest-server.php","type":"filter","doc":{"description":"Filters the pre-calculated result of a REST API dispatch request.","long_description":"Allow hijacking the request before dispatching by returning a non-empty. The returned value will be used to serve the request instead.","long_description_html":"<p>Allow hijacking the request before dispatching by returning a non-empty. The returned value will be used to serve the request instead.</p>","tags":[{"name":"since","content":"4.4.0"},{"name":"param","content":"<p>Response to replace the requested version with. Can be anything a normal endpoint can return, or null to not hijack the request.</p>","types":["mixed"],"variable":"$result"},{"name":"param","content":"<p>Server instance.</p>","types":["\\WP_REST_Server"],"variable":"$server"},{"name":"param","content":"<p>Request used to generate the response.</p>","types":["\\WP_REST_Request"],"variable":"$request"}]},"args":3},{"name":"rest_request_before_callbacks","file":"wp-includes/rest-api/class-wp-rest-server.php","type":"filter","doc":{"description":"Filters the response before executing any REST API callbacks.","long_description":"Allows plugins to perform additional validation after a request is initialized and matched to a registered route, but before it is executed.\n Note that this filter will not be called for requests that fail to authenticate or match to a registered route.","long_description_html":"<p>Allows plugins to perform additional validation after a request is initialized and matched to a registered route, but before it is executed.</p> <p>Note that this filter will not be called for requests that fail to authenticate or match to a registered route.</p>","tags":[{"name":"since","content":"4.7.0"},{"name":"param","content":"<p>Result to send to the client. Usually a WP_REST_Response or WP_Error.</p>","types":["\\WP_REST_Response","\\WP_HTTP_Response","\\WP_Error","mixed"],"variable":"$response"},{"name":"param","content":"<p>Route handler used for the request.</p>","types":["array"],"variable":"$handler"},{"name":"param","content":"<p>Request used to generate the response.</p>","types":["\\WP_REST_Request"],"variable":"$request"}]},"args":3},{"name":"rest_dispatch_request","file":"wp-includes/rest-api/class-wp-rest-server.php","type":"filter","doc":{"description":"Filters the REST API dispatch request result.","long_description":"Allow plugins to override dispatching the request.","long_description_html":"<p>Allow plugins to override dispatching the request.</p>","tags":[{"name":"since","content":"4.4.0"},{"name":"since","content":"4.5.0","description":"<p>Added <code>$route</code> and <code>$handler</code> parameters.</p>"},{"name":"param","content":"<p>Dispatch result, will be used if not empty.</p>","types":["mixed"],"variable":"$dispatch_result"},{"name":"param","content":"<p>Request used to generate the response.</p>","types":["\\WP_REST_Request"],"variable":"$request"},{"name":"param","content":"<p>Route matched for the request.</p>","types":["string"],"variable":"$route"},{"name":"param","content":"<p>Route handler used for the request.</p>","types":["array"],"variable":"$handler"}]},"args":4},{"name":"rest_request_after_callbacks","file":"wp-includes/rest-api/class-wp-rest-server.php","type":"filter","doc":{"description":"Filters the response immediately after executing any REST API callbacks.","long_description":"Allows plugins to perform any needed cleanup, for example, to undo changes made during the {@see 'rest_request_before_callbacks'} filter.\n Note that this filter will not be called for requests that fail to authenticate or match to a registered route.\n Note that an endpoint's `permission_callback` can still be called after this filter - see `rest_send_allow_header()`.","long_description_html":"<p>Allows plugins to perform any needed cleanup, for example, to undo changes made during the {@see 'rest_request_before_callbacks'} filter.</p> <p>Note that this filter will not be called for requests that fail to authenticate or match to a registered route.</p> <p>Note that an endpoint's <code>permission_callback</code> can still be called after this filter - see <code>rest_send_allow_header()</code>.</p>","tags":[{"name":"since","content":"4.7.0"},{"name":"param","content":"<p>Result to send to the client. Usually a WP_REST_Response or WP_Error.</p>","types":["\\WP_REST_Response","\\WP_HTTP_Response","\\WP_Error","mixed"],"variable":"$response"},{"name":"param","content":"<p>Route handler used for the request.</p>","types":["array"],"variable":"$handler"},{"name":"param","content":"<p>Request used to generate the response.</p>","types":["\\WP_REST_Request"],"variable":"$request"}]},"args":3},{"name":"rest_index","file":"wp-includes/rest-api/class-wp-rest-server.php","type":"filter","doc":{"description":"Filters the REST API root index data.","long_description":"This contains the data describing the API. This includes information about supported authentication schemes, supported namespaces, routes available on the API, and a small amount of data about the site.","long_description_html":"<p>This contains the data describing the API. This includes information about supported authentication schemes, supported namespaces, routes available on the API, and a small amount of data about the site.</p>","tags":[{"name":"since","content":"4.4.0"},{"name":"since","content":"6.0.0","description":"<p>Added <code>$request</code> parameter.</p>"},{"name":"param","content":"<p>Response data.</p>","types":["\\WP_REST_Response"],"variable":"$response"},{"name":"param","content":"<p>Request data.</p>","types":["\\WP_REST_Request"],"variable":"$request"}]},"args":2},{"name":"rest_namespace_index","file":"wp-includes/rest-api/class-wp-rest-server.php","type":"filter","doc":{"description":"Filters the REST API namespace index data.","long_description":"This typically is just the route data for the namespace, but you can add any data you'd like here.","long_description_html":"<p>This typically is just the route data for the namespace, but you can add any data you'd like here.</p>","tags":[{"name":"since","content":"4.4.0"},{"name":"param","content":"<p>Response data.</p>","types":["\\WP_REST_Response"],"variable":"$response"},{"name":"param","content":"<p>Request data. The namespace is passed as the 'namespace' parameter.</p>","types":["\\WP_REST_Request"],"variable":"$request"}]},"args":2},{"name":"rest_endpoints_description","file":"wp-includes/rest-api/class-wp-rest-server.php","type":"filter","doc":{"description":"Filters the publicly-visible data for a single REST API route.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.4.0"},{"name":"param","content":"<p>Publicly-visible data for the route.</p>","types":["array"],"variable":"$data"}]},"args":1},{"name":"rest_route_data","file":"wp-includes/rest-api/class-wp-rest-server.php","type":"filter","doc":{"description":"Filters the publicly-visible data for REST API routes.","long_description":"This data is exposed on indexes and can be used by clients or developers to investigate the site and find out how to use it. It acts as a form of self-documentation.","long_description_html":"<p>This data is exposed on indexes and can be used by clients or developers to investigate the site and find out how to use it. It acts as a form of self-documentation.</p>","tags":[{"name":"since","content":"4.4.0"},{"name":"param","content":"<p>Route data to expose in indexes, keyed by route.</p>","types":["array[]"],"variable":"$available"},{"name":"param","content":"<p>Internal route data as an associative array.</p>","types":["array"],"variable":"$routes"}]},"args":2},{"name":"rest_get_max_batch_size","file":"wp-includes/rest-api/class-wp-rest-server.php","type":"filter","doc":{"description":"Filters the maximum number of REST API requests that can be included in a batch.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.6.0"},{"name":"param","content":"<p>The maximum size.</p>","types":["int"],"variable":"$max_size"}]},"args":1},{"name":"rest_prepare_taxonomy","file":"wp-includes/rest-api/endpoints/class-wp-rest-taxonomies-controller.php","type":"filter","doc":{"description":"Filters a taxonomy returned from the REST API.","long_description":"Allows modification of the taxonomy data right before it is returned.","long_description_html":"<p>Allows modification of the taxonomy data right before it is returned.</p>","tags":[{"name":"since","content":"4.7.0"},{"name":"param","content":"<p>The response object.</p>","types":["\\WP_REST_Response"],"variable":"$response"},{"name":"param","content":"<p>The original taxonomy object.</p>","types":["\\WP_Taxonomy"],"variable":"$item"},{"name":"param","content":"<p>Request used to generate the response.</p>","types":["\\WP_REST_Request"],"variable":"$request"}]},"args":3},{"name":"rest_prepare_plugin","file":"wp-includes/rest-api/endpoints/class-wp-rest-plugins-controller.php","type":"filter","doc":{"description":"Filters plugin data for a REST API response.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.5.0"},{"name":"param","content":"<p>The response object.</p>","types":["\\WP_REST_Response"],"variable":"$response"},{"name":"param","content":"<p>The plugin item from {@see \\get_plugin_data()}.</p>","types":["array"],"variable":"$item"},{"name":"param","content":"<p>The request object.</p>","types":["\\WP_REST_Request"],"variable":"$request"}]},"args":3},{"name":"rest_prepare_post_type","file":"wp-includes/rest-api/endpoints/class-wp-rest-post-types-controller.php","type":"filter","doc":{"description":"Filters a post type returned from the REST API.","long_description":"Allows modification of the post type data right before it is returned.","long_description_html":"<p>Allows modification of the post type data right before it is returned.</p>","tags":[{"name":"since","content":"4.7.0"},{"name":"param","content":"<p>The response object.</p>","types":["\\WP_REST_Response"],"variable":"$response"},{"name":"param","content":"<p>The original post type object.</p>","types":["\\WP_Post_Type"],"variable":"$post_type"},{"name":"param","content":"<p>Request used to generate the response.</p>","types":["\\WP_REST_Request"],"variable":"$request"}]},"args":3},{"name":"rest_prepare_status","file":"wp-includes/rest-api/endpoints/class-wp-rest-post-statuses-controller.php","type":"filter","doc":{"description":"Filters a post status returned from the REST API.","long_description":"Allows modification of the status data right before it is returned.","long_description_html":"<p>Allows modification of the status data right before it is returned.</p>","tags":[{"name":"since","content":"4.7.0"},{"name":"param","content":"<p>The response object.</p>","types":["\\WP_REST_Response"],"variable":"$response"},{"name":"param","content":"<p>The original post status object.</p>","types":["object"],"variable":"$status"},{"name":"param","content":"<p>Request used to generate the response.</p>","types":["\\WP_REST_Request"],"variable":"$request"}]},"args":3},{"name":"rest_prepare_font_collection","file":"wp-includes/rest-api/endpoints/class-wp-rest-font-collections-controller.php","type":"filter","doc":{"description":"Filters the font collection data for a REST API response.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"6.5.0"},{"name":"param","content":"<p>The response object.</p>","types":["\\WP_REST_Response"],"variable":"$response"},{"name":"param","content":"<p>The font collection object.</p>","types":["\\WP_Font_Collection"],"variable":"$item"},{"name":"param","content":"<p>Request used to generate the response.</p>","types":["\\WP_REST_Request"],"variable":"$request"}]},"args":3},{"name":"rest_font_collections_collection_params","file":"wp-includes/rest-api/endpoints/class-wp-rest-font-collections-controller.php","type":"filter","doc":{"description":"Filters REST API collection parameters for the font collections controller.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"6.5.0"},{"name":"param","content":"<p>JSON Schema-formatted collection parameters.</p>","types":["array"],"variable":"$query_params"}]},"args":1},{"name":"rest_prepare_wp_font_family","file":"wp-includes/rest-api/endpoints/class-wp-rest-font-families-controller.php","type":"filter","doc":{"description":"Filters the font family data for a REST API response.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"6.5.0"},{"name":"param","content":"<p>The response object.</p>","types":["\\WP_REST_Response"],"variable":"$response"},{"name":"param","content":"<p>Font family post object.</p>","types":["\\WP_Post"],"variable":"$post"},{"name":"param","content":"<p>Request object.</p>","types":["\\WP_REST_Request"],"variable":"$request"}]},"args":3},{"name":"rest_wp_font_family_collection_params","file":"wp-includes/rest-api/endpoints/class-wp-rest-font-families-controller.php","type":"filter","doc":{"description":"Filters collection parameters for the font family controller.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"6.5.0"},{"name":"param","content":"<p>JSON Schema-formatted collection parameters.</p>","types":["array"],"variable":"$query_params"}]},"args":1},{"name":"wp_edited_image_metadata","file":"wp-includes/rest-api/endpoints/class-wp-rest-attachments-controller.php","type":"filter","doc":{"description":"Filters the meta data for the new image created by editing an existing image.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.5.0"},{"name":"param","content":"<p>Meta data for the new image.</p>","types":["array"],"variable":"$new_image_meta"},{"name":"param","content":"<p>Attachment post ID for the new image.</p>","types":["int"],"variable":"$new_attachment_id"},{"name":"param","content":"<p>Attachment post ID for the edited (parent) image.</p>","types":["int"],"variable":"$attachment_id"}]},"args":3},{"name":"rest_prepare_attachment","file":"wp-includes/rest-api/endpoints/class-wp-rest-attachments-controller.php","type":"filter","doc":{"description":"Filters an attachment returned from the REST API.","long_description":"Allows modification of the attachment right before it is returned.","long_description_html":"<p>Allows modification of the attachment right before it is returned.</p>","tags":[{"name":"since","content":"4.7.0"},{"name":"param","content":"<p>The response object.</p>","types":["\\WP_REST_Response"],"variable":"$response"},{"name":"param","content":"<p>The original attachment post.</p>","types":["\\WP_Post"],"variable":"$post"},{"name":"param","content":"<p>Request used to generate the response.</p>","types":["\\WP_REST_Request"],"variable":"$request"}]},"args":3},{"name":"rest_prepare_revision","file":"wp-includes/rest-api/endpoints/class-wp-rest-revisions-controller.php","type":"filter","doc":{"description":"Filters a revision returned from the REST API.","long_description":"Allows modification of the revision right before it is returned.","long_description_html":"<p>Allows modification of the revision right before it is returned.</p>","tags":[{"name":"since","content":"4.7.0"},{"name":"param","content":"<p>The response object.</p>","types":["\\WP_REST_Response"],"variable":"$response"},{"name":"param","content":"<p>The original revision object.</p>","types":["\\WP_Post"],"variable":"$post"},{"name":"param","content":"<p>Request used to generate the response.</p>","types":["\\WP_REST_Request"],"variable":"$request"}]},"args":3},{"name":"rest_block_directory_collection_params","file":"wp-includes/rest-api/endpoints/class-wp-rest-block-directory-controller.php","type":"filter","doc":{"description":"Filters REST API collection parameters for the block directory controller.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.5.0"},{"name":"param","content":"<p>JSON Schema-formatted collection parameters.</p>","types":["array"],"variable":"$query_params"}]},"args":1},{"name":"rest_prepare_wp_font_face","file":"wp-includes/rest-api/endpoints/class-wp-rest-font-faces-controller.php","type":"filter","doc":{"description":"Filters the font face data for a REST API response.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"6.5.0"},{"name":"param","content":"<p>The response object.</p>","types":["\\WP_REST_Response"],"variable":"$response"},{"name":"param","content":"<p>Font face post object.</p>","types":["\\WP_Post"],"variable":"$post"},{"name":"param","content":"<p>Request object.</p>","types":["\\WP_REST_Request"],"variable":"$request"}]},"args":3},{"name":"rest_wp_font_face_collection_params","file":"wp-includes/rest-api/endpoints/class-wp-rest-font-faces-controller.php","type":"filter","doc":{"description":"Filters collection parameters for the font face controller.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"6.5.0"},{"name":"param","content":"<p>JSON Schema-formatted collection parameters.</p>","types":["array"],"variable":"$query_params"}]},"args":1},{"name":"rest_pre_insert_application_password","file":"wp-includes/rest-api/endpoints/class-wp-rest-application-passwords-controller.php","type":"filter","doc":{"description":"Filters an application password before it is inserted via the REST API.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.6.0"},{"name":"param","content":"<p>An object representing a single application password prepared for inserting or updating the database.</p>","types":["\\stdClass"],"variable":"$prepared"},{"name":"param","content":"<p>Request object.</p>","types":["\\WP_REST_Request"],"variable":"$request"}]},"args":2},{"name":"rest_prepare_application_password","file":"wp-includes/rest-api/endpoints/class-wp-rest-application-passwords-controller.php","type":"filter","doc":{"description":"Filters the REST API response for an application password.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.6.0"},{"name":"param","content":"<p>The response object.</p>","types":["\\WP_REST_Response"],"variable":"$response"},{"name":"param","content":"<p>The application password array.</p>","types":["array"],"variable":"$item"},{"name":"param","content":"<p>The request object.</p>","types":["\\WP_REST_Request"],"variable":"$request"}]},"args":3},{"name":"rest_pre_insert_nav_menu_item","file":"wp-includes/rest-api/endpoints/class-wp-rest-menu-items-controller.php","type":"filter","doc":{"description":"Filters a menu item before it is inserted via the REST API.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.9.0"},{"name":"param","content":"<p>An object representing a single menu item prepared for inserting or updating the database.</p>","types":["object"],"variable":"$prepared_nav_item"},{"name":"param","content":"<p>Request object.</p>","types":["\\WP_REST_Request"],"variable":"$request"}]},"args":2},{"name":"rest_prepare_nav_menu_item","file":"wp-includes/rest-api/endpoints/class-wp-rest-menu-items-controller.php","type":"filter","doc":{"description":"Filters the menu item data for a REST API response.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.9.0"},{"name":"param","content":"<p>The response object.</p>","types":["\\WP_REST_Response"],"variable":"$response"},{"name":"param","content":"<p>Menu item setup by {@see \\wp_setup_nav_menu_item()}.</p>","types":["object"],"variable":"$menu_item"},{"name":"param","content":"<p>Request object.</p>","types":["\\WP_REST_Request"],"variable":"$request"}]},"args":3},{"name":"rest_prepare_menu_location","file":"wp-includes/rest-api/endpoints/class-wp-rest-menu-locations-controller.php","type":"filter","doc":{"description":"Filters menu location data returned from the REST API.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.9.0"},{"name":"param","content":"<p>The response object.</p>","types":["\\WP_REST_Response"],"variable":"$response"},{"name":"param","content":"<p>The original location object.</p>","types":["object"],"variable":"$location"},{"name":"param","content":"<p>Request used to generate the response.</p>","types":["\\WP_REST_Request"],"variable":"$request"}]},"args":3},{"name":"rest_prepare_url_details","file":"wp-includes/rest-api/endpoints/class-wp-rest-url-details-controller.php","type":"filter","doc":{"description":"Filters the URL data for the response.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.9.0"},{"name":"param","content":"<p>The response object.</p>","types":["\\WP_REST_Response"],"variable":"$response"},{"name":"param","content":"<p>The requested URL.</p>","types":["string"],"variable":"$url"},{"name":"param","content":"<p>Request object.</p>","types":["\\WP_REST_Request"],"variable":"$request"},{"name":"param","content":"<p>HTTP response body from the remote URL.</p>","types":["string"],"variable":"$remote_url_response"}]},"args":4},{"name":"rest_url_details_http_request_args","file":"wp-includes/rest-api/endpoints/class-wp-rest-url-details-controller.php","type":"filter","doc":{"description":"Filters the HTTP request args for URL data retrieval.","long_description":"Can be used to adjust response size limit and other WP_Http::request() args.","long_description_html":"<p>Can be used to adjust response size limit and other WP_Http::request() args.</p>","tags":[{"name":"since","content":"5.9.0"},{"name":"param","content":"<p>Arguments used for the HTTP request.</p>","types":["array"],"variable":"$args"},{"name":"param","content":"<p>The attempted URL.</p>","types":["string"],"variable":"$url"}]},"args":2},{"name":"rest_url_details_cache_expiration","file":"wp-includes/rest-api/endpoints/class-wp-rest-url-details-controller.php","type":"filter","doc":{"description":"Filters the cache expiration.","long_description":"Can be used to adjust the time until expiration in seconds for the cache of the data retrieved for the given URL.","long_description_html":"<p>Can be used to adjust the time until expiration in seconds for the cache of the data retrieved for the given URL.</p>","tags":[{"name":"since","content":"5.9.0"},{"name":"param","content":"<p>The time until cache expiration in seconds.</p>","types":["int"],"variable":"$ttl"}]},"args":1},{"name":"rest_prepare_theme","file":"wp-includes/rest-api/endpoints/class-wp-rest-themes-controller.php","type":"filter","doc":{"description":"Filters theme data returned from the REST API.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.0.0"},{"name":"param","content":"<p>The response object.</p>","types":["\\WP_REST_Response"],"variable":"$response"},{"name":"param","content":"<p>Theme object used to create response.</p>","types":["\\WP_Theme"],"variable":"$theme"},{"name":"param","content":"<p>Request object.</p>","types":["\\WP_REST_Request"],"variable":"$request"}]},"args":3},{"name":"rest_themes_collection_params","file":"wp-includes/rest-api/endpoints/class-wp-rest-themes-controller.php","type":"filter","doc":{"description":"Filters REST API collection parameters for the themes controller.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.0.0"},{"name":"param","content":"<p>JSON Schema-formatted collection parameters.</p>","types":["array"],"variable":"$query_params"}]},"args":1},{"name":"rest_prepare_sidebar","file":"wp-includes/rest-api/endpoints/class-wp-rest-sidebars-controller.php","type":"filter","doc":{"description":"Filters the REST API response for a sidebar.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.8.0"},{"name":"param","content":"<p>The response object.</p>","types":["\\WP_REST_Response"],"variable":"$response"},{"name":"param","content":"<p>The raw sidebar data.</p>","types":["array"],"variable":"$raw_sidebar"},{"name":"param","content":"<p>The request object.</p>","types":["\\WP_REST_Request"],"variable":"$request"}]},"args":3},{"name":"rest_prepare_widget_type","file":"wp-includes/rest-api/endpoints/class-wp-rest-widget-types-controller.php","type":"filter","doc":{"description":"Filters the REST API response for a widget type.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.8.0"},{"name":"param","content":"<p>The response object.</p>","types":["\\WP_REST_Response"],"variable":"$response"},{"name":"param","content":"<p>The array of widget data.</p>","types":["array"],"variable":"$widget_type"},{"name":"param","content":"<p>The request object.</p>","types":["\\WP_REST_Request"],"variable":"$request"}]},"args":3},{"name":"rest_prepare_{$this->taxonomy}","file":"wp-includes/rest-api/endpoints/class-wp-rest-menus-controller.php","type":"filter","doc":{"description":"This action is documented in wp-includes/rest-api/endpoints/class-wp-rest-terms-controller.php","long_description":"","long_description_html":"","tags":[]},"args":3},{"name":"rest_comment_query","file":"wp-includes/rest-api/endpoints/class-wp-rest-comments-controller.php","type":"filter","doc":{"description":"Filters WP_Comment_Query arguments when querying comments via the REST API.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.7.0"},{"name":"link","content":"<a href=\"https://developer.wordpress.org/reference/classes/wp_comment_query/\">https://developer.wordpress.org/reference/classes/wp_comment_query/</a>","link":"https://developer.wordpress.org/reference/classes/wp_comment_query/"},{"name":"param","content":"<p>Array of arguments for WP_Comment_Query.</p>","types":["array"],"variable":"$prepared_args"},{"name":"param","content":"<p>The REST API request.</p>","types":["\\WP_REST_Request"],"variable":"$request"}]},"args":2},{"name":"rest_allow_anonymous_comments","file":"wp-includes/rest-api/endpoints/class-wp-rest-comments-controller.php","type":"filter","doc":{"description":"Filters whether comments can be created via the REST API without authentication.","long_description":"Enables creating comments for anonymous users.","long_description_html":"<p>Enables creating comments for anonymous users.</p>","tags":[{"name":"since","content":"4.7.0"},{"name":"param","content":"<p>Whether to allow anonymous comments to be created. Default <code>false</code>.</p>","types":["bool"],"variable":"$allow_anonymous"},{"name":"param","content":"<p>Request used to generate the response.</p>","types":["\\WP_REST_Request"],"variable":"$request"}]},"args":2},{"name":"rest_pre_insert_comment","file":"wp-includes/rest-api/endpoints/class-wp-rest-comments-controller.php","type":"filter","doc":{"description":"Filters a comment before it is inserted via the REST API.","long_description":"Allows modification of the comment right before it is inserted via wp_insert_comment(). Returning a WP_Error value from the filter will short-circuit insertion and allow skipping further processing.","long_description_html":"<p>Allows modification of the comment right before it is inserted via wp_insert_comment(). Returning a WP_Error value from the filter will short-circuit insertion and allow skipping further processing.</p>","tags":[{"name":"since","content":"4.7.0"},{"name":"since","content":"4.8.0","description":"<p><code>$prepared_comment</code> can now be a WP_Error to short-circuit insertion.</p>"},{"name":"param","content":"<p>The prepared comment data for wp_insert_comment().</p>","types":["array","\\WP_Error"],"variable":"$prepared_comment"},{"name":"param","content":"<p>Request used to insert the comment.</p>","types":["\\WP_REST_Request"],"variable":"$request"}]},"args":2},{"name":"rest_comment_trashable","file":"wp-includes/rest-api/endpoints/class-wp-rest-comments-controller.php","type":"filter","doc":{"description":"Filters whether a comment can be trashed via the REST API.","long_description":"Return false to disable trash support for the comment.","long_description_html":"<p>Return false to disable trash support for the comment.</p>","tags":[{"name":"since","content":"4.7.0"},{"name":"param","content":"<p>Whether the comment supports trashing.</p>","types":["bool"],"variable":"$supports_trash"},{"name":"param","content":"<p>The comment object being considered for trashing support.</p>","types":["\\WP_Comment"],"variable":"$comment"}]},"args":2},{"name":"rest_prepare_comment","file":"wp-includes/rest-api/endpoints/class-wp-rest-comments-controller.php","type":"filter","doc":{"description":"Filters a comment returned from the REST API.","long_description":"Allows modification of the comment right before it is returned.","long_description_html":"<p>Allows modification of the comment right before it is returned.</p>","tags":[{"name":"since","content":"4.7.0"},{"name":"param","content":"<p>The response object.</p>","types":["\\WP_REST_Response"],"variable":"$response"},{"name":"param","content":"<p>The original comment object.</p>","types":["\\WP_Comment"],"variable":"$comment"},{"name":"param","content":"<p>Request used to generate the response.</p>","types":["\\WP_REST_Request"],"variable":"$request"}]},"args":3},{"name":"rest_preprocess_comment","file":"wp-includes/rest-api/endpoints/class-wp-rest-comments-controller.php","type":"filter","doc":{"description":"Filters a comment added via the REST API after it is prepared for insertion into the database.","long_description":"Allows modification of the comment right after it is prepared for the database.","long_description_html":"<p>Allows modification of the comment right after it is prepared for the database.</p>","tags":[{"name":"since","content":"4.7.0"},{"name":"param","content":"<p>The prepared comment data for <code>wp_insert_comment</code>.</p>","types":["array"],"variable":"$prepared_comment"},{"name":"param","content":"<p>The current request.</p>","types":["\\WP_REST_Request"],"variable":"$request"}]},"args":2},{"name":"rest_comment_collection_params","file":"wp-includes/rest-api/endpoints/class-wp-rest-comments-controller.php","type":"filter","doc":{"description":"Filters REST API collection parameters for the comments controller.","long_description":"This filter registers the collection parameter, but does not map the collection parameter to an internal WP_Comment_Query parameter. Use the `rest_comment_query` filter to set WP_Comment_Query parameters.","long_description_html":"<p>This filter registers the collection parameter, but does not map the collection parameter to an internal WP_Comment_Query parameter. Use the <code>rest_comment_query</code> filter to set WP_Comment_Query parameters.</p>","tags":[{"name":"since","content":"4.7.0"},{"name":"param","content":"<p>JSON Schema-formatted collection parameters.</p>","types":["array"],"variable":"$query_params"}]},"args":1},{"name":"rest_pre_get_setting","file":"wp-includes/rest-api/endpoints/class-wp-rest-settings-controller.php","type":"filter","doc":{"description":"Filters the value of a setting recognized by the REST API.","long_description":"Allow hijacking the setting value and overriding the built-in behavior by returning a non-null value.  The returned value will be presented as the setting value instead.","long_description_html":"<p>Allow hijacking the setting value and overriding the built-in behavior by returning a non-null value.  The returned value will be presented as the setting value instead.</p>","tags":[{"name":"since","content":"4.7.0"},{"name":"param","content":"<p>Value to use for the requested setting. Can be a scalar matching the registered schema for the setting, or null to follow the default get_option() behavior.</p>","types":["mixed"],"variable":"$result"},{"name":"param","content":"<p>Setting name (as shown in REST API responses).</p>","types":["string"],"variable":"$name"},{"name":"param","content":"<p>Arguments passed to register_setting() for this setting.</p>","types":["array"],"variable":"$args"}]},"args":3},{"name":"rest_pre_update_setting","file":"wp-includes/rest-api/endpoints/class-wp-rest-settings-controller.php","type":"filter","doc":{"description":"Filters whether to preempt a setting value update via the REST API.","long_description":"Allows hijacking the setting update logic and overriding the built-in behavior by returning true.","long_description_html":"<p>Allows hijacking the setting update logic and overriding the built-in behavior by returning true.</p>","tags":[{"name":"since","content":"4.7.0"},{"name":"param","content":"<p>Whether to override the default behavior for updating the value of a setting.</p>","types":["bool"],"variable":"$result"},{"name":"param","content":"<p>Setting name (as shown in REST API responses).</p>","types":["string"],"variable":"$name"},{"name":"param","content":"<p>Updated setting value.</p>","types":["mixed"],"variable":"$value"},{"name":"param","content":"<p>Arguments passed to register_setting() for this setting.</p>","types":["array"],"variable":"$args"}]},"args":4},{"name":"rest_prepare_widget","file":"wp-includes/rest-api/endpoints/class-wp-rest-widgets-controller.php","type":"filter","doc":{"description":"Filters the REST API response for a widget.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.8.0"},{"name":"param","content":"<p>The response object, or WP_Error object on failure.</p>","types":["\\WP_REST_Response","\\WP_Error"],"variable":"$response"},{"name":"param","content":"<p>The registered widget data.</p>","types":["array"],"variable":"$widget"},{"name":"param","content":"<p>Request used to generate the response.</p>","types":["\\WP_REST_Request"],"variable":"$request"}]},"args":3},{"name":"rest_{$this->post_type}_query","aliases":["rest_attachment_query","rest_page_query","rest_post_query"],"file":"wp-includes/rest-api/endpoints/class-wp-rest-posts-controller.php","type":"filter","doc":{"description":"Filters WP_Query arguments when querying posts via the REST API.","long_description":"The dynamic portion of the hook name, `$this->post_type`, refers to the post type slug.\n Possible hook names include:\n\n  - `rest_post_query`\n  - `rest_page_query`\n  - `rest_attachment_query`\n Enables adding extra arguments or setting defaults for a post collection request.","long_description_html":"<p>The dynamic portion of the hook name, <code>$this-&gt;post_type</code>, refers to the post type slug.</p> <p>Possible hook names include:</p> <ul> <li><code>rest_post_query</code></li> <li><code>rest_page_query</code></li> <li><code>rest_attachment_query</code></li> </ul> <p>Enables adding extra arguments or setting defaults for a post collection request.</p>","tags":[{"name":"since","content":"4.7.0"},{"name":"since","content":"5.7.0","description":"<p>Moved after the <code>tax_query</code> query arg is generated.</p>"},{"name":"link","content":"<a href=\"https://developer.wordpress.org/reference/classes/wp_query/\">https://developer.wordpress.org/reference/classes/wp_query/</a>","link":"https://developer.wordpress.org/reference/classes/wp_query/"},{"name":"param","content":"<p>Array of arguments for WP_Query.</p>","types":["array"],"variable":"$args"},{"name":"param","content":"<p>The REST API request.</p>","types":["\\WP_REST_Request"],"variable":"$request"}]},"args":2},{"name":"rest_{$this->post_type}_trashable","aliases":["rest_attachment_trashable","rest_page_trashable","rest_post_trashable"],"file":"wp-includes/rest-api/endpoints/class-wp-rest-posts-controller.php","type":"filter","doc":{"description":"Filters whether a post is trashable.","long_description":"The dynamic portion of the hook name, `$this->post_type`, refers to the post type slug.\n Possible hook names include:\n\n  - `rest_post_trashable`\n  - `rest_page_trashable`\n  - `rest_attachment_trashable`\n Pass false to disable Trash support for the post.","long_description_html":"<p>The dynamic portion of the hook name, <code>$this-&gt;post_type</code>, refers to the post type slug.</p> <p>Possible hook names include:</p> <ul> <li><code>rest_post_trashable</code></li> <li><code>rest_page_trashable</code></li> <li><code>rest_attachment_trashable</code></li> </ul> <p>Pass false to disable Trash support for the post.</p>","tags":[{"name":"since","content":"4.7.0"},{"name":"param","content":"<p>Whether the post type support trashing.</p>","types":["bool"],"variable":"$supports_trash"},{"name":"param","content":"<p>The Post object being considered for trashing support.</p>","types":["\\WP_Post"],"variable":"$post"}]},"args":2},{"name":"rest_query_var-{$key}","file":"wp-includes/rest-api/endpoints/class-wp-rest-posts-controller.php","type":"filter","doc":{"description":"Filters the query_vars used in get_items() for the constructed query.","long_description":"The dynamic portion of the hook name, `$key`, refers to the query_var key.","long_description_html":"<p>The dynamic portion of the hook name, <code>$key</code>, refers to the query_var key.</p>","tags":[{"name":"since","content":"4.7.0"},{"name":"param","content":"<p>The query_var value.</p>","types":["string"],"variable":"$value"}]},"args":1},{"name":"rest_pre_insert_{$this->post_type}","aliases":["rest_pre_insert_attachment","rest_pre_insert_page","rest_pre_insert_post"],"file":"wp-includes/rest-api/endpoints/class-wp-rest-posts-controller.php","type":"filter","doc":{"description":"Filters a post before it is inserted via the REST API.","long_description":"The dynamic portion of the hook name, `$this->post_type`, refers to the post type slug.\n Possible hook names include:\n\n  - `rest_pre_insert_post`\n  - `rest_pre_insert_page`\n  - `rest_pre_insert_attachment`","long_description_html":"<p>The dynamic portion of the hook name, <code>$this-&gt;post_type</code>, refers to the post type slug.</p> <p>Possible hook names include:</p> <ul> <li><code>rest_pre_insert_post</code></li> <li><code>rest_pre_insert_page</code></li> <li><code>rest_pre_insert_attachment</code></li> </ul>","tags":[{"name":"since","content":"4.7.0"},{"name":"param","content":"<p>An object representing a single post prepared for inserting or updating the database.</p>","types":["\\stdClass"],"variable":"$prepared_post"},{"name":"param","content":"<p>Request object.</p>","types":["\\WP_REST_Request"],"variable":"$request"}]},"args":2},{"name":"rest_prepare_{$this->post_type}","aliases":["rest_prepare_attachment","rest_prepare_page","rest_prepare_post"],"file":"wp-includes/rest-api/endpoints/class-wp-rest-posts-controller.php","type":"filter","doc":{"description":"Filters the post data for a REST API response.","long_description":"The dynamic portion of the hook name, `$this->post_type`, refers to the post type slug.\n Possible hook names include:\n\n  - `rest_prepare_post`\n  - `rest_prepare_page`\n  - `rest_prepare_attachment`","long_description_html":"<p>The dynamic portion of the hook name, <code>$this-&gt;post_type</code>, refers to the post type slug.</p> <p>Possible hook names include:</p> <ul> <li><code>rest_prepare_post</code></li> <li><code>rest_prepare_page</code></li> <li><code>rest_prepare_attachment</code></li> </ul>","tags":[{"name":"since","content":"4.7.0"},{"name":"param","content":"<p>The response object.</p>","types":["\\WP_REST_Response"],"variable":"$response"},{"name":"param","content":"<p>Post object.</p>","types":["\\WP_Post"],"variable":"$post"},{"name":"param","content":"<p>Request object.</p>","types":["\\WP_REST_Request"],"variable":"$request"}]},"args":3},{"name":"rest_{$this->post_type}_item_schema","aliases":["rest_attachment_item_schema","rest_page_item_schema","rest_post_item_schema"],"file":"wp-includes/rest-api/endpoints/class-wp-rest-posts-controller.php","type":"filter","doc":{"description":"Filters the post's schema.","long_description":"The dynamic portion of the filter, `$this->post_type`, refers to the post type slug for the controller.\n Possible hook names include:\n\n  - `rest_post_item_schema`\n  - `rest_page_item_schema`\n  - `rest_attachment_item_schema`","long_description_html":"<p>The dynamic portion of the filter, <code>$this-&gt;post_type</code>, refers to the post type slug for the controller.</p> <p>Possible hook names include:</p> <ul> <li><code>rest_post_item_schema</code></li> <li><code>rest_page_item_schema</code></li> <li><code>rest_attachment_item_schema</code></li> </ul>","tags":[{"name":"since","content":"5.4.0"},{"name":"param","content":"<p>Item schema data.</p>","types":["array"],"variable":"$schema"}]},"args":1},{"name":"rest_{$this->post_type}_collection_params","file":"wp-includes/rest-api/endpoints/class-wp-rest-posts-controller.php","type":"filter","doc":{"description":"Filters collection parameters for the posts controller.","long_description":"The dynamic part of the filter `$this->post_type` refers to the post type slug for the controller.\n This filter registers the collection parameter, but does not map the collection parameter to an internal WP_Query parameter. Use the `rest_{$this->post_type}_query` filter to set WP_Query parameters.","long_description_html":"<p>The dynamic part of the filter <code>$this-&gt;post_type</code> refers to the post type slug for the controller.</p> <p>This filter registers the collection parameter, but does not map the collection parameter to an internal WP<em>Query parameter. Use the `rest</em>{$this-&gt;post_type}_query` filter to set WP_Query parameters.</p>","tags":[{"name":"since","content":"4.7.0"},{"name":"param","content":"<p>JSON Schema-formatted collection parameters.</p>","types":["array"],"variable":"$query_params"},{"name":"param","content":"<p>Post type object.</p>","types":["\\WP_Post_Type"],"variable":"$post_type"}]},"args":2},{"name":"rest_prepare_autosave","file":"wp-includes/rest-api/endpoints/class-wp-rest-autosaves-controller.php","type":"filter","doc":{"description":"Filters a revision returned from the REST API.","long_description":"Allows modification of the revision right before it is returned.","long_description_html":"<p>Allows modification of the revision right before it is returned.</p>","tags":[{"name":"since","content":"5.0.0"},{"name":"param","content":"<p>The response object.</p>","types":["\\WP_REST_Response"],"variable":"$response"},{"name":"param","content":"<p>The original revision object.</p>","types":["\\WP_Post"],"variable":"$post"},{"name":"param","content":"<p>Request used to generate the response.</p>","types":["\\WP_REST_Request"],"variable":"$request"}]},"args":3},{"name":"rest_user_query","file":"wp-includes/rest-api/endpoints/class-wp-rest-users-controller.php","type":"filter","doc":{"description":"Filters WP_User_Query arguments when querying users via the REST API.","long_description":"","long_description_html":"","tags":[{"name":"link","content":"<a href=\"https://developer.wordpress.org/reference/classes/wp_user_query/\">https://developer.wordpress.org/reference/classes/wp_user_query/</a>","link":"https://developer.wordpress.org/reference/classes/wp_user_query/"},{"name":"since","content":"4.7.0"},{"name":"param","content":"<p>Array of arguments for WP_User_Query.</p>","types":["array"],"variable":"$prepared_args"},{"name":"param","content":"<p>The REST API request.</p>","types":["\\WP_REST_Request"],"variable":"$request"}]},"args":2},{"name":"rest_prepare_user","file":"wp-includes/rest-api/endpoints/class-wp-rest-users-controller.php","type":"filter","doc":{"description":"Filters user data returned from the REST API.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.7.0"},{"name":"param","content":"<p>The response object.</p>","types":["\\WP_REST_Response"],"variable":"$response"},{"name":"param","content":"<p>User object used to create response.</p>","types":["\\WP_User"],"variable":"$user"},{"name":"param","content":"<p>Request object.</p>","types":["\\WP_REST_Request"],"variable":"$request"}]},"args":3},{"name":"rest_pre_insert_user","file":"wp-includes/rest-api/endpoints/class-wp-rest-users-controller.php","type":"filter","doc":{"description":"Filters user data before insertion via the REST API.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.7.0"},{"name":"param","content":"<p>User object.</p>","types":["object"],"variable":"$prepared_user"},{"name":"param","content":"<p>Request object.</p>","types":["\\WP_REST_Request"],"variable":"$request"}]},"args":2},{"name":"rest_user_collection_params","file":"wp-includes/rest-api/endpoints/class-wp-rest-users-controller.php","type":"filter","doc":{"description":"Filters REST API collection parameters for the users controller.","long_description":"This filter registers the collection parameter, but does not map the collection parameter to an internal WP_User_Query parameter.  Use the `rest_user_query` filter to set WP_User_Query arguments.","long_description_html":"<p>This filter registers the collection parameter, but does not map the collection parameter to an internal WP_User_Query parameter.  Use the <code>rest_user_query</code> filter to set WP_User_Query arguments.</p>","tags":[{"name":"since","content":"4.7.0"},{"name":"param","content":"<p>JSON Schema-formatted collection parameters.</p>","types":["array"],"variable":"$query_params"}]},"args":1},{"name":"site_health_test_rest_capability_{$check}","file":"wp-includes/rest-api/endpoints/class-wp-rest-site-health-controller.php","type":"filter","doc":{"description":"Filters the capability needed to run a given Site Health check.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.6.0"},{"name":"param","content":"<p>The default capability required for this check.</p>","types":["string"],"variable":"$default_capability"},{"name":"param","content":"<p>The Site Health check being performed.</p>","types":["string"],"variable":"$check"}]},"args":2},{"name":"rest_prepare_block_type","file":"wp-includes/rest-api/endpoints/class-wp-rest-block-types-controller.php","type":"filter","doc":{"description":"Filters a block type returned from the REST API.","long_description":"Allows modification of the block type data right before it is returned.","long_description_html":"<p>Allows modification of the block type data right before it is returned.</p>","tags":[{"name":"since","content":"5.5.0"},{"name":"param","content":"<p>The response object.</p>","types":["\\WP_REST_Response"],"variable":"$response"},{"name":"param","content":"<p>The original block type object.</p>","types":["\\WP_Block_Type"],"variable":"$block_type"},{"name":"param","content":"<p>Request used to generate the response.</p>","types":["\\WP_REST_Request"],"variable":"$request"}]},"args":3},{"name":"rest_prepare_block_pattern","file":"wp-includes/rest-api/endpoints/class-wp-rest-pattern-directory-controller.php","type":"filter","doc":{"description":"Filters the REST API response for a block pattern.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.8.0"},{"name":"param","content":"<p>The response object.</p>","types":["\\WP_REST_Response"],"variable":"$response"},{"name":"param","content":"<p>The unprepared block pattern.</p>","types":["object"],"variable":"$raw_pattern"},{"name":"param","content":"<p>The request object.</p>","types":["\\WP_REST_Request"],"variable":"$request"}]},"args":3},{"name":"rest_pattern_directory_collection_params","file":"wp-includes/rest-api/endpoints/class-wp-rest-pattern-directory-controller.php","type":"filter","doc":{"description":"Filter collection parameters for the block pattern directory controller.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.8.0"},{"name":"param","content":"<p>JSON Schema-formatted collection parameters.</p>","types":["array"],"variable":"$query_params"}]},"args":1},{"name":"rest_{$this->taxonomy}_query","aliases":["rest_category_query","rest_post_tag_query"],"file":"wp-includes/rest-api/endpoints/class-wp-rest-terms-controller.php","type":"filter","doc":{"description":"Filters get_terms() arguments when querying terms via the REST API.","long_description":"The dynamic portion of the hook name, `$this->taxonomy`, refers to the taxonomy slug.\n Possible hook names include:\n\n  - `rest_category_query`\n  - `rest_post_tag_query`\n Enables adding extra arguments or setting defaults for a terms collection request.","long_description_html":"<p>The dynamic portion of the hook name, <code>$this-&gt;taxonomy</code>, refers to the taxonomy slug.</p> <p>Possible hook names include:</p> <ul> <li><code>rest_category_query</code></li> <li><code>rest_post_tag_query</code></li> </ul> <p>Enables adding extra arguments or setting defaults for a terms collection request.</p>","tags":[{"name":"since","content":"4.7.0"},{"name":"link","content":"<a href=\"https://developer.wordpress.org/reference/functions/get_terms/\">https://developer.wordpress.org/reference/functions/get_terms/</a>","link":"https://developer.wordpress.org/reference/functions/get_terms/"},{"name":"param","content":"<p>Array of arguments for get_terms().</p>","types":["array"],"variable":"$prepared_args"},{"name":"param","content":"<p>The REST API request.</p>","types":["\\WP_REST_Request"],"variable":"$request"}]},"args":2},{"name":"rest_pre_insert_{$this->taxonomy}","aliases":["rest_pre_insert_category","rest_pre_insert_post_tag"],"file":"wp-includes/rest-api/endpoints/class-wp-rest-terms-controller.php","type":"filter","doc":{"description":"Filters term data before inserting term via the REST API.","long_description":"The dynamic portion of the hook name, `$this->taxonomy`, refers to the taxonomy slug.\n Possible hook names include:\n\n  - `rest_pre_insert_category`\n  - `rest_pre_insert_post_tag`","long_description_html":"<p>The dynamic portion of the hook name, <code>$this-&gt;taxonomy</code>, refers to the taxonomy slug.</p> <p>Possible hook names include:</p> <ul> <li><code>rest_pre_insert_category</code></li> <li><code>rest_pre_insert_post_tag</code></li> </ul>","tags":[{"name":"since","content":"4.7.0"},{"name":"param","content":"<p>Term object.</p>","types":["object"],"variable":"$prepared_term"},{"name":"param","content":"<p>Request object.</p>","types":["\\WP_REST_Request"],"variable":"$request"}]},"args":2},{"name":"rest_prepare_{$this->taxonomy}","aliases":["rest_prepare_category","rest_prepare_post_tag"],"file":"wp-includes/rest-api/endpoints/class-wp-rest-terms-controller.php","type":"filter","doc":{"description":"Filters the term data for a REST API response.","long_description":"The dynamic portion of the hook name, `$this->taxonomy`, refers to the taxonomy slug.\n Possible hook names include:\n\n  - `rest_prepare_category`\n  - `rest_prepare_post_tag`\n Allows modification of the term data right before it is returned.","long_description_html":"<p>The dynamic portion of the hook name, <code>$this-&gt;taxonomy</code>, refers to the taxonomy slug.</p> <p>Possible hook names include:</p> <ul> <li><code>rest_prepare_category</code></li> <li><code>rest_prepare_post_tag</code></li> </ul> <p>Allows modification of the term data right before it is returned.</p>","tags":[{"name":"since","content":"4.7.0"},{"name":"param","content":"<p>The response object.</p>","types":["\\WP_REST_Response"],"variable":"$response"},{"name":"param","content":"<p>The original term object.</p>","types":["\\WP_Term"],"variable":"$item"},{"name":"param","content":"<p>Request used to generate the response.</p>","types":["\\WP_REST_Request"],"variable":"$request"}]},"args":3},{"name":"rest_{$this->taxonomy}_collection_params","file":"wp-includes/rest-api/endpoints/class-wp-rest-terms-controller.php","type":"filter","doc":{"description":"Filters collection parameters for the terms controller.","long_description":"The dynamic part of the filter `$this->taxonomy` refers to the taxonomy slug for the controller.\n This filter registers the collection parameter, but does not map the collection parameter to an internal WP_Term_Query parameter.  Use the `rest_{$this->taxonomy}_query` filter to set WP_Term_Query parameters.","long_description_html":"<p>The dynamic part of the filter <code>$this-&gt;taxonomy</code> refers to the taxonomy slug for the controller.</p> <p>This filter registers the collection parameter, but does not map the collection parameter to an internal WP_Term<em>Query parameter.  Use the `rest</em>{$this-&gt;taxonomy}_query` filter to set WP_Term_Query parameters.</p>","tags":[{"name":"since","content":"4.7.0"},{"name":"param","content":"<p>JSON Schema-formatted collection parameters.</p>","types":["array"],"variable":"$query_params"},{"name":"param","content":"<p>Taxonomy object.</p>","types":["\\WP_Taxonomy"],"variable":"$taxonomy"}]},"args":2},{"name":"rest_request_parameter_order","file":"wp-includes/rest-api/class-wp-rest-request.php","type":"filter","doc":{"description":"Filters the parameter priority order for a REST API request.","long_description":"The order affects which parameters are checked when using WP_REST_Request::get_param() and family. This acts similarly to PHP's `request_order` setting.","long_description_html":"<p>The order affects which parameters are checked when using WP_REST_Request::get_param() and family. This acts similarly to PHP's <code>request_order</code> setting.</p>","tags":[{"name":"since","content":"4.4.0"},{"name":"param","content":"<p>Array of types to check, in order of priority.</p>","types":["string[]"],"variable":"$order"},{"name":"param","content":"<p>The request object.</p>","types":["\\WP_REST_Request"],"variable":"$request"}]},"args":2},{"name":"rest_request_from_url","file":"wp-includes/rest-api/class-wp-rest-request.php","type":"filter","doc":{"description":"Filters the REST API request generated from a URL.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.5.0"},{"name":"param","content":"<p>Generated request object, or false if URL could not be parsed.</p>","types":["\\WP_REST_Request","false"],"variable":"$request"},{"name":"param","content":"<p>URL the request was generated from.</p>","types":["string"],"variable":"$url"}]},"args":2},{"name":"rest_post_search_query","file":"wp-includes/rest-api/search/class-wp-rest-post-search-handler.php","type":"filter","doc":{"description":"Filters the query arguments for a REST API post search request.","long_description":"Enables adding extra arguments or setting defaults for a post search request.","long_description_html":"<p>Enables adding extra arguments or setting defaults for a post search request.</p>","tags":[{"name":"since","content":"5.1.0"},{"name":"param","content":"<p>Key value array of query var to query value.</p>","types":["array"],"variable":"$query_args"},{"name":"param","content":"<p>The request used.</p>","types":["\\WP_REST_Request"],"variable":"$request"}]},"args":2},{"name":"rest_term_search_query","file":"wp-includes/rest-api/search/class-wp-rest-term-search-handler.php","type":"filter","doc":{"description":"Filters the query arguments for a REST API term search request.","long_description":"Enables adding extra arguments or setting defaults for a term search request.","long_description_html":"<p>Enables adding extra arguments or setting defaults for a term search request.</p>","tags":[{"name":"since","content":"5.6.0"},{"name":"param","content":"<p>Key value array of query var to query value.</p>","types":["array"],"variable":"$query_args"},{"name":"param","content":"<p>The request used.</p>","types":["\\WP_REST_Request"],"variable":"$request"}]},"args":2},{"name":"rest_post_format_search_query","file":"wp-includes/rest-api/search/class-wp-rest-post-format-search-handler.php","type":"filter","doc":{"description":"Filters the query arguments for a REST API post format search request.","long_description":"Enables adding extra arguments or setting defaults for a post format search request.","long_description_html":"<p>Enables adding extra arguments or setting defaults for a post format search request.</p>","tags":[{"name":"since","content":"5.6.0"},{"name":"param","content":"<p>Key value array of query var to query value.</p>","types":["array"],"variable":"$query_args"},{"name":"param","content":"<p>The request used.</p>","types":["\\WP_REST_Request"],"variable":"$request"}]},"args":2},{"name":"rest_response_link_curies","file":"wp-includes/rest-api/class-wp-rest-response.php","type":"filter","doc":{"description":"Filters extra CURIEs available on REST API responses.","long_description":"CURIEs allow a shortened version of URI relations. This allows a more usable form for custom relations than using the full URI. These work similarly to how XML namespaces work.\n Registered CURIES need to specify a name and URI template. This will automatically transform URI relations into their shortened version. The shortened relation follows the format `{name}:{rel}`. `{rel}` in the URI template will be replaced with the `{rel}` part of the shortened relation.\n For example, a CURIE with name `example` and URI template `http://w.org/{rel}` would transform a `http://w.org/term` relation into `example:term`.\n Well-behaved clients should expand and normalize these back to their full URI relation, however some naive clients may not resolve these correctly, so adding new CURIEs may break backward compatibility.","long_description_html":"<p>CURIEs allow a shortened version of URI relations. This allows a more usable form for custom relations than using the full URI. These work similarly to how XML namespaces work.</p> <p>Registered CURIES need to specify a name and URI template. This will automatically transform URI relations into their shortened version. The shortened relation follows the format <code>{name}:{rel}</code>. <code>{rel}</code> in the URI template will be replaced with the <code>{rel}</code> part of the shortened relation.</p> <p>For example, a CURIE with name <code>example</code> and URI template <code>http://w.org/{rel}</code> would transform a <code>http://w.org/term</code> relation into <code>example:term</code>.</p> <p>Well-behaved clients should expand and normalize these back to their full URI relation, however some naive clients may not resolve these correctly, so adding new CURIEs may break backward compatibility.</p>","tags":[{"name":"since","content":"4.5.0"},{"name":"param","content":"<p>Additional CURIEs to register with the REST API.</p>","types":["array"],"variable":"$additional"}]},"args":1},{"name":"has_post_thumbnail","file":"wp-includes/post-thumbnail-template.php","type":"filter","doc":{"description":"Filters whether a post has a post thumbnail.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.1.0"},{"name":"param","content":"<p>true if the post has a post thumbnail, otherwise false.</p>","types":["bool"],"variable":"$has_thumbnail"},{"name":"param","content":"<p>Post ID or WP_Post object. Default is global <code>$post</code>.</p>","types":["int","\\WP_Post","null"],"variable":"$post"},{"name":"param","content":"<p>Post thumbnail ID or false if the post does not exist.</p>","types":["int","false"],"variable":"$thumbnail_id"}]},"args":3},{"name":"post_thumbnail_id","file":"wp-includes/post-thumbnail-template.php","type":"filter","doc":{"description":"Filters the post thumbnail ID.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.9.0"},{"name":"param","content":"<p>Post thumbnail ID or false if the post does not exist.</p>","types":["int","false"],"variable":"$thumbnail_id"},{"name":"param","content":"<p>Post ID or WP_Post object. Default is global <code>$post</code>.</p>","types":["int","\\WP_Post","null"],"variable":"$post"}]},"args":2},{"name":"post_thumbnail_size","file":"wp-includes/post-thumbnail-template.php","type":"filter","doc":{"description":"Filters the post thumbnail size.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.9.0"},{"name":"since","content":"4.9.0","description":"<p>Added the <code>$post_id</code> parameter.</p>"},{"name":"param","content":"<p>Requested image size. Can be any registered image size name, or an array of width and height values in pixels (in that order).</p>","types":["string","int[]"],"variable":"$size"},{"name":"param","content":"<p>The post ID.</p>","types":["int"],"variable":"$post_id"}]},"args":2},{"name":"post_thumbnail_html","file":"wp-includes/post-thumbnail-template.php","type":"filter","doc":{"description":"Filters the post thumbnail HTML.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.9.0"},{"name":"param","content":"<p>The post thumbnail HTML.</p>","types":["string"],"variable":"$html"},{"name":"param","content":"<p>The post ID.</p>","types":["int"],"variable":"$post_id"},{"name":"param","content":"<p>The post thumbnail ID, or 0 if there isn't one.</p>","types":["int"],"variable":"$post_thumbnail_id"},{"name":"param","content":"<p>Requested image size. Can be any registered image size name, or an array of width and height values in pixels (in that order).</p>","types":["string","int[]"],"variable":"$size"},{"name":"param","content":"<p>Query string or array of attributes.</p>","types":["string","array"],"variable":"$attr"}]},"args":5},{"name":"post_thumbnail_url","file":"wp-includes/post-thumbnail-template.php","type":"filter","doc":{"description":"Filters the post thumbnail URL.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.9.0"},{"name":"param","content":"<p>Post thumbnail URL or false if the post does not exist.</p>","types":["string","false"],"variable":"$thumbnail_url"},{"name":"param","content":"<p>Post ID or WP_Post object. Default is global <code>$post</code>.</p>","types":["int","\\WP_Post","null"],"variable":"$post"},{"name":"param","content":"<p>Registered image size to retrieve the source for or a flat array of height and width dimensions. Default 'post-thumbnail'.</p>","types":["string","int[]"],"variable":"$size"}]},"args":3},{"name":"the_post_thumbnail_caption","file":"wp-includes/post-thumbnail-template.php","type":"filter","doc":{"description":"Filters the displayed post thumbnail caption.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.6.0"},{"name":"param","content":"<p>Caption for the given attachment.</p>","types":["string"],"variable":"$caption"}]},"args":1},{"name":"user_search_columns","file":"wp-includes/class-wp-user-query.php","type":"filter","doc":{"description":"Filters the columns to search in a WP_User_Query search.","long_description":"The default columns depend on the search term, and include 'ID', 'user_login', 'user_email', 'user_url', 'user_nicename', and 'display_name'.","long_description_html":"<p>The default columns depend on the search term, and include 'ID', 'user_login', 'user_email', 'user_url', 'user_nicename', and 'display_name'.</p>","tags":[{"name":"since","content":"3.6.0"},{"name":"param","content":"<p>Array of column names to be searched.</p>","types":["string[]"],"variable":"$search_columns"},{"name":"param","content":"<p>Text being searched.</p>","types":["string"],"variable":"$search"},{"name":"param","content":"<p>The current WP_User_Query instance.</p>","types":["\\WP_User_Query"],"variable":"$query"}]},"args":3},{"name":"users_pre_query","file":"wp-includes/class-wp-user-query.php","type":"filter","doc":{"description":"Filters the users array before the query takes place.","long_description":"Return a non-null value to bypass WordPress' default user queries.\n Filtering functions that require pagination information are encouraged to set the `total_users` property of the WP_User_Query object, passed to the filter by reference. If WP_User_Query does not perform a database query, it will not have enough information to generate these values itself.","long_description_html":"<p>Return a non-null value to bypass WordPress' default user queries.</p> <p>Filtering functions that require pagination information are encouraged to set the <code>total_users</code> property of the WP_User_Query object, passed to the filter by reference. If WP_User_Query does not perform a database query, it will not have enough information to generate these values itself.</p>","tags":[{"name":"since","content":"5.1.0"},{"name":"param","content":"<p>Return an array of user data to short-circuit WP's user query or null to allow WP to run its normal queries.</p>","types":["array","null"],"variable":"$results"},{"name":"param","content":"<p>The WP_User_Query instance (passed by reference).</p>","types":["\\WP_User_Query"],"variable":"$query"}]},"args":1},{"name":"found_users_query","file":"wp-includes/class-wp-user-query.php","type":"filter","doc":{"description":"Filters SELECT FOUND_ROWS() query for the current WP_User_Query instance.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.2.0"},{"name":"since","content":"5.1.0","description":"<p>Added the <code>$this</code> parameter.</p>"},{"name":"global","content":"wpdb $wpdb WordPress database abstraction object."},{"name":"param","content":"<p>The SELECT FOUND_ROWS() query for the current WP_User_Query.</p>","types":["string"],"variable":"$sql"},{"name":"param","content":"<p>The current WP_User_Query instance.</p>","types":["\\WP_User_Query"],"variable":"$query"}]},"args":2},{"name":"wp_nav_menu_args","file":"wp-includes/nav-menu-template.php","type":"filter","doc":{"description":"Filters the arguments used to display a navigation menu.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.0.0"},{"name":"see","content":"","refers":"wp_nav_menu()"},{"name":"param","content":"<p>Array of wp_nav_menu() arguments.</p>","types":["array"],"variable":"$args"}]},"args":1},{"name":"pre_wp_nav_menu","file":"wp-includes/nav-menu-template.php","type":"filter","doc":{"description":"Filters whether to short-circuit the wp_nav_menu() output.","long_description":"Returning a non-null value from the filter will short-circuit wp_nav_menu(), echoing that value if $args->echo is true, returning that value otherwise.","long_description_html":"<p>Returning a non-null value from the filter will short-circuit wp_nav_menu(), echoing that value if $args-&gt;echo is true, returning that value otherwise.</p>","tags":[{"name":"since","content":"3.9.0"},{"name":"see","content":"","refers":"wp_nav_menu()"},{"name":"param","content":"<p>Nav menu output to short-circuit with. Default null.</p>","types":["string","null"],"variable":"$output"},{"name":"param","content":"<p>An object containing wp_nav_menu() arguments.</p>","types":["\\stdClass"],"variable":"$args"}]},"args":2},{"name":"wp_nav_menu_container_allowedtags","file":"wp-includes/nav-menu-template.php","type":"filter","doc":{"description":"Filters the list of HTML tags that are valid for use as menu containers.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.0.0"},{"name":"param","content":"<p>The acceptable HTML tags for use as menu containers. Default is array containing 'div' and 'nav'.</p>","types":["string[]"],"variable":"$tags"}]},"args":1},{"name":"wp_nav_menu_objects","file":"wp-includes/nav-menu-template.php","type":"filter","doc":{"description":"Filters the sorted list of menu item objects before generating the menu's HTML.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.1.0"},{"name":"param","content":"<p>The menu items, sorted by each menu item's menu order.</p>","types":["array"],"variable":"$sorted_menu_items"},{"name":"param","content":"<p>An object containing wp_nav_menu() arguments.</p>","types":["\\stdClass"],"variable":"$args"}]},"args":2},{"name":"wp_nav_menu_items","file":"wp-includes/nav-menu-template.php","type":"filter","doc":{"description":"Filters the HTML list content for navigation menus.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.0.0"},{"name":"see","content":"","refers":"wp_nav_menu()"},{"name":"param","content":"<p>The HTML list content for the menu items.</p>","types":["string"],"variable":"$items"},{"name":"param","content":"<p>An object containing wp_nav_menu() arguments.</p>","types":["\\stdClass"],"variable":"$args"}]},"args":2},{"name":"wp_nav_menu_{$menu->slug}_items","file":"wp-includes/nav-menu-template.php","type":"filter","doc":{"description":"Filters the HTML list content for a specific navigation menu.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.0.0"},{"name":"see","content":"","refers":"wp_nav_menu()"},{"name":"param","content":"<p>The HTML list content for the menu items.</p>","types":["string"],"variable":"$items"},{"name":"param","content":"<p>An object containing wp_nav_menu() arguments.</p>","types":["\\stdClass"],"variable":"$args"}]},"args":2},{"name":"wp_nav_menu","file":"wp-includes/nav-menu-template.php","type":"filter","doc":{"description":"Filters the HTML content for navigation menus.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.0.0"},{"name":"see","content":"","refers":"wp_nav_menu()"},{"name":"param","content":"<p>The HTML content for the navigation menu.</p>","types":["string"],"variable":"$nav_menu"},{"name":"param","content":"<p>An object containing wp_nav_menu() arguments.</p>","types":["\\stdClass"],"variable":"$args"}]},"args":2},{"name":"role_has_cap","file":"wp-includes/class-wp-role.php","type":"filter","doc":{"description":"Filters which capabilities a role has.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.0.0"},{"name":"param","content":"<p>Array of key/value pairs where keys represent a capability name and boolean values represent whether the role has that capability.</p>","types":["bool[]"],"variable":"$capabilities"},{"name":"param","content":"<p>Capability name.</p>","types":["string"],"variable":"$cap"},{"name":"param","content":"<p>Role name.</p>","types":["string"],"variable":"$name"}]},"args":3},{"name":"old_slug_redirect_post_id","file":"wp-includes/query.php","type":"filter","doc":{"description":"Filters the old slug redirect post ID.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.9.3"},{"name":"param","content":"<p>The redirect post ID.</p>","types":["int"],"variable":"$id"}]},"args":1},{"name":"old_slug_redirect_url","file":"wp-includes/query.php","type":"filter","doc":{"description":"Filters the old slug redirect URL.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.4.0"},{"name":"param","content":"<p>The redirect URL.</p>","types":["string"],"variable":"$link"}]},"args":1},{"name":"graceful_fail","file":"wp-includes/ms-deprecated.php","type":"filter","doc":{"description":"","long_description":"","long_description_html":"","tags":[]},"args":1},{"name":"graceful_fail_template","file":"wp-includes/ms-deprecated.php","type":"filter","doc":{"description":"","long_description":"","long_description_html":"","tags":[]},"args":1},{"name":"add_{$meta_type}_metadata","aliases":["add_comment_metadata","add_post_metadata","add_term_metadata","add_user_metadata"],"file":"wp-includes/meta.php","type":"filter","doc":{"description":"Short-circuits adding metadata of a specific type.","long_description":"The dynamic portion of the hook name, `$meta_type`, refers to the meta object type (post, comment, term, user, or any other type with an associated meta table). Returning a non-null value will effectively short-circuit the function.\n Possible hook names include:\n\n  - `add_post_metadata`\n  - `add_comment_metadata`\n  - `add_term_metadata`\n  - `add_user_metadata`","long_description_html":"<p>The dynamic portion of the hook name, <code>$meta_type</code>, refers to the meta object type (post, comment, term, user, or any other type with an associated meta table). Returning a non-null value will effectively short-circuit the function.</p> <p>Possible hook names include:</p> <ul> <li><code>add_post_metadata</code></li> <li><code>add_comment_metadata</code></li> <li><code>add_term_metadata</code></li> <li><code>add_user_metadata</code></li> </ul>","tags":[{"name":"since","content":"3.1.0"},{"name":"param","content":"<p>Whether to allow adding metadata for the given type.</p>","types":["null","bool"],"variable":"$check"},{"name":"param","content":"<p>ID of the object metadata is for.</p>","types":["int"],"variable":"$object_id"},{"name":"param","content":"<p>Metadata key.</p>","types":["string"],"variable":"$meta_key"},{"name":"param","content":"<p>Metadata value. Must be serializable if non-scalar.</p>","types":["mixed"],"variable":"$meta_value"},{"name":"param","content":"<p>Whether the specified meta key should be unique for the object.</p>","types":["bool"],"variable":"$unique"}]},"args":5},{"name":"update_{$meta_type}_metadata","aliases":["update_comment_metadata","update_post_metadata","update_term_metadata","update_user_metadata"],"file":"wp-includes/meta.php","type":"filter","doc":{"description":"Short-circuits updating metadata of a specific type.","long_description":"The dynamic portion of the hook name, `$meta_type`, refers to the meta object type (post, comment, term, user, or any other type with an associated meta table). Returning a non-null value will effectively short-circuit the function.\n Possible hook names include:\n\n  - `update_post_metadata`\n  - `update_comment_metadata`\n  - `update_term_metadata`\n  - `update_user_metadata`","long_description_html":"<p>The dynamic portion of the hook name, <code>$meta_type</code>, refers to the meta object type (post, comment, term, user, or any other type with an associated meta table). Returning a non-null value will effectively short-circuit the function.</p> <p>Possible hook names include:</p> <ul> <li><code>update_post_metadata</code></li> <li><code>update_comment_metadata</code></li> <li><code>update_term_metadata</code></li> <li><code>update_user_metadata</code></li> </ul>","tags":[{"name":"since","content":"3.1.0"},{"name":"param","content":"<p>Whether to allow updating metadata for the given type.</p>","types":["null","bool"],"variable":"$check"},{"name":"param","content":"<p>ID of the object metadata is for.</p>","types":["int"],"variable":"$object_id"},{"name":"param","content":"<p>Metadata key.</p>","types":["string"],"variable":"$meta_key"},{"name":"param","content":"<p>Metadata value. Must be serializable if non-scalar.</p>","types":["mixed"],"variable":"$meta_value"},{"name":"param","content":"<p>Optional. Previous value to check before updating. If specified, only update existing metadata entries with this value. Otherwise, update all entries.</p>","types":["mixed"],"variable":"$prev_value"}]},"args":5},{"name":"delete_{$meta_type}_metadata","aliases":["delete_comment_metadata","delete_post_metadata","delete_term_metadata","delete_user_metadata"],"file":"wp-includes/meta.php","type":"filter","doc":{"description":"Short-circuits deleting metadata of a specific type.","long_description":"The dynamic portion of the hook name, `$meta_type`, refers to the meta object type (post, comment, term, user, or any other type with an associated meta table). Returning a non-null value will effectively short-circuit the function.\n Possible hook names include:\n\n  - `delete_post_metadata`\n  - `delete_comment_metadata`\n  - `delete_term_metadata`\n  - `delete_user_metadata`","long_description_html":"<p>The dynamic portion of the hook name, <code>$meta_type</code>, refers to the meta object type (post, comment, term, user, or any other type with an associated meta table). Returning a non-null value will effectively short-circuit the function.</p> <p>Possible hook names include:</p> <ul> <li><code>delete_post_metadata</code></li> <li><code>delete_comment_metadata</code></li> <li><code>delete_term_metadata</code></li> <li><code>delete_user_metadata</code></li> </ul>","tags":[{"name":"since","content":"3.1.0"},{"name":"param","content":"<p>Whether to allow metadata deletion of the given type.</p>","types":["null","bool"],"variable":"$delete"},{"name":"param","content":"<p>ID of the object metadata is for.</p>","types":["int"],"variable":"$object_id"},{"name":"param","content":"<p>Metadata key.</p>","types":["string"],"variable":"$meta_key"},{"name":"param","content":"<p>Metadata value. Must be serializable if non-scalar.</p>","types":["mixed"],"variable":"$meta_value"},{"name":"param","content":"<p>Whether to delete the matching metadata entries for all objects, ignoring the specified $object_id. Default false.</p>","types":["bool"],"variable":"$delete_all"}]},"args":5},{"name":"get_{$meta_type}_metadata","file":"wp-includes/meta.php","type":"filter","doc":{"description":"Short-circuits the return value of a meta field.","long_description":"The dynamic portion of the hook name, `$meta_type`, refers to the meta object type (post, comment, term, user, or any other type with an associated meta table). Returning a non-null value will effectively short-circuit the function.\n Possible filter names include:\n\n  - `get_post_metadata`\n  - `get_comment_metadata`\n  - `get_term_metadata`\n  - `get_user_metadata`","long_description_html":"<p>The dynamic portion of the hook name, <code>$meta_type</code>, refers to the meta object type (post, comment, term, user, or any other type with an associated meta table). Returning a non-null value will effectively short-circuit the function.</p> <p>Possible filter names include:</p> <ul> <li><code>get_post_metadata</code></li> <li><code>get_comment_metadata</code></li> <li><code>get_term_metadata</code></li> <li><code>get_user_metadata</code></li> </ul>","tags":[{"name":"since","content":"3.1.0"},{"name":"since","content":"5.5.0","description":"<p>Added the <code>$meta_type</code> parameter.</p>"},{"name":"param","content":"<p>The value to return, either a single metadata value or an array of values depending on the value of <code>$single</code>. Default null.</p>","types":["mixed"],"variable":"$value"},{"name":"param","content":"<p>ID of the object metadata is for.</p>","types":["int"],"variable":"$object_id"},{"name":"param","content":"<p>Metadata key.</p>","types":["string"],"variable":"$meta_key"},{"name":"param","content":"<p>Whether to return only the first value of the specified <code>$meta_key</code>.</p>","types":["bool"],"variable":"$single"},{"name":"param","content":"<p>Type of object metadata is for. Accepts 'post', 'comment', 'term', 'user', or any other object type with an associated meta table.</p>","types":["string"],"variable":"$meta_type"}]},"args":5},{"name":"default_{$meta_type}_metadata","file":"wp-includes/meta.php","type":"filter","doc":{"description":"Filters the default metadata value for a specified meta key and object.","long_description":"The dynamic portion of the hook name, `$meta_type`, refers to the meta object type (post, comment, term, user, or any other type with an associated meta table).\n Possible filter names include:\n\n  - `default_post_metadata`\n  - `default_comment_metadata`\n  - `default_term_metadata`\n  - `default_user_metadata`","long_description_html":"<p>The dynamic portion of the hook name, <code>$meta_type</code>, refers to the meta object type (post, comment, term, user, or any other type with an associated meta table).</p> <p>Possible filter names include:</p> <ul> <li><code>default_post_metadata</code></li> <li><code>default_comment_metadata</code></li> <li><code>default_term_metadata</code></li> <li><code>default_user_metadata</code></li> </ul>","tags":[{"name":"since","content":"5.5.0"},{"name":"param","content":"<p>The value to return, either a single metadata value or an array of values depending on the value of <code>$single</code>.</p>","types":["mixed"],"variable":"$value"},{"name":"param","content":"<p>ID of the object metadata is for.</p>","types":["int"],"variable":"$object_id"},{"name":"param","content":"<p>Metadata key.</p>","types":["string"],"variable":"$meta_key"},{"name":"param","content":"<p>Whether to return only the first value of the specified <code>$meta_key</code>.</p>","types":["bool"],"variable":"$single"},{"name":"param","content":"<p>Type of object metadata is for. Accepts 'post', 'comment', 'term', 'user', or any other object type with an associated meta table.</p>","types":["string"],"variable":"$meta_type"}]},"args":5},{"name":"get_{$meta_type}_metadata_by_mid","aliases":["get_comment_metadata_by_mid","get_post_metadata_by_mid","get_term_metadata_by_mid","get_user_metadata_by_mid"],"file":"wp-includes/meta.php","type":"filter","doc":{"description":"Short-circuits the return value when fetching a meta field by meta ID.","long_description":"The dynamic portion of the hook name, `$meta_type`, refers to the meta object type (post, comment, term, user, or any other type with an associated meta table). Returning a non-null value will effectively short-circuit the function.\n Possible hook names include:\n\n  - `get_post_metadata_by_mid`\n  - `get_comment_metadata_by_mid`\n  - `get_term_metadata_by_mid`\n  - `get_user_metadata_by_mid`","long_description_html":"<p>The dynamic portion of the hook name, <code>$meta_type</code>, refers to the meta object type (post, comment, term, user, or any other type with an associated meta table). Returning a non-null value will effectively short-circuit the function.</p> <p>Possible hook names include:</p> <ul> <li><code>get_post_metadata_by_mid</code></li> <li><code>get_comment_metadata_by_mid</code></li> <li><code>get_term_metadata_by_mid</code></li> <li><code>get_user_metadata_by_mid</code></li> </ul>","tags":[{"name":"since","content":"5.0.0"},{"name":"param","content":"<p>The value to return.</p>","types":["\\stdClass","null"],"variable":"$value"},{"name":"param","content":"<p>Meta ID.</p>","types":["int"],"variable":"$meta_id"}]},"args":2},{"name":"update_{$meta_type}_metadata_by_mid","aliases":["update_comment_metadata_by_mid","update_post_metadata_by_mid","update_term_metadata_by_mid","update_user_metadata_by_mid"],"file":"wp-includes/meta.php","type":"filter","doc":{"description":"Short-circuits updating metadata of a specific type by meta ID.","long_description":"The dynamic portion of the hook name, `$meta_type`, refers to the meta object type (post, comment, term, user, or any other type with an associated meta table). Returning a non-null value will effectively short-circuit the function.\n Possible hook names include:\n\n  - `update_post_metadata_by_mid`\n  - `update_comment_metadata_by_mid`\n  - `update_term_metadata_by_mid`\n  - `update_user_metadata_by_mid`","long_description_html":"<p>The dynamic portion of the hook name, <code>$meta_type</code>, refers to the meta object type (post, comment, term, user, or any other type with an associated meta table). Returning a non-null value will effectively short-circuit the function.</p> <p>Possible hook names include:</p> <ul> <li><code>update_post_metadata_by_mid</code></li> <li><code>update_comment_metadata_by_mid</code></li> <li><code>update_term_metadata_by_mid</code></li> <li><code>update_user_metadata_by_mid</code></li> </ul>","tags":[{"name":"since","content":"5.0.0"},{"name":"param","content":"<p>Whether to allow updating metadata for the given type.</p>","types":["null","bool"],"variable":"$check"},{"name":"param","content":"<p>Meta ID.</p>","types":["int"],"variable":"$meta_id"},{"name":"param","content":"<p>Meta value. Must be serializable if non-scalar.</p>","types":["mixed"],"variable":"$meta_value"},{"name":"param","content":"<p>Meta key, if provided.</p>","types":["string","false"],"variable":"$meta_key"}]},"args":4},{"name":"delete_{$meta_type}_metadata_by_mid","aliases":["delete_comment_metadata_by_mid","delete_post_metadata_by_mid","delete_term_metadata_by_mid","delete_user_metadata_by_mid"],"file":"wp-includes/meta.php","type":"filter","doc":{"description":"Short-circuits deleting metadata of a specific type by meta ID.","long_description":"The dynamic portion of the hook name, `$meta_type`, refers to the meta object type (post, comment, term, user, or any other type with an associated meta table). Returning a non-null value will effectively short-circuit the function.\n Possible hook names include:\n\n  - `delete_post_metadata_by_mid`\n  - `delete_comment_metadata_by_mid`\n  - `delete_term_metadata_by_mid`\n  - `delete_user_metadata_by_mid`","long_description_html":"<p>The dynamic portion of the hook name, <code>$meta_type</code>, refers to the meta object type (post, comment, term, user, or any other type with an associated meta table). Returning a non-null value will effectively short-circuit the function.</p> <p>Possible hook names include:</p> <ul> <li><code>delete_post_metadata_by_mid</code></li> <li><code>delete_comment_metadata_by_mid</code></li> <li><code>delete_term_metadata_by_mid</code></li> <li><code>delete_user_metadata_by_mid</code></li> </ul>","tags":[{"name":"since","content":"5.0.0"},{"name":"param","content":"<p>Whether to allow metadata deletion of the given type.</p>","types":["null","bool"],"variable":"$delete"},{"name":"param","content":"<p>Meta ID.</p>","types":["int"],"variable":"$meta_id"}]},"args":2},{"name":"update_{$meta_type}_metadata_cache","aliases":["update_comment_metadata_cache","update_post_metadata_cache","update_term_metadata_cache","update_user_metadata_cache"],"file":"wp-includes/meta.php","type":"filter","doc":{"description":"Short-circuits updating the metadata cache of a specific type.","long_description":"The dynamic portion of the hook name, `$meta_type`, refers to the meta object type (post, comment, term, user, or any other type with an associated meta table). Returning a non-null value will effectively short-circuit the function.\n Possible hook names include:\n\n  - `update_post_metadata_cache`\n  - `update_comment_metadata_cache`\n  - `update_term_metadata_cache`\n  - `update_user_metadata_cache`","long_description_html":"<p>The dynamic portion of the hook name, <code>$meta_type</code>, refers to the meta object type (post, comment, term, user, or any other type with an associated meta table). Returning a non-null value will effectively short-circuit the function.</p> <p>Possible hook names include:</p> <ul> <li><code>update_post_metadata_cache</code></li> <li><code>update_comment_metadata_cache</code></li> <li><code>update_term_metadata_cache</code></li> <li><code>update_user_metadata_cache</code></li> </ul>","tags":[{"name":"since","content":"5.0.0"},{"name":"param","content":"<p>Whether to allow updating the meta cache of the given type.</p>","types":["mixed"],"variable":"$check"},{"name":"param","content":"<p>Array of object IDs to update the meta cache for.</p>","types":["int[]"],"variable":"$object_ids"}]},"args":2},{"name":"is_protected_meta","file":"wp-includes/meta.php","type":"filter","doc":{"description":"Filters whether a meta key is considered protected.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.2.0"},{"name":"param","content":"<p>Whether the key is considered protected.</p>","types":["bool"],"variable":"$protected"},{"name":"param","content":"<p>Metadata key.</p>","types":["string"],"variable":"$meta_key"},{"name":"param","content":"<p>Type of object metadata is for. Accepts 'post', 'comment', 'term', 'user', or any other object type with an associated meta table.</p>","types":["string"],"variable":"$meta_type"}]},"args":3},{"name":"sanitize_{$object_type}_meta_{$meta_key}_for_{$object_subtype}","file":"wp-includes/meta.php","type":"filter","doc":{"description":"Filters the sanitization of a specific meta key of a specific meta type and subtype.","long_description":"The dynamic portions of the hook name, `$object_type`, `$meta_key`, and `$object_subtype`, refer to the metadata object type (comment, post, term, or user), the meta key value, and the object subtype respectively.","long_description_html":"<p>The dynamic portions of the hook name, <code>$object_type</code>, <code>$meta_key</code>, and <code>$object_subtype</code>, refer to the metadata object type (comment, post, term, or user), the meta key value, and the object subtype respectively.</p>","tags":[{"name":"since","content":"4.9.8"},{"name":"param","content":"<p>Metadata value to sanitize.</p>","types":["mixed"],"variable":"$meta_value"},{"name":"param","content":"<p>Metadata key.</p>","types":["string"],"variable":"$meta_key"},{"name":"param","content":"<p>Type of object metadata is for. Accepts 'post', 'comment', 'term', 'user', or any other object type with an associated meta table.</p>","types":["string"],"variable":"$object_type"},{"name":"param","content":"<p>Object subtype.</p>","types":["string"],"variable":"$object_subtype"}]},"args":4},{"name":"sanitize_{$object_type}_meta_{$meta_key}","file":"wp-includes/meta.php","type":"filter","doc":{"description":"Filters the sanitization of a specific meta key of a specific meta type.","long_description":"The dynamic portions of the hook name, `$meta_type`, and `$meta_key`, refer to the metadata object type (comment, post, term, or user) and the meta key value, respectively.","long_description_html":"<p>The dynamic portions of the hook name, <code>$meta_type</code>, and <code>$meta_key</code>, refer to the metadata object type (comment, post, term, or user) and the meta key value, respectively.</p>","tags":[{"name":"since","content":"3.3.0"},{"name":"param","content":"<p>Metadata value to sanitize.</p>","types":["mixed"],"variable":"$meta_value"},{"name":"param","content":"<p>Metadata key.</p>","types":["string"],"variable":"$meta_key"},{"name":"param","content":"<p>Type of object metadata is for. Accepts 'post', 'comment', 'term', 'user', or any other object type with an associated meta table.</p>","types":["string"],"variable":"$object_type"}]},"args":3},{"name":"register_meta_args","file":"wp-includes/meta.php","type":"filter","doc":{"description":"Filters the registration arguments when registering meta.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.6.0"},{"name":"param","content":"<p>Array of meta registration arguments.</p>","types":["array"],"variable":"$args"},{"name":"param","content":"<p>Array of default arguments.</p>","types":["array"],"variable":"$defaults"},{"name":"param","content":"<p>Type of object metadata is for. Accepts 'post', 'comment', 'term', 'user', or any other object type with an associated meta table.</p>","types":["string"],"variable":"$object_type"},{"name":"param","content":"<p>Meta key.</p>","types":["string"],"variable":"$meta_key"}]},"args":4},{"name":"get_object_subtype_{$object_type}","aliases":["get_object_subtype_comment","get_object_subtype_post","get_object_subtype_term","get_object_subtype_user"],"file":"wp-includes/meta.php","type":"filter","doc":{"description":"Filters the object subtype identifier for a non-standard object type.","long_description":"The dynamic portion of the hook name, `$object_type`, refers to the meta object type (post, comment, term, user, or any other type with an associated meta table).\n Possible hook names include:\n\n  - `get_object_subtype_post`\n  - `get_object_subtype_comment`\n  - `get_object_subtype_term`\n  - `get_object_subtype_user`","long_description_html":"<p>The dynamic portion of the hook name, <code>$object_type</code>, refers to the meta object type (post, comment, term, user, or any other type with an associated meta table).</p> <p>Possible hook names include:</p> <ul> <li><code>get_object_subtype_post</code></li> <li><code>get_object_subtype_comment</code></li> <li><code>get_object_subtype_term</code></li> <li><code>get_object_subtype_user</code></li> </ul>","tags":[{"name":"since","content":"4.9.8"},{"name":"param","content":"<p>Empty string to override.</p>","types":["string"],"variable":"$object_subtype"},{"name":"param","content":"<p>ID of the object to get the subtype for.</p>","types":["int"],"variable":"$object_id"}]},"args":2},{"name":"process_text_diff_html","file":"wp-includes/class-wp-text-diff-renderer-table.php","type":"filter","doc":{"description":"Contextually filters a diffed line.","long_description":"Filters TextDiff processing of diffed line. By default, diffs are processed with htmlspecialchars. Use this filter to remove or change the processing. Passes a context indicating if the line is added, deleted or unchanged.","long_description_html":"<p>Filters TextDiff processing of diffed line. By default, diffs are processed with htmlspecialchars. Use this filter to remove or change the processing. Passes a context indicating if the line is added, deleted or unchanged.</p>","tags":[{"name":"since","content":"4.1.0"},{"name":"param","content":"<p>The processed diffed line.</p>","types":["string"],"variable":"$processed_line"},{"name":"param","content":"<p>The unprocessed diffed line.</p>","types":["string"],"variable":"$line"},{"name":"param","content":"<p>The line context. Values are 'added', 'deleted' or 'unchanged'.</p>","types":["string"],"variable":"$context"}]},"args":3},{"name":"session_token_manager","file":"wp-includes/class-wp-session-tokens.php","type":"filter","doc":{"description":"Filters the class name for the session token manager.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.0.0"},{"name":"param","content":"<p>Name of class to use as the manager. Default 'WP_User_Meta_Session_Tokens'.</p>","types":["string"],"variable":"$session"}]},"args":1},{"name":"attach_session_information","file":"wp-includes/class-wp-session-tokens.php","type":"filter","doc":{"description":"Filters the information attached to the newly created session.","long_description":"Can be used to attach further information to a session.","long_description_html":"<p>Can be used to attach further information to a session.</p>","tags":[{"name":"since","content":"4.0.0"},{"name":"param","content":"<p>Array of extra data.</p>","types":["array"],"variable":"$session"},{"name":"param","content":"<p>User ID.</p>","types":["int"],"variable":"$user_id"}]},"args":2},{"name":"http_request_timeout","file":"wp-includes/class-wp-http.php","type":"filter","doc":{"description":"Filters the timeout value for an HTTP request.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.7.0"},{"name":"since","content":"5.1.0","description":"<p>The <code>$url</code> parameter was added.</p>"},{"name":"param","content":"<p>Time in seconds until a request times out. Default 5.</p>","types":["float"],"variable":"$timeout_value"},{"name":"param","content":"<p>The request URL.</p>","types":["string"],"variable":"$url"}]},"args":2},{"name":"http_request_redirection_count","file":"wp-includes/class-wp-http.php","type":"filter","doc":{"description":"Filters the number of redirects allowed during an HTTP request.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.7.0"},{"name":"since","content":"5.1.0","description":"<p>The <code>$url</code> parameter was added.</p>"},{"name":"param","content":"<p>Number of redirects allowed. Default 5.</p>","types":["int"],"variable":"$redirect_count"},{"name":"param","content":"<p>The request URL.</p>","types":["string"],"variable":"$url"}]},"args":2},{"name":"http_request_version","file":"wp-includes/class-wp-http.php","type":"filter","doc":{"description":"Filters the version of the HTTP protocol used in a request.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.7.0"},{"name":"since","content":"5.1.0","description":"<p>The <code>$url</code> parameter was added.</p>"},{"name":"param","content":"<p>Version of HTTP used. Accepts '1.0' and '1.1'. Default '1.0'.</p>","types":["string"],"variable":"$version"},{"name":"param","content":"<p>The request URL.</p>","types":["string"],"variable":"$url"}]},"args":2},{"name":"http_headers_useragent","file":"wp-includes/class-wp-http.php","type":"filter","doc":{"description":"Filters the user agent value sent with an HTTP request.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.7.0"},{"name":"since","content":"5.1.0","description":"<p>The <code>$url</code> parameter was added.</p>"},{"name":"param","content":"<p>WordPress user agent string.</p>","types":["string"],"variable":"$user_agent"},{"name":"param","content":"<p>The request URL.</p>","types":["string"],"variable":"$url"}]},"args":2},{"name":"http_request_reject_unsafe_urls","file":"wp-includes/class-wp-http.php","type":"filter","doc":{"description":"Filters whether to pass URLs through wp_http_validate_url() in an HTTP request.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.6.0"},{"name":"since","content":"5.1.0","description":"<p>The <code>$url</code> parameter was added.</p>"},{"name":"param","content":"<p>Whether to pass URLs through wp_http_validate_url(). Default false.</p>","types":["bool"],"variable":"$pass_url"},{"name":"param","content":"<p>The request URL.</p>","types":["string"],"variable":"$url"}]},"args":2},{"name":"http_request_args","file":"wp-includes/class-wp-http.php","type":"filter","doc":{"description":"Filters the arguments used in an HTTP request.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.7.0"},{"name":"param","content":"<p>An array of HTTP request arguments.</p>","types":["array"],"variable":"$parsed_args"},{"name":"param","content":"<p>The request URL.</p>","types":["string"],"variable":"$url"}]},"args":2},{"name":"pre_http_request","file":"wp-includes/class-wp-http.php","type":"filter","doc":{"description":"Filters the preemptive return value of an HTTP request.","long_description":"Returning a non-false value from the filter will short-circuit the HTTP request and return early with that value. A filter should return one of:\n\n  - An array containing 'headers', 'body', 'response', 'cookies', and 'filename' elements\n  - A WP_Error instance\n  - boolean false to avoid short-circuiting the response\n Returning any other value may result in unexpected behavior.","long_description_html":"<p>Returning a non-false value from the filter will short-circuit the HTTP request and return early with that value. A filter should return one of:</p> <ul> <li>An array containing 'headers', 'body', 'response', 'cookies', and 'filename' elements</li> <li>A WP_Error instance</li> <li>boolean false to avoid short-circuiting the response</li> </ul> <p>Returning any other value may result in unexpected behavior.</p>","tags":[{"name":"since","content":"2.9.0"},{"name":"param","content":"<p>A preemptive return value of an HTTP request. Default false.</p>","types":["false","array","\\WP_Error"],"variable":"$response"},{"name":"param","content":"<p>HTTP request arguments.</p>","types":["array"],"variable":"$parsed_args"},{"name":"param","content":"<p>The request URL.</p>","types":["string"],"variable":"$url"}]},"args":3},{"name":"https_ssl_verify","file":"wp-includes/class-wp-http.php","type":"filter","doc":{"description":"Filters whether SSL should be verified for non-local requests.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.8.0"},{"name":"since","content":"5.1.0","description":"<p>The <code>$url</code> parameter was added.</p>"},{"name":"param","content":"<p>Boolean to control whether to verify the SSL connection or path to an SSL certificate.</p>","types":["bool","string"],"variable":"$ssl_verify"},{"name":"param","content":"<p>The request URL.</p>","types":["string"],"variable":"$url"}]},"args":2},{"name":"http_response","file":"wp-includes/class-wp-http.php","type":"filter","doc":{"description":"Filters a successful HTTP API response immediately before the response is returned.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.9.0"},{"name":"param","content":"<p>HTTP response.</p>","types":["array"],"variable":"$response"},{"name":"param","content":"<p>HTTP request arguments.</p>","types":["array"],"variable":"$parsed_args"},{"name":"param","content":"<p>The request URL.</p>","types":["string"],"variable":"$url"}]},"args":3},{"name":"block_local_requests","file":"wp-includes/class-wp-http.php","type":"filter","doc":{"description":"Filters whether to block local HTTP API requests.","long_description":"A local request is one to `localhost` or to the same host as the site itself.","long_description_html":"<p>A local request is one to <code>localhost</code> or to the same host as the site itself.</p>","tags":[{"name":"since","content":"2.8.0"},{"name":"param","content":"<p>Whether to block local requests. Default false.</p>","types":["bool"],"variable":"$block"}]},"args":1},{"name":"get_meta_sql","file":"wp-includes/class-wp-meta-query.php","type":"filter","doc":{"description":"Filters the meta query's generated SQL.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.1.0"},{"name":"param","content":"<p>Array containing the query's JOIN and WHERE clauses.</p>","types":["string[]"],"variable":"$sql"},{"name":"param","content":"<p>Array of meta queries.</p>","types":["array"],"variable":"$queries"},{"name":"param","content":"<p>Type of meta. Possible values include but are not limited to 'post', 'comment', 'blog', 'term', and 'user'.</p>","types":["string"],"variable":"$type"},{"name":"param","content":"<p>Primary table.</p>","types":["string"],"variable":"$primary_table"},{"name":"param","content":"<p>Primary column ID.</p>","types":["string"],"variable":"$primary_id_column"},{"name":"param","content":"<p>The main query object that corresponds to the type, for example a <code>WP_Query</code>, <code>WP_User_Query</code>, or <code>WP_Site_Query</code>.</p>","types":["object"],"variable":"$context"}]},"args":1},{"name":"meta_query_find_compatible_table_alias","file":"wp-includes/class-wp-meta-query.php","type":"filter","doc":{"description":"Filters the table alias identified as compatible with the current clause.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.1.0"},{"name":"param","content":"<p>Table alias, or false if none was found.</p>","types":["string","false"],"variable":"$alias"},{"name":"param","content":"<p>First-order query clause.</p>","types":["array"],"variable":"$clause"},{"name":"param","content":"<p>Parent of $clause.</p>","types":["array"],"variable":"$parent_query"},{"name":"param","content":"<p>WP_Meta_Query object.</p>","types":["\\WP_Meta_Query"],"variable":"$query"}]},"args":4},{"name":"the_permalink","file":"wp-includes/link-template.php","type":"filter","doc":{"description":"Filters the display of the permalink for the current post.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"1.5.0"},{"name":"since","content":"4.4.0","description":"<p>Added the <code>$post</code> parameter.</p>"},{"name":"param","content":"<p>The permalink for the current post.</p>","types":["string"],"variable":"$permalink"},{"name":"param","content":"<p>Post ID, WP_Post object, or 0. Default 0.</p>","types":["int","\\WP_Post"],"variable":"$post"}]},"args":2},{"name":"user_trailingslashit","file":"wp-includes/link-template.php","type":"filter","doc":{"description":"Filters the trailing-slashed string, depending on whether the site is set to use trailing slashes.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.2.0"},{"name":"param","content":"<p>URL with or without a trailing slash.</p>","types":["string"],"variable":"$url"},{"name":"param","content":"<p>The type of URL being considered. Accepts 'single', 'single_trackback', 'single_feed', 'single_paged', 'commentpaged', 'paged', 'home', 'feed', 'category', 'page', 'year', 'month', 'day', 'post_type_archive'.</p>","types":["string"],"variable":"$type_of_url"}]},"args":2},{"name":"pre_post_link","file":"wp-includes/link-template.php","type":"filter","doc":{"description":"Filters the permalink structure for a post before token replacement occurs.","long_description":"Only applies to posts with post_type of 'post'.","long_description_html":"<p>Only applies to posts with post_type of 'post'.</p>","tags":[{"name":"since","content":"3.0.0"},{"name":"param","content":"<p>The site's permalink structure.</p>","types":["string"],"variable":"$permalink"},{"name":"param","content":"<p>The post in question.</p>","types":["\\WP_Post"],"variable":"$post"},{"name":"param","content":"<p>Whether to keep the post name.</p>","types":["bool"],"variable":"$leavename"}]},"args":3},{"name":"post_link_category","file":"wp-includes/link-template.php","type":"filter","doc":{"description":"Filters the category that gets used in the %category% permalink token.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.5.0"},{"name":"param","content":"<p>The category to use in the permalink.</p>","types":["\\WP_Term"],"variable":"$cat"},{"name":"param","content":"<p>Array of all categories (WP_Term objects) associated with the post.</p>","types":["array"],"variable":"$cats"},{"name":"param","content":"<p>The post in question.</p>","types":["\\WP_Post"],"variable":"$post"}]},"args":3},{"name":"post_link","file":"wp-includes/link-template.php","type":"filter","doc":{"description":"Filters the permalink for a post.","long_description":"Only applies to posts with post_type of 'post'.","long_description_html":"<p>Only applies to posts with post_type of 'post'.</p>","tags":[{"name":"since","content":"1.5.0"},{"name":"param","content":"<p>The post's permalink.</p>","types":["string"],"variable":"$permalink"},{"name":"param","content":"<p>The post in question.</p>","types":["\\WP_Post"],"variable":"$post"},{"name":"param","content":"<p>Whether to keep the post name.</p>","types":["bool"],"variable":"$leavename"}]},"args":3},{"name":"post_type_link","file":"wp-includes/link-template.php","type":"filter","doc":{"description":"Filters the permalink for a post of a custom post type.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.0.0"},{"name":"param","content":"<p>The post's permalink.</p>","types":["string"],"variable":"$post_link"},{"name":"param","content":"<p>The post in question.</p>","types":["\\WP_Post"],"variable":"$post"},{"name":"param","content":"<p>Whether to keep the post name.</p>","types":["bool"],"variable":"$leavename"},{"name":"param","content":"<p>Is it a sample permalink.</p>","types":["bool"],"variable":"$sample"}]},"args":4},{"name":"page_link","file":"wp-includes/link-template.php","type":"filter","doc":{"description":"Filters the permalink for a page.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"1.5.0"},{"name":"param","content":"<p>The page's permalink.</p>","types":["string"],"variable":"$link"},{"name":"param","content":"<p>The ID of the page.</p>","types":["int"],"variable":"$post_id"},{"name":"param","content":"<p>Is it a sample permalink.</p>","types":["bool"],"variable":"$sample"}]},"args":3},{"name":"_get_page_link","file":"wp-includes/link-template.php","type":"filter","doc":{"description":"Filters the permalink for a non-page_on_front page.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.1.0"},{"name":"param","content":"<p>The page's permalink.</p>","types":["string"],"variable":"$link"},{"name":"param","content":"<p>The ID of the page.</p>","types":["int"],"variable":"$post_id"}]},"args":2},{"name":"attachment_link","file":"wp-includes/link-template.php","type":"filter","doc":{"description":"Filters the permalink for an attachment.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.0.0"},{"name":"since","content":"5.6.0","description":"<p>Providing an empty string will now disable the view attachment page link on the media modal.</p>"},{"name":"param","content":"<p>The attachment's permalink.</p>","types":["string"],"variable":"$link"},{"name":"param","content":"<p>Attachment ID.</p>","types":["int"],"variable":"$post_id"}]},"args":2},{"name":"year_link","file":"wp-includes/link-template.php","type":"filter","doc":{"description":"Filters the year archive permalink.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"1.5.0"},{"name":"param","content":"<p>Permalink for the year archive.</p>","types":["string"],"variable":"$yearlink"},{"name":"param","content":"<p>Year for the archive.</p>","types":["int"],"variable":"$year"}]},"args":2},{"name":"month_link","file":"wp-includes/link-template.php","type":"filter","doc":{"description":"Filters the month archive permalink.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"1.5.0"},{"name":"param","content":"<p>Permalink for the month archive.</p>","types":["string"],"variable":"$monthlink"},{"name":"param","content":"<p>Year for the archive.</p>","types":["int"],"variable":"$year"},{"name":"param","content":"<p>The month for the archive.</p>","types":["int"],"variable":"$month"}]},"args":3},{"name":"day_link","file":"wp-includes/link-template.php","type":"filter","doc":{"description":"Filters the day archive permalink.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"1.5.0"},{"name":"param","content":"<p>Permalink for the day archive.</p>","types":["string"],"variable":"$daylink"},{"name":"param","content":"<p>Year for the archive.</p>","types":["int"],"variable":"$year"},{"name":"param","content":"<p>Month for the archive.</p>","types":["int"],"variable":"$month"},{"name":"param","content":"<p>The day for the archive.</p>","types":["int"],"variable":"$day"}]},"args":4},{"name":"the_feed_link","file":"wp-includes/link-template.php","type":"filter","doc":{"description":"Filters the feed link anchor tag.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.0.0"},{"name":"param","content":"<p>The complete anchor tag for a feed link.</p>","types":["string"],"variable":"$link"},{"name":"param","content":"<p>The feed type. Possible values include 'rss2', 'atom', or an empty string for the default feed type.</p>","types":["string"],"variable":"$feed"}]},"args":2},{"name":"feed_link","file":"wp-includes/link-template.php","type":"filter","doc":{"description":"Filters the feed type permalink.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"1.5.0"},{"name":"param","content":"<p>The feed permalink.</p>","types":["string"],"variable":"$output"},{"name":"param","content":"<p>The feed type. Possible values include 'rss2', 'atom', or an empty string for the default feed type.</p>","types":["string"],"variable":"$feed"}]},"args":2},{"name":"post_comments_feed_link","file":"wp-includes/link-template.php","type":"filter","doc":{"description":"Filters the post comments feed permalink.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"1.5.1"},{"name":"param","content":"<p>Post comments feed permalink.</p>","types":["string"],"variable":"$url"}]},"args":1},{"name":"post_comments_feed_link_html","file":"wp-includes/link-template.php","type":"filter","doc":{"description":"Filters the post comment feed link anchor tag.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.8.0"},{"name":"param","content":"<p>The complete anchor tag for the comment feed link.</p>","types":["string"],"variable":"$link"},{"name":"param","content":"<p>Post ID.</p>","types":["int"],"variable":"$post_id"},{"name":"param","content":"<p>The feed type. Possible values include 'rss2', 'atom', or an empty string for the default feed type.</p>","types":["string"],"variable":"$feed"}]},"args":3},{"name":"author_feed_link","file":"wp-includes/link-template.php","type":"filter","doc":{"description":"Filters the feed link for a given author.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"1.5.1"},{"name":"param","content":"<p>The author feed link.</p>","types":["string"],"variable":"$link"},{"name":"param","content":"<p>Feed type. Possible values include 'rss2', 'atom'.</p>","types":["string"],"variable":"$feed"}]},"args":2},{"name":"category_feed_link","file":"wp-includes/link-template.php","type":"filter","doc":{"description":"Filters the category feed link.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"1.5.1"},{"name":"param","content":"<p>The category feed link.</p>","types":["string"],"variable":"$link"},{"name":"param","content":"<p>Feed type. Possible values include 'rss2', 'atom'.</p>","types":["string"],"variable":"$feed"}]},"args":2},{"name":"tag_feed_link","file":"wp-includes/link-template.php","type":"filter","doc":{"description":"Filters the post tag feed link.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.3.0"},{"name":"param","content":"<p>The tag feed link.</p>","types":["string"],"variable":"$link"},{"name":"param","content":"<p>Feed type. Possible values include 'rss2', 'atom'.</p>","types":["string"],"variable":"$feed"}]},"args":2},{"name":"taxonomy_feed_link","file":"wp-includes/link-template.php","type":"filter","doc":{"description":"Filters the feed link for a taxonomy other than 'category' or 'post_tag'.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.0.0"},{"name":"param","content":"<p>The taxonomy feed link.</p>","types":["string"],"variable":"$link"},{"name":"param","content":"<p>Feed type. Possible values include 'rss2', 'atom'.</p>","types":["string"],"variable":"$feed"},{"name":"param","content":"<p>The taxonomy name.</p>","types":["string"],"variable":"$taxonomy"}]},"args":3},{"name":"get_edit_tag_link","file":"wp-includes/link-template.php","type":"filter","doc":{"description":"Filters the edit link for a tag (or term in another taxonomy).","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.7.0"},{"name":"param","content":"<p>The term edit link.</p>","types":["string"],"variable":"$link"}]},"args":1},{"name":"edit_tag_link","file":"wp-includes/link-template.php","type":"filter","doc":{"description":"Filters the anchor tag for the edit link for a tag (or term in another taxonomy).","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.7.0"},{"name":"param","content":"<p>The anchor tag for the edit link.</p>","types":["string"],"variable":"$link"}]},"args":1},{"name":"get_edit_term_link","file":"wp-includes/link-template.php","type":"filter","doc":{"description":"Filters the edit link for a term.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.1.0"},{"name":"param","content":"<p>The edit link.</p>","types":["string"],"variable":"$location"},{"name":"param","content":"<p>Term ID.</p>","types":["int"],"variable":"$term_id"},{"name":"param","content":"<p>Taxonomy name.</p>","types":["string"],"variable":"$taxonomy"},{"name":"param","content":"<p>The object type.</p>","types":["string"],"variable":"$object_type"}]},"args":4},{"name":"edit_term_link","file":"wp-includes/link-template.php","type":"filter","doc":{"description":"Filters the anchor tag for the edit link of a term.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.1.0"},{"name":"param","content":"<p>The anchor tag for the edit link.</p>","types":["string"],"variable":"$link"},{"name":"param","content":"<p>Term ID.</p>","types":["int"],"variable":"$term_id"}]},"args":2},{"name":"search_link","file":"wp-includes/link-template.php","type":"filter","doc":{"description":"Filters the search permalink.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.0.0"},{"name":"param","content":"<p>Search permalink.</p>","types":["string"],"variable":"$link"},{"name":"param","content":"<p>The URL-encoded search term.</p>","types":["string"],"variable":"$search"}]},"args":2},{"name":"search_feed_link","file":"wp-includes/link-template.php","type":"filter","doc":{"description":"Filters the search feed link.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.5.0"},{"name":"param","content":"<p>Search feed link.</p>","types":["string"],"variable":"$link"},{"name":"param","content":"<p>Feed type. Possible values include 'rss2', 'atom'.</p>","types":["string"],"variable":"$feed"},{"name":"param","content":"<p>The search type. One of 'posts' or 'comments'.</p>","types":["string"],"variable":"$type"}]},"args":3},{"name":"post_type_archive_link","file":"wp-includes/link-template.php","type":"filter","doc":{"description":"Filters the post type archive permalink.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.1.0"},{"name":"param","content":"<p>The post type archive permalink.</p>","types":["string"],"variable":"$link"},{"name":"param","content":"<p>Post type name.</p>","types":["string"],"variable":"$post_type"}]},"args":2},{"name":"post_type_archive_feed_link","file":"wp-includes/link-template.php","type":"filter","doc":{"description":"Filters the post type archive feed link.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.1.0"},{"name":"param","content":"<p>The post type archive feed link.</p>","types":["string"],"variable":"$link"},{"name":"param","content":"<p>Feed type. Possible values include 'rss2', 'atom'.</p>","types":["string"],"variable":"$feed"}]},"args":2},{"name":"preview_post_link","file":"wp-includes/link-template.php","type":"filter","doc":{"description":"Filters the URL used for a post preview.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.0.5"},{"name":"since","content":"4.0.0","description":"<p>Added the <code>$post</code> parameter.</p>"},{"name":"param","content":"<p>URL used for the post preview.</p>","types":["string"],"variable":"$preview_link"},{"name":"param","content":"<p>Post object.</p>","types":["\\WP_Post"],"variable":"$post"}]},"args":2},{"name":"get_edit_post_link","file":"wp-includes/link-template.php","type":"filter","doc":{"description":"Filters the post edit link.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.3.0"},{"name":"param","content":"<p>The edit link.</p>","types":["string"],"variable":"$link"},{"name":"param","content":"<p>Post ID.</p>","types":["int"],"variable":"$post_id"},{"name":"param","content":"<p>The link context. If set to 'display' then ampersands are encoded.</p>","types":["string"],"variable":"$context"}]},"args":3},{"name":"edit_post_link","file":"wp-includes/link-template.php","type":"filter","doc":{"description":"Filters the post edit link anchor tag.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.3.0"},{"name":"param","content":"<p>Anchor tag for the edit link.</p>","types":["string"],"variable":"$link"},{"name":"param","content":"<p>Post ID.</p>","types":["int"],"variable":"$post_id"},{"name":"param","content":"<p>Anchor text.</p>","types":["string"],"variable":"$text"}]},"args":3},{"name":"get_delete_post_link","file":"wp-includes/link-template.php","type":"filter","doc":{"description":"Filters the post delete link.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.9.0"},{"name":"param","content":"<p>The delete link.</p>","types":["string"],"variable":"$link"},{"name":"param","content":"<p>Post ID.</p>","types":["int"],"variable":"$post_id"},{"name":"param","content":"<p>Whether to bypass the Trash and force deletion. Default false.</p>","types":["bool"],"variable":"$force_delete"}]},"args":3},{"name":"get_edit_comment_link","file":"wp-includes/link-template.php","type":"filter","doc":{"description":"Filters the comment edit link.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.3.0"},{"name":"since","content":"6.7.0","description":"<p>The $comment_id and $context parameters are now being passed to the filter.</p>"},{"name":"param","content":"<p>The edit link.</p>","types":["string"],"variable":"$location"},{"name":"param","content":"<p>Unique ID of the comment to generate an edit link.</p>","types":["int"],"variable":"$comment_id"},{"name":"param","content":"<p>Context to include HTML entities in link. Default 'display'.</p>","types":["string"],"variable":"$context"}]},"args":3},{"name":"edit_comment_link","file":"wp-includes/link-template.php","type":"filter","doc":{"description":"Filters the comment edit link anchor tag.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.3.0"},{"name":"param","content":"<p>Anchor tag for the edit link.</p>","types":["string"],"variable":"$link"},{"name":"param","content":"<p>Comment ID as a numeric string.</p>","types":["string"],"variable":"$comment_id"},{"name":"param","content":"<p>Anchor text.</p>","types":["string"],"variable":"$text"}]},"args":3},{"name":"get_edit_bookmark_link","file":"wp-includes/link-template.php","type":"filter","doc":{"description":"Filters the bookmark edit link.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.7.0"},{"name":"param","content":"<p>The edit link.</p>","types":["string"],"variable":"$location"},{"name":"param","content":"<p>Bookmark ID.</p>","types":["int"],"variable":"$link_id"}]},"args":2},{"name":"edit_bookmark_link","file":"wp-includes/link-template.php","type":"filter","doc":{"description":"Filters the bookmark edit link anchor tag.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.7.0"},{"name":"param","content":"<p>Anchor tag for the edit link.</p>","types":["string"],"variable":"$link"},{"name":"param","content":"<p>Bookmark ID.</p>","types":["int"],"variable":"$link_id"}]},"args":2},{"name":"get_edit_user_link","file":"wp-includes/link-template.php","type":"filter","doc":{"description":"Filters the user edit link.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.5.0"},{"name":"param","content":"<p>The edit link.</p>","types":["string"],"variable":"$link"},{"name":"param","content":"<p>User ID.</p>","types":["int"],"variable":"$user_id"}]},"args":2},{"name":"get_{$adjacent}_post_excluded_terms","aliases":["get_next_post_excluded_terms","get_previous_post_excluded_terms"],"file":"wp-includes/link-template.php","type":"filter","doc":{"description":"Filters the IDs of terms excluded from adjacent post queries.","long_description":"The dynamic portion of the hook name, `$adjacent`, refers to the type of adjacency, 'next' or 'previous'.\n Possible hook names include:\n\n  - `get_next_post_excluded_terms`\n  - `get_previous_post_excluded_terms`","long_description_html":"<p>The dynamic portion of the hook name, <code>$adjacent</code>, refers to the type of adjacency, 'next' or 'previous'.</p> <p>Possible hook names include:</p> <ul> <li><code>get_next_post_excluded_terms</code></li> <li><code>get_previous_post_excluded_terms</code></li> </ul>","tags":[{"name":"since","content":"4.4.0"},{"name":"param","content":"<p>Array of excluded term IDs. Empty string if none were provided.</p>","types":["int[]","string"],"variable":"$excluded_terms"}]},"args":1},{"name":"get_{$adjacent}_post_join","aliases":["get_next_post_join","get_previous_post_join"],"file":"wp-includes/link-template.php","type":"filter","doc":{"description":"Filters the JOIN clause in the SQL for an adjacent post query.","long_description":"The dynamic portion of the hook name, `$adjacent`, refers to the type of adjacency, 'next' or 'previous'.\n Possible hook names include:\n\n  - `get_next_post_join`\n  - `get_previous_post_join`","long_description_html":"<p>The dynamic portion of the hook name, <code>$adjacent</code>, refers to the type of adjacency, 'next' or 'previous'.</p> <p>Possible hook names include:</p> <ul> <li><code>get_next_post_join</code></li> <li><code>get_previous_post_join</code></li> </ul>","tags":[{"name":"since","content":"2.5.0"},{"name":"since","content":"4.4.0","description":"<p>Added the <code>$taxonomy</code> and <code>$post</code> parameters.</p>"},{"name":"param","content":"<p>The JOIN clause in the SQL.</p>","types":["string"],"variable":"$join"},{"name":"param","content":"<p>Whether post should be in the same taxonomy term.</p>","types":["bool"],"variable":"$in_same_term"},{"name":"param","content":"<p>Array of excluded term IDs. Empty string if none were provided.</p>","types":["int[]","string"],"variable":"$excluded_terms"},{"name":"param","content":"<p>Taxonomy. Used to identify the term used when <code>$in_same_term</code> is true.</p>","types":["string"],"variable":"$taxonomy"},{"name":"param","content":"<p>WP_Post object.</p>","types":["\\WP_Post"],"variable":"$post"}]},"args":5},{"name":"get_{$adjacent}_post_where","aliases":["get_next_post_where","get_previous_post_where"],"file":"wp-includes/link-template.php","type":"filter","doc":{"description":"Filters the WHERE clause in the SQL for an adjacent post query.","long_description":"The dynamic portion of the hook name, `$adjacent`, refers to the type of adjacency, 'next' or 'previous'.\n Possible hook names include:\n\n  - `get_next_post_where`\n  - `get_previous_post_where`","long_description_html":"<p>The dynamic portion of the hook name, <code>$adjacent</code>, refers to the type of adjacency, 'next' or 'previous'.</p> <p>Possible hook names include:</p> <ul> <li><code>get_next_post_where</code></li> <li><code>get_previous_post_where</code></li> </ul>","tags":[{"name":"since","content":"2.5.0"},{"name":"since","content":"4.4.0","description":"<p>Added the <code>$taxonomy</code> and <code>$post</code> parameters.</p>"},{"name":"param","content":"<p>The <code>WHERE</code> clause in the SQL.</p>","types":["string"],"variable":"$where"},{"name":"param","content":"<p>Whether post should be in the same taxonomy term.</p>","types":["bool"],"variable":"$in_same_term"},{"name":"param","content":"<p>Array of excluded term IDs. Empty string if none were provided.</p>","types":["int[]","string"],"variable":"$excluded_terms"},{"name":"param","content":"<p>Taxonomy. Used to identify the term used when <code>$in_same_term</code> is true.</p>","types":["string"],"variable":"$taxonomy"},{"name":"param","content":"<p>WP_Post object.</p>","types":["\\WP_Post"],"variable":"$post"}]},"args":5},{"name":"get_{$adjacent}_post_sort","aliases":["get_next_post_sort","get_previous_post_sort"],"file":"wp-includes/link-template.php","type":"filter","doc":{"description":"Filters the ORDER BY clause in the SQL for an adjacent post query.","long_description":"The dynamic portion of the hook name, `$adjacent`, refers to the type of adjacency, 'next' or 'previous'.\n Possible hook names include:\n\n  - `get_next_post_sort`\n  - `get_previous_post_sort`","long_description_html":"<p>The dynamic portion of the hook name, <code>$adjacent</code>, refers to the type of adjacency, 'next' or 'previous'.</p> <p>Possible hook names include:</p> <ul> <li><code>get_next_post_sort</code></li> <li><code>get_previous_post_sort</code></li> </ul>","tags":[{"name":"since","content":"2.5.0"},{"name":"since","content":"4.4.0","description":"<p>Added the <code>$post</code> parameter.</p>"},{"name":"since","content":"4.9.0","description":"<p>Added the <code>$order</code> parameter.</p>"},{"name":"param","content":"<p>The <code>ORDER BY</code> clause in the SQL.</p>","types":["string"],"variable":"$order_by"},{"name":"param","content":"<p>WP_Post object.</p>","types":["\\WP_Post"],"variable":"$post"},{"name":"param","content":"<p>Sort order. 'DESC' for previous post, 'ASC' for next.</p>","types":["string"],"variable":"$order"}]},"args":3},{"name":"{$adjacent}_post_rel_link","aliases":["next_post_rel_link","previous_post_rel_link"],"file":"wp-includes/link-template.php","type":"filter","doc":{"description":"Filters the adjacent post relational link.","long_description":"The dynamic portion of the hook name, `$adjacent`, refers to the type of adjacency, 'next' or 'previous'.\n Possible hook names include:\n\n  - `next_post_rel_link`\n  - `previous_post_rel_link`","long_description_html":"<p>The dynamic portion of the hook name, <code>$adjacent</code>, refers to the type of adjacency, 'next' or 'previous'.</p> <p>Possible hook names include:</p> <ul> <li><code>next_post_rel_link</code></li> <li><code>previous_post_rel_link</code></li> </ul>","tags":[{"name":"since","content":"2.8.0"},{"name":"param","content":"<p>The relational link.</p>","types":["string"],"variable":"$link"}]},"args":1},{"name":"{$adjacent}_post_link","aliases":["next_post_link","previous_post_link"],"file":"wp-includes/link-template.php","type":"filter","doc":{"description":"Filters the adjacent post link.","long_description":"The dynamic portion of the hook name, `$adjacent`, refers to the type of adjacency, 'next' or 'previous'.\n Possible hook names include:\n\n  - `next_post_link`\n  - `previous_post_link`","long_description_html":"<p>The dynamic portion of the hook name, <code>$adjacent</code>, refers to the type of adjacency, 'next' or 'previous'.</p> <p>Possible hook names include:</p> <ul> <li><code>next_post_link</code></li> <li><code>previous_post_link</code></li> </ul>","tags":[{"name":"since","content":"2.6.0"},{"name":"since","content":"4.2.0","description":"<p>Added the <code>$adjacent</code> parameter.</p>"},{"name":"param","content":"<p>The adjacent post link.</p>","types":["string"],"variable":"$output"},{"name":"param","content":"<p>Link anchor format.</p>","types":["string"],"variable":"$format"},{"name":"param","content":"<p>Link permalink format.</p>","types":["string"],"variable":"$link"},{"name":"param","content":"<p>The adjacent post. Empty string if no corresponding post exists.</p>","types":["\\WP_Post","string"],"variable":"$post"},{"name":"param","content":"<p>Whether the post is previous or next.</p>","types":["string"],"variable":"$adjacent"}]},"args":5},{"name":"get_pagenum_link","file":"wp-includes/link-template.php","type":"filter","doc":{"description":"Filters the page number link for the current request.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.5.0"},{"name":"since","content":"5.2.0","description":"<p>Added the <code>$pagenum</code> argument.</p>"},{"name":"param","content":"<p>The page number link.</p>","types":["string"],"variable":"$result"},{"name":"param","content":"<p>The page number.</p>","types":["int"],"variable":"$pagenum"}]},"args":2},{"name":"next_posts_link_attributes","file":"wp-includes/link-template.php","type":"filter","doc":{"description":"Filters the anchor tag attributes for the next posts page link.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.7.0"},{"name":"param","content":"<p>Attributes for the anchor tag.</p>","types":["string"],"variable":"$attributes"}]},"args":1},{"name":"previous_posts_link_attributes","file":"wp-includes/link-template.php","type":"filter","doc":{"description":"Filters the anchor tag attributes for the previous posts page link.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.7.0"},{"name":"param","content":"<p>Attributes for the anchor tag.</p>","types":["string"],"variable":"$attributes"}]},"args":1},{"name":"the_posts_pagination_args","file":"wp-includes/link-template.php","type":"filter","doc":{"description":"Filters the arguments for posts pagination links.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"6.1.0"},{"name":"param","content":"<p>{ Optional. Default pagination arguments, see paginate_links().</p>","types":["array"],"variable":"$args"}]},"args":1},{"name":"navigation_markup_template","file":"wp-includes/link-template.php","type":"filter","doc":{"description":"Filters the navigation markup template.","long_description":"Note: The filtered template HTML must contain specifiers for the navigation class (%1$s), the screen-reader-text value (%2$s), placement of the navigation links (%3$s), and ARIA label text if screen-reader-text does not fit that (%4$s):\n     <nav class=\"navigation %1$s\" aria-label=\"%4$s\">         <h2 class=\"screen-reader-text\">%2$s</h2>         <div class=\"nav-links\">%3$s</div>     </nav>","long_description_html":"<p>Note: The filtered template HTML must contain specifiers for the navigation class (%1$s), the screen-reader-text value (%2$s), placement of the navigation links (%3$s), and ARIA label text if screen-reader-text does not fit that (%4$s):</p> <pre><code>&lt;nav class=\"navigation %1$s\" aria-label=\"%4$s\"&gt;     &lt;h2 class=\"screen-reader-text\"&gt;%2$s&lt;/h2&gt;     &lt;div class=\"nav-links\"&gt;%3$s&lt;/div&gt; &lt;/nav&gt;</code></pre>","tags":[{"name":"since","content":"4.4.0"},{"name":"param","content":"<p>The default template.</p>","types":["string"],"variable":"$template"},{"name":"param","content":"<p>The class passed by the calling function.</p>","types":["string"],"variable":"$css_class"},{"name":"return","content":"Navigation template.","types":["string"]}]},"args":2},{"name":"get_comments_pagenum_link","file":"wp-includes/link-template.php","type":"filter","doc":{"description":"Filters the comments page number link for the current request.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.7.0"},{"name":"param","content":"<p>The comments page number link.</p>","types":["string"],"variable":"$result"}]},"args":1},{"name":"next_comments_link_attributes","file":"wp-includes/link-template.php","type":"filter","doc":{"description":"Filters the anchor tag attributes for the next comments page link.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.7.0"},{"name":"param","content":"<p>Attributes for the anchor tag.</p>","types":["string"],"variable":"$attributes"}]},"args":1},{"name":"previous_comments_link_attributes","file":"wp-includes/link-template.php","type":"filter","doc":{"description":"Filters the anchor tag attributes for the previous comments page link.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.7.0"},{"name":"param","content":"<p>Attributes for the anchor tag.</p>","types":["string"],"variable":"$attributes"}]},"args":1},{"name":"home_url","file":"wp-includes/link-template.php","type":"filter","doc":{"description":"Filters the home URL.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.0.0"},{"name":"param","content":"<p>The complete home URL including scheme and path.</p>","types":["string"],"variable":"$url"},{"name":"param","content":"<p>Path relative to the home URL. Blank string if no path is specified.</p>","types":["string"],"variable":"$path"},{"name":"param","content":"<p>Scheme to give the home URL context. Accepts 'http', 'https', 'relative', 'rest', or null.</p>","types":["string","null"],"variable":"$orig_scheme"},{"name":"param","content":"<p>Site ID, or null for the current site.</p>","types":["int","null"],"variable":"$blog_id"}]},"args":4},{"name":"site_url","file":"wp-includes/link-template.php","type":"filter","doc":{"description":"Filters the site URL.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.7.0"},{"name":"param","content":"<p>The complete site URL including scheme and path.</p>","types":["string"],"variable":"$url"},{"name":"param","content":"<p>Path relative to the site URL. Blank string if no path is specified.</p>","types":["string"],"variable":"$path"},{"name":"param","content":"<p>Scheme to give the site URL context. Accepts 'http', 'https', 'login', 'login_post', 'admin', 'relative' or null.</p>","types":["string","null"],"variable":"$scheme"},{"name":"param","content":"<p>Site ID, or null for the current site.</p>","types":["int","null"],"variable":"$blog_id"}]},"args":4},{"name":"admin_url","file":"wp-includes/link-template.php","type":"filter","doc":{"description":"Filters the admin area URL.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.8.0"},{"name":"since","content":"5.8.0","description":"<p>The <code>$scheme</code> parameter was added.</p>"},{"name":"param","content":"<p>The complete admin area URL including scheme and path.</p>","types":["string"],"variable":"$url"},{"name":"param","content":"<p>Path relative to the admin area URL. Blank string if no path is specified.</p>","types":["string"],"variable":"$path"},{"name":"param","content":"<p>Site ID, or null for the current site.</p>","types":["int","null"],"variable":"$blog_id"},{"name":"param","content":"<p>The scheme to use. Accepts 'http', 'https', 'admin', or null. Default 'admin', which obeys force_ssl_admin() and is_ssl().</p>","types":["string","null"],"variable":"$scheme"}]},"args":4},{"name":"includes_url","file":"wp-includes/link-template.php","type":"filter","doc":{"description":"Filters the URL to the includes directory.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.8.0"},{"name":"since","content":"5.8.0","description":"<p>The <code>$scheme</code> parameter was added.</p>"},{"name":"param","content":"<p>The complete URL to the includes directory including scheme and path.</p>","types":["string"],"variable":"$url"},{"name":"param","content":"<p>Path relative to the URL to the wp-includes directory. Blank string if no path is specified.</p>","types":["string"],"variable":"$path"},{"name":"param","content":"<p>Scheme to give the includes URL context. Accepts 'http', 'https', 'relative', or null. Default null.</p>","types":["string","null"],"variable":"$scheme"}]},"args":3},{"name":"content_url","file":"wp-includes/link-template.php","type":"filter","doc":{"description":"Filters the URL to the content directory.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.8.0"},{"name":"param","content":"<p>The complete URL to the content directory including scheme and path.</p>","types":["string"],"variable":"$url"},{"name":"param","content":"<p>Path relative to the URL to the content directory. Blank string if no path is specified.</p>","types":["string"],"variable":"$path"}]},"args":2},{"name":"plugins_url","file":"wp-includes/link-template.php","type":"filter","doc":{"description":"Filters the URL to the plugins directory.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.8.0"},{"name":"param","content":"<p>The complete URL to the plugins directory including scheme and path.</p>","types":["string"],"variable":"$url"},{"name":"param","content":"<p>Path relative to the URL to the plugins directory. Blank string if no path is specified.</p>","types":["string"],"variable":"$path"},{"name":"param","content":"<p>The plugin file path to be relative to. Blank string if no plugin is specified.</p>","types":["string"],"variable":"$plugin"}]},"args":3},{"name":"network_site_url","file":"wp-includes/link-template.php","type":"filter","doc":{"description":"Filters the network site URL.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.0.0"},{"name":"param","content":"<p>The complete network site URL including scheme and path.</p>","types":["string"],"variable":"$url"},{"name":"param","content":"<p>Path relative to the network site URL. Blank string if no path is specified.</p>","types":["string"],"variable":"$path"},{"name":"param","content":"<p>Scheme to give the URL context. Accepts 'http', 'https', 'relative' or null.</p>","types":["string","null"],"variable":"$scheme"}]},"args":3},{"name":"network_home_url","file":"wp-includes/link-template.php","type":"filter","doc":{"description":"Filters the network home URL.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.0.0"},{"name":"param","content":"<p>The complete network home URL including scheme and path.</p>","types":["string"],"variable":"$url"},{"name":"param","content":"<p>Path relative to the network home URL. Blank string if no path is specified.</p>","types":["string"],"variable":"$path"},{"name":"param","content":"<p>Scheme to give the URL context. Accepts 'http', 'https', 'relative' or null.</p>","types":["string","null"],"variable":"$orig_scheme"}]},"args":3},{"name":"network_admin_url","file":"wp-includes/link-template.php","type":"filter","doc":{"description":"Filters the network admin URL.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.0.0"},{"name":"since","content":"5.8.0","description":"<p>The <code>$scheme</code> parameter was added.</p>"},{"name":"param","content":"<p>The complete network admin URL including scheme and path.</p>","types":["string"],"variable":"$url"},{"name":"param","content":"<p>Path relative to the network admin URL. Blank string if no path is specified.</p>","types":["string"],"variable":"$path"},{"name":"param","content":"<p>The scheme to use. Accepts 'http', 'https', 'admin', or null. Default is 'admin', which obeys force_ssl_admin() and is_ssl().</p>","types":["string","null"],"variable":"$scheme"}]},"args":3},{"name":"user_admin_url","file":"wp-includes/link-template.php","type":"filter","doc":{"description":"Filters the user admin URL for the current user.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.1.0"},{"name":"since","content":"5.8.0","description":"<p>The <code>$scheme</code> parameter was added.</p>"},{"name":"param","content":"<p>The complete URL including scheme and path.</p>","types":["string"],"variable":"$url"},{"name":"param","content":"<p>Path relative to the URL. Blank string if no path is specified.</p>","types":["string"],"variable":"$path"},{"name":"param","content":"<p>The scheme to use. Accepts 'http', 'https', 'admin', or null. Default is 'admin', which obeys force_ssl_admin() and is_ssl().</p>","types":["string","null"],"variable":"$scheme"}]},"args":3},{"name":"self_admin_url","file":"wp-includes/link-template.php","type":"filter","doc":{"description":"Filters the admin URL for the current site or network depending on context.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.9.0"},{"name":"param","content":"<p>The complete URL including scheme and path.</p>","types":["string"],"variable":"$url"},{"name":"param","content":"<p>Path relative to the URL. Blank string if no path is specified.</p>","types":["string"],"variable":"$path"},{"name":"param","content":"<p>The scheme to use.</p>","types":["string"],"variable":"$scheme"}]},"args":3},{"name":"set_url_scheme","file":"wp-includes/link-template.php","type":"filter","doc":{"description":"Filters the resulting URL after setting the scheme.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.4.0"},{"name":"param","content":"<p>The complete URL including scheme and path.</p>","types":["string"],"variable":"$url"},{"name":"param","content":"<p>Scheme applied to the URL. One of 'http', 'https', or 'relative'.</p>","types":["string"],"variable":"$scheme"},{"name":"param","content":"<p>Scheme requested for the URL. One of 'http', 'https', 'login', 'login_post', 'admin', 'relative', 'rest', 'rpc', or null.</p>","types":["string","null"],"variable":"$orig_scheme"}]},"args":3},{"name":"user_dashboard_url","file":"wp-includes/link-template.php","type":"filter","doc":{"description":"Filters the dashboard URL for a user.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.1.0"},{"name":"param","content":"<p>The complete URL including scheme and path.</p>","types":["string"],"variable":"$url"},{"name":"param","content":"<p>The user ID.</p>","types":["int"],"variable":"$user_id"},{"name":"param","content":"<p>Path relative to the URL. Blank string if no path is specified.</p>","types":["string"],"variable":"$path"},{"name":"param","content":"<p>Scheme to give the URL context. Accepts 'http', 'https', 'login', 'login_post', 'admin', 'relative' or null.</p>","types":["string"],"variable":"$scheme"}]},"args":4},{"name":"edit_profile_url","file":"wp-includes/link-template.php","type":"filter","doc":{"description":"Filters the URL for a user's profile editor.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.1.0"},{"name":"param","content":"<p>The complete URL including scheme and path.</p>","types":["string"],"variable":"$url"},{"name":"param","content":"<p>The user ID.</p>","types":["int"],"variable":"$user_id"},{"name":"param","content":"<p>Scheme to give the URL context. Accepts 'http', 'https', 'login', 'login_post', 'admin', 'relative' or null.</p>","types":["string"],"variable":"$scheme"}]},"args":3},{"name":"get_canonical_url","file":"wp-includes/link-template.php","type":"filter","doc":{"description":"Filters the canonical URL for a post.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.6.0"},{"name":"param","content":"<p>The post's canonical URL.</p>","types":["string"],"variable":"$canonical_url"},{"name":"param","content":"<p>Post object.</p>","types":["\\WP_Post"],"variable":"$post"}]},"args":2},{"name":"pre_get_shortlink","file":"wp-includes/link-template.php","type":"filter","doc":{"description":"Filters whether to preempt generating a shortlink for the given post.","long_description":"Returning a value other than false from the filter will short-circuit the shortlink generation process, returning that value instead.","long_description_html":"<p>Returning a value other than false from the filter will short-circuit the shortlink generation process, returning that value instead.</p>","tags":[{"name":"since","content":"3.0.0"},{"name":"param","content":"<p>Short-circuit return value. Either false or a URL string.</p>","types":["false","string"],"variable":"$return"},{"name":"param","content":"<p>Post ID, or 0 for the current post.</p>","types":["int"],"variable":"$id"},{"name":"param","content":"<p>The context for the link. One of 'post' or 'query',</p>","types":["string"],"variable":"$context"},{"name":"param","content":"<p>Whether to allow post slugs in the shortlink.</p>","types":["bool"],"variable":"$allow_slugs"}]},"args":4},{"name":"get_shortlink","file":"wp-includes/link-template.php","type":"filter","doc":{"description":"Filters the shortlink for a post.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.0.0"},{"name":"param","content":"<p>Shortlink URL.</p>","types":["string"],"variable":"$shortlink"},{"name":"param","content":"<p>Post ID, or 0 for the current post.</p>","types":["int"],"variable":"$id"},{"name":"param","content":"<p>The context for the link. One of 'post' or 'query',</p>","types":["string"],"variable":"$context"},{"name":"param","content":"<p>Whether to allow post slugs in the shortlink. Not used by default.</p>","types":["bool"],"variable":"$allow_slugs"}]},"args":4},{"name":"the_shortlink","file":"wp-includes/link-template.php","type":"filter","doc":{"description":"Filters the short link anchor tag for a post.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.0.0"},{"name":"param","content":"<p>Shortlink anchor tag.</p>","types":["string"],"variable":"$link"},{"name":"param","content":"<p>Shortlink URL.</p>","types":["string"],"variable":"$shortlink"},{"name":"param","content":"<p>Shortlink's text.</p>","types":["string"],"variable":"$text"},{"name":"param","content":"<p>Shortlink's title attribute.</p>","types":["string"],"variable":"$title"}]},"args":4},{"name":"get_avatar_comment_types","file":"wp-includes/link-template.php","type":"filter","doc":{"description":"Filters the list of allowed comment types for retrieving avatars.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.0.0"},{"name":"param","content":"<p>An array of content types. Default only contains 'comment'.</p>","types":["array"],"variable":"$types"}]},"args":1},{"name":"pre_get_avatar_data","file":"wp-includes/link-template.php","type":"filter","doc":{"description":"Filters whether to retrieve the avatar URL early.","long_description":"Passing a non-null value in the 'url' member of the return array will effectively short circuit get_avatar_data(), passing the value through the {@see 'get_avatar_data'} filter and returning early.","long_description_html":"<p>Passing a non-null value in the 'url' member of the return array will effectively short circuit get_avatar_data(), passing the value through the {@see 'get_avatar_data'} filter and returning early.</p>","tags":[{"name":"since","content":"4.2.0"},{"name":"param","content":"<p>Arguments passed to get_avatar_data(), after processing.</p>","types":["array"],"variable":"$args"},{"name":"param","content":"<p>The avatar to retrieve. Accepts a user ID, Gravatar MD5 hash, user email, WP_User object, WP_Post object, or WP_Comment object.</p>","types":["mixed"],"variable":"$id_or_email"}]},"args":2},{"name":"get_avatar_url","file":"wp-includes/link-template.php","type":"filter","doc":{"description":"Filters the avatar URL.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.2.0"},{"name":"param","content":"<p>The URL of the avatar.</p>","types":["string"],"variable":"$url"},{"name":"param","content":"<p>The avatar to retrieve. Accepts a user ID, Gravatar MD5 hash, user email, WP_User object, WP_Post object, or WP_Comment object.</p>","types":["mixed"],"variable":"$id_or_email"},{"name":"param","content":"<p>Arguments passed to get_avatar_data(), after processing.</p>","types":["array"],"variable":"$args"}]},"args":3},{"name":"get_avatar_data","file":"wp-includes/link-template.php","type":"filter","doc":{"description":"Filters the avatar data.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.2.0"},{"name":"param","content":"<p>Arguments passed to get_avatar_data(), after processing.</p>","types":["array"],"variable":"$args"},{"name":"param","content":"<p>The avatar to retrieve. Accepts a user ID, Gravatar MD5 hash, user email, WP_User object, WP_Post object, or WP_Comment object.</p>","types":["mixed"],"variable":"$id_or_email"}]},"args":2},{"name":"theme_file_uri","file":"wp-includes/link-template.php","type":"filter","doc":{"description":"Filters the URL to a file in the theme.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.7.0"},{"name":"param","content":"<p>The file URL.</p>","types":["string"],"variable":"$url"},{"name":"param","content":"<p>The requested file to search for.</p>","types":["string"],"variable":"$file"}]},"args":2},{"name":"parent_theme_file_uri","file":"wp-includes/link-template.php","type":"filter","doc":{"description":"Filters the URL to a file in the parent theme.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.7.0"},{"name":"param","content":"<p>The file URL.</p>","types":["string"],"variable":"$url"},{"name":"param","content":"<p>The requested file to search for.</p>","types":["string"],"variable":"$file"}]},"args":2},{"name":"theme_file_path","file":"wp-includes/link-template.php","type":"filter","doc":{"description":"Filters the path to a file in the theme.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.7.0"},{"name":"param","content":"<p>The file path.</p>","types":["string"],"variable":"$path"},{"name":"param","content":"<p>The requested file to search for.</p>","types":["string"],"variable":"$file"}]},"args":2},{"name":"parent_theme_file_path","file":"wp-includes/link-template.php","type":"filter","doc":{"description":"Filters the path to a file in the parent theme.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.7.0"},{"name":"param","content":"<p>The file path.</p>","types":["string"],"variable":"$path"},{"name":"param","content":"<p>The requested file to search for.</p>","types":["string"],"variable":"$file"}]},"args":2},{"name":"privacy_policy_url","file":"wp-includes/link-template.php","type":"filter","doc":{"description":"Filters the URL of the privacy policy page.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.9.6"},{"name":"param","content":"<p>The URL to the privacy policy page. Empty string if it doesn't exist.</p>","types":["string"],"variable":"$url"},{"name":"param","content":"<p>The ID of privacy policy page.</p>","types":["int"],"variable":"$policy_page_id"}]},"args":2},{"name":"the_privacy_policy_link","file":"wp-includes/link-template.php","type":"filter","doc":{"description":"Filters the privacy policy link.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.9.6"},{"name":"param","content":"<p>The privacy policy link. Empty string if it doesn't exist.</p>","types":["string"],"variable":"$link"},{"name":"param","content":"<p>The URL of the privacy policy. Empty string if it doesn't exist.</p>","types":["string"],"variable":"$privacy_policy_url"}]},"args":2},{"name":"wp_internal_hosts","file":"wp-includes/link-template.php","type":"filter","doc":{"description":"Filters the array of URL hosts which are considered internal.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"6.2.0"},{"name":"param","content":"<p>An array of internal URL hostnames.</p>","types":["string[]"],"variable":"$internal_hosts"}]},"args":1},{"name":"site_details","file":"wp-includes/class-wp-site.php","type":"filter","doc":{"description":"Filters a site's extended properties.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.6.0"},{"name":"param","content":"<p>The site details.</p>","types":["\\stdClass"],"variable":"$details"}]},"args":1},{"name":"wp_theme_json_get_style_nodes","file":"wp-includes/class-wp-theme-json.php","type":"filter","doc":{"description":"Filters the list of style nodes with metadata.","long_description":"This allows for things like loading block CSS independently.","long_description_html":"<p>This allows for things like loading block CSS independently.</p>","tags":[{"name":"since","content":"6.1.0"},{"name":"param","content":"<p>Style nodes with metadata.</p>","types":["array"],"variable":"$nodes"}]},"args":1},{"name":"pre_get_main_site_id","file":"wp-includes/class-wp-network.php","type":"filter","doc":{"description":"Filters the main site ID.","long_description":"Returning a positive integer will effectively short-circuit the function.","long_description_html":"<p>Returning a positive integer will effectively short-circuit the function.</p>","tags":[{"name":"since","content":"4.9.0"},{"name":"param","content":"<p>If a positive integer is returned, it is interpreted as the main site ID.</p>","types":["int","null"],"variable":"$main_site_id"},{"name":"param","content":"<p>The network object for which the main site was detected.</p>","types":["\\WP_Network"],"variable":"$network"}]},"args":2},{"name":"network_by_path_segments_count","file":"wp-includes/class-wp-network.php","type":"filter","doc":{"description":"Filters the number of path segments to consider when searching for a site.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.9.0"},{"name":"param","content":"<p>The number of path segments to consider. WordPress by default looks at one path segment. The function default of null only makes sense when you know the requested path should match a network.</p>","types":["int","null"],"variable":"$segments"},{"name":"param","content":"<p>The requested domain.</p>","types":["string"],"variable":"$domain"},{"name":"param","content":"<p>The requested path, in full.</p>","types":["string"],"variable":"$path"}]},"args":3},{"name":"pre_get_network_by_path","file":"wp-includes/class-wp-network.php","type":"filter","doc":{"description":"Determines a network by its domain and path.","long_description":"This allows one to short-circuit the default logic, perhaps by replacing it with a routine that is more optimal for your setup.\n Return null to avoid the short-circuit. Return false if no network can be found at the requested domain and path. Otherwise, return an object from wp_get_network().","long_description_html":"<p>This allows one to short-circuit the default logic, perhaps by replacing it with a routine that is more optimal for your setup.</p> <p>Return null to avoid the short-circuit. Return false if no network can be found at the requested domain and path. Otherwise, return an object from wp_get_network().</p>","tags":[{"name":"since","content":"3.9.0"},{"name":"param","content":"<p>Network value to return by path. Default null to continue retrieving the network.</p>","types":["null","false","\\WP_Network"],"variable":"$network"},{"name":"param","content":"<p>The requested domain.</p>","types":["string"],"variable":"$domain"},{"name":"param","content":"<p>The requested path, in full.</p>","types":["string"],"variable":"$path"},{"name":"param","content":"<p>The suggested number of paths to consult. Default null, meaning the entire path was to be consulted.</p>","types":["int","null"],"variable":"$segments"},{"name":"param","content":"<p>Array of paths to search for, based on <code>$path</code> and <code>$segments</code>.</p>","types":["string[]"],"variable":"$paths"}]},"args":5},{"name":"date_i18n","file":"wp-includes/functions.php","type":"filter","doc":{"description":"Filters the date formatted based on the locale.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.8.0"},{"name":"param","content":"<p>Formatted date string.</p>","types":["string"],"variable":"$date"},{"name":"param","content":"<p>Format to display the date.</p>","types":["string"],"variable":"$format"},{"name":"param","content":"<p>A sum of Unix timestamp and timezone offset in seconds. Might be without offset if input omitted timestamp but requested GMT.</p>","types":["int"],"variable":"$timestamp"},{"name":"param","content":"<p>Whether to use GMT timezone. Only applies if timestamp was not provided. Default false.</p>","types":["bool"],"variable":"$gmt"}]},"args":4},{"name":"wp_date","file":"wp-includes/functions.php","type":"filter","doc":{"description":"Filters the date formatted based on the locale.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.3.0"},{"name":"param","content":"<p>Formatted date string.</p>","types":["string"],"variable":"$date"},{"name":"param","content":"<p>Format to display the date.</p>","types":["string"],"variable":"$format"},{"name":"param","content":"<p>Unix timestamp.</p>","types":["int"],"variable":"$timestamp"},{"name":"param","content":"<p>Timezone.</p>","types":["\\DateTimeZone"],"variable":"$timezone"}]},"args":4},{"name":"number_format_i18n","file":"wp-includes/functions.php","type":"filter","doc":{"description":"Filters the number formatted based on the locale.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.8.0"},{"name":"since","content":"4.9.0","description":"<p>The <code>$number</code> and <code>$decimals</code> parameters were added.</p>"},{"name":"param","content":"<p>Converted number in string format.</p>","types":["string"],"variable":"$formatted"},{"name":"param","content":"<p>The number to convert based on locale.</p>","types":["float"],"variable":"$number"},{"name":"param","content":"<p>Precision of the number of decimal places.</p>","types":["int"],"variable":"$decimals"}]},"args":3},{"name":"enclosure_links","file":"wp-includes/functions.php","type":"filter","doc":{"description":"Filters the list of enclosure links before querying the database.","long_description":"Allows for the addition and/or removal of potential enclosures to save to postmeta before checking the database for existing enclosures.","long_description_html":"<p>Allows for the addition and/or removal of potential enclosures to save to postmeta before checking the database for existing enclosures.</p>","tags":[{"name":"since","content":"4.4.0"},{"name":"param","content":"<p>An array of enclosure links.</p>","types":["string[]"],"variable":"$post_links"},{"name":"param","content":"<p>Post ID.</p>","types":["int"],"variable":"$post_id"}]},"args":2},{"name":"removable_query_args","file":"wp-includes/functions.php","type":"filter","doc":{"description":"Filters the list of query variable names to remove.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.2.0"},{"name":"param","content":"<p>An array of query variable names to remove from a URL.</p>","types":["string[]"],"variable":"$removable_query_args"}]},"args":1},{"name":"status_header","file":"wp-includes/functions.php","type":"filter","doc":{"description":"Filters an HTTP status header.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.2.0"},{"name":"param","content":"<p>HTTP status header.</p>","types":["string"],"variable":"$status_header"},{"name":"param","content":"<p>HTTP status code.</p>","types":["int"],"variable":"$code"},{"name":"param","content":"<p>Description for the status code.</p>","types":["string"],"variable":"$description"},{"name":"param","content":"<p>Server protocol.</p>","types":["string"],"variable":"$protocol"}]},"args":4},{"name":"nocache_headers","file":"wp-includes/functions.php","type":"filter","doc":{"description":"Filters the cache-controlling HTTP headers that are used to prevent caching.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.8.0"},{"name":"see","content":"","refers":"wp_get_nocache_headers()"},{"name":"param","content":"<p>Header names and field values.</p>","types":["array"],"variable":"$headers"}]},"args":1},{"name":"robots_txt","file":"wp-includes/functions.php","type":"filter","doc":{"description":"Filters the robots.txt output.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.0.0"},{"name":"param","content":"<p>The robots.txt output.</p>","types":["string"],"variable":"$output"},{"name":"param","content":"<p>Whether the site is considered &quot;public&quot;.</p>","types":["bool"],"variable":"$public"}]},"args":2},{"name":"upload_dir","file":"wp-includes/functions.php","type":"filter","doc":{"description":"Filters the uploads directory data.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.0.0"},{"name":"param","content":"<p>{ Array of information about the upload directory.</p>","types":["array"],"variable":"$uploads"}]},"args":1},{"name":"pre_wp_unique_filename_file_list","file":"wp-includes/functions.php","type":"filter","doc":{"description":"Filters the file list used for calculating a unique filename for a newly added file.","long_description":"Returning an array from the filter will effectively short-circuit retrieval from the filesystem and return the passed value instead.","long_description_html":"<p>Returning an array from the filter will effectively short-circuit retrieval from the filesystem and return the passed value instead.</p>","tags":[{"name":"since","content":"5.5.0"},{"name":"param","content":"<p>The list of files to use for filename comparisons. Default null (to retrieve the list from the filesystem).</p>","types":["array","null"],"variable":"$files"},{"name":"param","content":"<p>The directory for the new file.</p>","types":["string"],"variable":"$dir"},{"name":"param","content":"<p>The proposed filename for the new file.</p>","types":["string"],"variable":"$filename"}]},"args":3},{"name":"wp_unique_filename","file":"wp-includes/functions.php","type":"filter","doc":{"description":"Filters the result when generating a unique file name.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.5.0"},{"name":"since","content":"5.8.1","description":"<p>The <code>$alt_filenames</code> and <code>$number</code> parameters were added.</p>"},{"name":"param","content":"<p>Unique file name.</p>","types":["string"],"variable":"$filename"},{"name":"param","content":"<p>File extension. Example: &quot;.png&quot;.</p>","types":["string"],"variable":"$ext"},{"name":"param","content":"<p>Directory path.</p>","types":["string"],"variable":"$dir"},{"name":"param","content":"<p>Callback function that generates the unique file name.</p>","types":["callable","null"],"variable":"$unique_filename_callback"},{"name":"param","content":"<p>Array of alternate file names that were checked for collisions.</p>","types":["string[]"],"variable":"$alt_filenames"},{"name":"param","content":"<p>The highest number that was used to make the file name unique or an empty string if unused.</p>","types":["int","string"],"variable":"$number"}]},"args":6},{"name":"wp_upload_bits","file":"wp-includes/functions.php","type":"filter","doc":{"description":"Filters whether to treat the upload bits as an error.","long_description":"Returning a non-array from the filter will effectively short-circuit preparing the upload bits and return that value instead. An error message should be returned as a string.","long_description_html":"<p>Returning a non-array from the filter will effectively short-circuit preparing the upload bits and return that value instead. An error message should be returned as a string.</p>","tags":[{"name":"since","content":"3.0.0"},{"name":"param","content":"<p>An array of upload bits data, or error message to return.</p>","types":["array","string"],"variable":"$upload_bits_error"}]},"args":1},{"name":"getimagesize_mimes_to_exts","file":"wp-includes/functions.php","type":"filter","doc":{"description":"Filters the list mapping image mime types to their respective extensions.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.0.0"},{"name":"param","content":"<p>Array of image mime types and their matching extensions.</p>","types":["array"],"variable":"$mime_to_ext"}]},"args":1},{"name":"wp_check_filetype_and_ext","file":"wp-includes/functions.php","type":"filter","doc":{"description":"Filters the \"real\" file type of the given file.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.0.0"},{"name":"since","content":"5.1.0","description":"<p>The $real_mime parameter was added.</p>"},{"name":"param","content":"<p>{ Values for the extension, mime type, and corrected filename.</p>","types":["array"],"variable":"$wp_check_filetype_and_ext"},{"name":"param","content":"<p>Full path to the file.</p>","types":["string"],"variable":"$file"},{"name":"param","content":"<p>The name of the file (may differ from $file due to $file being in a tmp directory).</p>","types":["string"],"variable":"$filename"},{"name":"param","content":"<p>Array of mime types keyed by their file extension regex, or null if none were provided.</p>","types":["string[]","null"],"variable":"$mimes"},{"name":"param","content":"<p>The actual mime type or false if the type cannot be determined.</p>","types":["string","false"],"variable":"$real_mime"}]},"args":5},{"name":"mime_types","file":"wp-includes/functions.php","type":"filter","doc":{"description":"Filters the list of mime types and file extensions.","long_description":"This filter should be used to add, not remove, mime types. To remove mime types, use the {@see 'upload_mimes'} filter.","long_description_html":"<p>This filter should be used to add, not remove, mime types. To remove mime types, use the {@see 'upload_mimes'} filter.</p>","tags":[{"name":"since","content":"3.5.0"},{"name":"param","content":"<p>Mime types keyed by the file extension regex corresponding to those types.</p>","types":["string[]"],"variable":"$wp_get_mime_types"}]},"args":1},{"name":"ext2type","file":"wp-includes/functions.php","type":"filter","doc":{"description":"Filters file type based on the extension name.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.5.0"},{"name":"see","content":"","refers":"wp_ext2type()"},{"name":"param","content":"<p>Multi-dimensional array of file extensions types keyed by the type of file.</p>","types":["array[]"],"variable":"$ext2type"}]},"args":1},{"name":"pre_wp_filesize","file":"wp-includes/functions.php","type":"filter","doc":{"description":"Filters the result of wp_filesize before the PHP function is run.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"6.0.0"},{"name":"param","content":"<p>The unfiltered value. Returning an int from the callback bypasses the filesize call.</p>","types":["null","int"],"variable":"$size"},{"name":"param","content":"<p>Path to the file.</p>","types":["string"],"variable":"$path"}]},"args":2},{"name":"wp_filesize","file":"wp-includes/functions.php","type":"filter","doc":{"description":"Filters the size of the file.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"6.0.0"},{"name":"param","content":"<p>The result of PHP filesize on the file.</p>","types":["int"],"variable":"$size"},{"name":"param","content":"<p>Path to the file.</p>","types":["string"],"variable":"$path"}]},"args":2},{"name":"upload_mimes","file":"wp-includes/functions.php","type":"filter","doc":{"description":"Filters the list of allowed mime types and file extensions.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.0.0"},{"name":"param","content":"<p>Mime types keyed by the file extension regex corresponding to those types.</p>","types":["array"],"variable":"$t"},{"name":"param","content":"<p>User ID, User object or null if not provided (indicates current user).</p>","types":["int","\\WP_User","null"],"variable":"$user"}]},"args":2},{"name":"wp_die_ajax_handler","file":"wp-includes/functions.php","type":"filter","doc":{"description":"Filters the callback for killing WordPress execution for Ajax requests.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.4.0"},{"name":"param","content":"<p>Callback function name.</p>","types":["callable"],"variable":"$callback"}]},"args":1},{"name":"wp_die_json_handler","file":"wp-includes/functions.php","type":"filter","doc":{"description":"Filters the callback for killing WordPress execution for JSON requests.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.1.0"},{"name":"param","content":"<p>Callback function name.</p>","types":["callable"],"variable":"$callback"}]},"args":1},{"name":"wp_die_jsonp_handler","file":"wp-includes/functions.php","type":"filter","doc":{"description":"Filters the callback for killing WordPress execution for JSONP REST requests.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.2.0"},{"name":"param","content":"<p>Callback function name.</p>","types":["callable"],"variable":"$callback"}]},"args":1},{"name":"wp_die_xmlrpc_handler","file":"wp-includes/functions.php","type":"filter","doc":{"description":"Filters the callback for killing WordPress execution for XML-RPC requests.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.4.0"},{"name":"param","content":"<p>Callback function name.</p>","types":["callable"],"variable":"$callback"}]},"args":1},{"name":"wp_die_xml_handler","file":"wp-includes/functions.php","type":"filter","doc":{"description":"Filters the callback for killing WordPress execution for XML requests.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.2.0"},{"name":"param","content":"<p>Callback function name.</p>","types":["callable"],"variable":"$callback"}]},"args":1},{"name":"wp_die_handler","file":"wp-includes/functions.php","type":"filter","doc":{"description":"Filters the callback for killing WordPress execution for all non-Ajax, non-JSON, non-XML requests.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.0.0"},{"name":"param","content":"<p>Callback function name.</p>","types":["callable"],"variable":"$callback"}]},"args":1},{"name":"smilies","file":"wp-includes/functions.php","type":"filter","doc":{"description":"Filters all the smilies.","long_description":"This filter must be added before `smilies_init` is run, as it is normally only run once to setup the smilies regex.","long_description_html":"<p>This filter must be added before <code>smilies_init</code> is run, as it is normally only run once to setup the smilies regex.</p>","tags":[{"name":"since","content":"4.7.0"},{"name":"param","content":"<p>List of the smilies' hexadecimal representations, keyed by their smily code.</p>","types":["string[]"],"variable":"$wpsmiliestrans"}]},"args":1},{"name":"load_default_widgets","file":"wp-includes/functions.php","type":"filter","doc":{"description":"Filters whether to load the Widgets library.","long_description":"Returning a falsey value from the filter will effectively short-circuit the Widgets library from loading.","long_description_html":"<p>Returning a falsey value from the filter will effectively short-circuit the Widgets library from loading.</p>","tags":[{"name":"since","content":"2.8.0"},{"name":"param","content":"<p>Whether to load the Widgets library. Default true.</p>","types":["bool"],"variable":"$wp_maybe_load_widgets"}]},"args":1},{"name":"deprecated_function_trigger_error","file":"wp-includes/functions.php","type":"filter","doc":{"description":"Filters whether to trigger an error for deprecated functions.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.5.0"},{"name":"param","content":"<p>Whether to trigger the error for deprecated functions. Default true.</p>","types":["bool"],"variable":"$trigger"}]},"args":1},{"name":"deprecated_constructor_trigger_error","file":"wp-includes/functions.php","type":"filter","doc":{"description":"Filters whether to trigger an error for deprecated functions.","long_description":"`WP_DEBUG` must be true in addition to the filter evaluating to true.","long_description_html":"<p><code>WP_DEBUG</code> must be true in addition to the filter evaluating to true.</p>","tags":[{"name":"since","content":"4.3.0"},{"name":"param","content":"<p>Whether to trigger the error for deprecated functions. Default true.</p>","types":["bool"],"variable":"$trigger"}]},"args":1},{"name":"deprecated_class_trigger_error","file":"wp-includes/functions.php","type":"filter","doc":{"description":"Filters whether to trigger an error for a deprecated class.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"6.4.0"},{"name":"param","content":"<p>Whether to trigger an error for a deprecated class. Default true.</p>","types":["bool"],"variable":"$trigger"}]},"args":1},{"name":"deprecated_file_trigger_error","file":"wp-includes/functions.php","type":"filter","doc":{"description":"Filters whether to trigger an error for deprecated files.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.5.0"},{"name":"param","content":"<p>Whether to trigger the error for deprecated files. Default true.</p>","types":["bool"],"variable":"$trigger"}]},"args":1},{"name":"deprecated_argument_trigger_error","file":"wp-includes/functions.php","type":"filter","doc":{"description":"Filters whether to trigger an error for deprecated arguments.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.0.0"},{"name":"param","content":"<p>Whether to trigger the error for deprecated arguments. Default true.</p>","types":["bool"],"variable":"$trigger"}]},"args":1},{"name":"deprecated_hook_trigger_error","file":"wp-includes/functions.php","type":"filter","doc":{"description":"Filters whether to trigger deprecated hook errors.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.6.0"},{"name":"param","content":"<p>Whether to trigger deprecated hook errors. Requires <code>WP_DEBUG</code> to be defined true.</p>","types":["bool"],"variable":"$trigger"}]},"args":1},{"name":"doing_it_wrong_trigger_error","file":"wp-includes/functions.php","type":"filter","doc":{"description":"Filters whether to trigger an error for _doing_it_wrong() calls.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.1.0"},{"name":"since","content":"5.1.0","description":"<p>Added the $function_name, $message and $version parameters.</p>"},{"name":"param","content":"<p>Whether to trigger the error for _doing_it_wrong() calls. Default true.</p>","types":["bool"],"variable":"$trigger"},{"name":"param","content":"<p>The function that was called.</p>","types":["string"],"variable":"$function_name"},{"name":"param","content":"<p>A message explaining what has been done incorrectly.</p>","types":["string"],"variable":"$message"},{"name":"param","content":"<p>The version of WordPress where the message was added.</p>","types":["string"],"variable":"$version"}]},"args":4},{"name":"iis7_supports_permalinks","file":"wp-includes/functions.php","type":"filter","doc":{"description":"Filters whether IIS 7+ supports pretty permalinks.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.8.0"},{"name":"param","content":"<p>Whether IIS7 supports permalinks. Default false.</p>","types":["bool"],"variable":"$supports_permalinks"}]},"args":1},{"name":"get_main_network_id","file":"wp-includes/functions.php","type":"filter","doc":{"description":"Filters the main network ID.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.3.0"},{"name":"param","content":"<p>The ID of the main network.</p>","types":["int"],"variable":"$main_network_id"}]},"args":1},{"name":"extra_{$context}_headers","file":"wp-includes/functions.php","type":"filter","doc":{"description":"Filters extra file headers by context.","long_description":"The dynamic portion of the hook name, `$context`, refers to the context where extra headers might be loaded.","long_description_html":"<p>The dynamic portion of the hook name, <code>$context</code>, refers to the context where extra headers might be loaded.</p>","tags":[{"name":"since","content":"2.9.0"},{"name":"param","content":"<p>Empty array by default.</p>","types":["array"],"variable":"$extra_context_headers"}]},"args":1},{"name":"kses_allowed_protocols","file":"wp-includes/functions.php","type":"filter","doc":{"description":"Filters the list of protocols allowed in HTML attributes.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.0.0"},{"name":"param","content":"<p>Array of allowed protocols e.g. 'http', 'ftp', 'tel', and more.</p>","types":["string[]"],"variable":"$protocols"}]},"args":1},{"name":"wp_checkdate","file":"wp-includes/functions.php","type":"filter","doc":{"description":"Filters whether the given date is valid for the Gregorian calendar.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.5.0"},{"name":"param","content":"<p>Whether the given date is valid.</p>","types":["bool"],"variable":"$checkdate"},{"name":"param","content":"<p>Date to check.</p>","types":["string"],"variable":"$source_date"}]},"args":2},{"name":"wp_auth_check_load","file":"wp-includes/functions.php","type":"filter","doc":{"description":"Filters whether to load the authentication check.","long_description":"Returning a falsey value from the filter will effectively short-circuit loading the authentication check.","long_description_html":"<p>Returning a falsey value from the filter will effectively short-circuit loading the authentication check.</p>","tags":[{"name":"since","content":"3.6.0"},{"name":"param","content":"<p>Whether to load the authentication check.</p>","types":["bool"],"variable":"$show"},{"name":"param","content":"<p>The current screen object.</p>","types":["\\WP_Screen"],"variable":"$screen"}]},"args":2},{"name":"wp_auth_check_same_domain","file":"wp-includes/functions.php","type":"filter","doc":{"description":"Filters whether the authentication check originated at the same domain.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.6.0"},{"name":"param","content":"<p>Whether the authentication check originated at the same domain.</p>","types":["bool"],"variable":"$same_domain"}]},"args":1},{"name":"wp_delete_file","file":"wp-includes/functions.php","type":"filter","doc":{"description":"Filters the path of the file to delete.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.1.0"},{"name":"param","content":"<p>Path to the file to delete.</p>","types":["string"],"variable":"$file"}]},"args":1},{"name":"admin_memory_limit","file":"wp-includes/functions.php","type":"filter","doc":{"description":"Filters the maximum memory limit available for administration screens.","long_description":"This only applies to administrators, who may require more memory for tasks like updates. Memory limits when processing images (uploaded or edited by users of any role) are handled separately.\n The `WP_MAX_MEMORY_LIMIT` constant specifically defines the maximum memory limit available when in the administration back end. The default is 256M (256 megabytes of memory) or the original `memory_limit` php.ini value if this is higher.","long_description_html":"<p>This only applies to administrators, who may require more memory for tasks like updates. Memory limits when processing images (uploaded or edited by users of any role) are handled separately.</p> <p>The <code>WP_MAX_MEMORY_LIMIT</code> constant specifically defines the maximum memory limit available when in the administration back end. The default is 256M (256 megabytes of memory) or the original <code>memory_limit</code> php.ini value if this is higher.</p>","tags":[{"name":"since","content":"3.0.0"},{"name":"since","content":"4.6.0","description":"<p>The default now takes the original <code>memory_limit</code> into account.</p>"},{"name":"param","content":"<p>The maximum WordPress memory limit. Accepts an integer (bytes), or a shorthand string notation, such as '256M'.</p>","types":["int","string"],"variable":"$filtered_limit"}]},"args":1},{"name":"image_memory_limit","file":"wp-includes/functions.php","type":"filter","doc":{"description":"Filters the memory limit allocated for image manipulation.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.5.0"},{"name":"since","content":"4.6.0","description":"<p>The default now takes the original <code>memory_limit</code> into account.</p>"},{"name":"param","content":"<p>Maximum memory limit to allocate for image processing. Default <code>WP_MAX_MEMORY_LIMIT</code> or the original php.ini <code>memory_limit</code>, whichever is higher. Accepts an integer (bytes), or a shorthand string notation, such as '256M'.</p>","types":["int","string"],"variable":"$filtered_limit"}]},"args":1},{"name":"cron_memory_limit","file":"wp-includes/functions.php","type":"filter","doc":{"description":"Filters the memory limit allocated for WP-Cron event processing.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"6.3.0"},{"name":"param","content":"<p>Maximum memory limit to allocate for WP-Cron. Default <code>WP_MAX_MEMORY_LIMIT</code> or the original php.ini <code>memory_limit</code>, whichever is higher. Accepts an integer (bytes), or a shorthand string notation, such as '256M'.</p>","types":["int","string"],"variable":"$filtered_limit"}]},"args":1},{"name":"{$context}_memory_limit","file":"wp-includes/functions.php","type":"filter","doc":{"description":"Filters the memory limit allocated for an arbitrary context.","long_description":"The dynamic portion of the hook name, `$context`, refers to an arbitrary context passed on calling the function. This allows for plugins to define their own contexts for raising the memory limit.","long_description_html":"<p>The dynamic portion of the hook name, <code>$context</code>, refers to an arbitrary context passed on calling the function. This allows for plugins to define their own contexts for raising the memory limit.</p>","tags":[{"name":"since","content":"4.6.0"},{"name":"param","content":"<p>Maximum memory limit to allocate for this context. Default WP_MAX_MEMORY_LIMIT<code>or the original php.ini</code>memory_limit`, whichever is higher. Accepts an integer (bytes), or a shorthand string notation, such as '256M'.</p>","types":["int","string"],"variable":"$filtered_limit"}]},"args":1},{"name":"send_site_admin_email_change_email","file":"wp-includes/functions.php","type":"filter","doc":{"description":"Filters whether to send the site admin email change notification email.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.9.0"},{"name":"param","content":"<p>Whether to send the email notification.</p>","types":["bool"],"variable":"$send"},{"name":"param","content":"<p>The old site admin email address.</p>","types":["string"],"variable":"$old_email"},{"name":"param","content":"<p>The new site admin email address.</p>","types":["string"],"variable":"$new_email"}]},"args":3},{"name":"site_admin_email_change_email","file":"wp-includes/functions.php","type":"filter","doc":{"description":"Filters the contents of the email notification sent when the site admin email address is changed.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.9.0"},{"name":"param","content":"<p>{ Used to build wp_mail().</p>","types":["array"],"variable":"$email_change_email"},{"name":"param","content":"<p>The old site admin email address.</p>","types":["string"],"variable":"$old_email"},{"name":"param","content":"<p>The new site admin email address.</p>","types":["string"],"variable":"$new_email"}]},"args":3},{"name":"wp_privacy_anonymize_data","file":"wp-includes/functions.php","type":"filter","doc":{"description":"Filters the anonymous data for each type.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.9.6"},{"name":"param","content":"<p>Anonymized data.</p>","types":["string"],"variable":"$anonymous"},{"name":"param","content":"<p>Type of the data.</p>","types":["string"],"variable":"$type"},{"name":"param","content":"<p>Original data.</p>","types":["string"],"variable":"$data"}]},"args":3},{"name":"wp_privacy_exports_dir","file":"wp-includes/functions.php","type":"filter","doc":{"description":"Filters the directory used to store personal data export files.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.9.6"},{"name":"since","content":"5.5.0","description":"<p>Exports now use relative paths, so changes to the directory via this filter should be reflected on the server.</p>"},{"name":"param","content":"<p>Exports directory.</p>","types":["string"],"variable":"$exports_dir"}]},"args":1},{"name":"wp_privacy_exports_url","file":"wp-includes/functions.php","type":"filter","doc":{"description":"Filters the URL of the directory used to store personal data export files.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.9.6"},{"name":"since","content":"5.5.0","description":"<p>Exports now use relative paths, so changes to the directory URL via this filter should be reflected on the server.</p>"},{"name":"param","content":"<p>Exports directory URL.</p>","types":["string"],"variable":"$exports_url"}]},"args":1},{"name":"wp_privacy_export_expiration","file":"wp-includes/functions.php","type":"filter","doc":{"description":"Filters the lifetime, in seconds, of a personal data export file.","long_description":"By default, the lifetime is 3 days. Once the file reaches that age, it will automatically be deleted by a cron job.","long_description_html":"<p>By default, the lifetime is 3 days. Once the file reaches that age, it will automatically be deleted by a cron job.</p>","tags":[{"name":"since","content":"4.9.6"},{"name":"param","content":"<p>The expiration age of the export, in seconds.</p>","types":["int"],"variable":"$expiration"}]},"args":1},{"name":"wp_update_php_url","file":"wp-includes/functions.php","type":"filter","doc":{"description":"Filters the URL to learn more about updating the PHP version the site is running on.","long_description":"Providing an empty string is not allowed and will result in the default URL being used. Furthermore the page the URL links to should preferably be localized in the site language.","long_description_html":"<p>Providing an empty string is not allowed and will result in the default URL being used. Furthermore the page the URL links to should preferably be localized in the site language.</p>","tags":[{"name":"since","content":"5.1.0"},{"name":"param","content":"<p>URL to learn more about updating PHP.</p>","types":["string"],"variable":"$update_url"}]},"args":1},{"name":"wp_direct_php_update_url","file":"wp-includes/functions.php","type":"filter","doc":{"description":"Filters the URL for directly updating the PHP version the site is running on from the host.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.1.1"},{"name":"param","content":"<p>URL for directly updating PHP.</p>","types":["string"],"variable":"$direct_update_url"}]},"args":1},{"name":"wp_update_https_url","file":"wp-includes/functions.php","type":"filter","doc":{"description":"Filters the URL to learn more about updating the HTTPS version the site is running on.","long_description":"Providing an empty string is not allowed and will result in the default URL being used. Furthermore the page the URL links to should preferably be localized in the site language.","long_description_html":"<p>Providing an empty string is not allowed and will result in the default URL being used. Furthermore the page the URL links to should preferably be localized in the site language.</p>","tags":[{"name":"since","content":"5.7.0"},{"name":"param","content":"<p>URL to learn more about updating HTTPS.</p>","types":["string"],"variable":"$update_url"}]},"args":1},{"name":"wp_direct_update_https_url","file":"wp-includes/functions.php","type":"filter","doc":{"description":"Filters the URL for directly updating the PHP version the site is running on from the host.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.7.0"},{"name":"param","content":"<p>URL for directly updating PHP.</p>","types":["string"],"variable":"$direct_update_url"}]},"args":1},{"name":"pre_recurse_dirsize","file":"wp-includes/functions.php","type":"filter","doc":{"description":"Filters the amount of storage space used by one directory and all its children, in megabytes.","long_description":"Return the actual used space to short-circuit the recursive PHP file size calculation and use something else, like a CDN API or native operating system tools for better performance.","long_description_html":"<p>Return the actual used space to short-circuit the recursive PHP file size calculation and use something else, like a CDN API or native operating system tools for better performance.</p>","tags":[{"name":"since","content":"5.6.0"},{"name":"param","content":"<p>The amount of used space, in bytes. Default false.</p>","types":["int","false"],"variable":"$space_used"},{"name":"param","content":"<p>Full path of a directory.</p>","types":["string"],"variable":"$directory"},{"name":"param","content":"<p>Full path of a subdirectory to exclude from the total, or array of paths.</p>","types":["string","string[]","null"],"variable":"$exclude"},{"name":"param","content":"<p>Maximum time to run before giving up. In seconds.</p>","types":["int"],"variable":"$max_execution_time"},{"name":"param","content":"<p>Array of cached directory paths.</p>","types":["array"],"variable":"$directory_cache"}]},"args":5},{"name":"wp_admin_notice_args","file":"wp-includes/functions.php","type":"filter","doc":{"description":"Filters the arguments for an admin notice.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"6.4.0"},{"name":"param","content":"<p>The arguments for the admin notice.</p>","types":["array"],"variable":"$args"},{"name":"param","content":"<p>The message for the admin notice.</p>","types":["string"],"variable":"$message"}]},"args":2},{"name":"wp_admin_notice_markup","file":"wp-includes/functions.php","type":"filter","doc":{"description":"Filters the markup for an admin notice.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"6.4.0"},{"name":"param","content":"<p>The HTML markup for the admin notice.</p>","types":["string"],"variable":"$markup"},{"name":"param","content":"<p>The message for the admin notice.</p>","types":["string"],"variable":"$message"},{"name":"param","content":"<p>The arguments for the admin notice.</p>","types":["array"],"variable":"$args"}]},"args":3},{"name":"ms_site_check","file":"wp-includes/ms-load.php","type":"filter","doc":{"description":"Filters checking the status of the current blog.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.0.0"},{"name":"param","content":"<p>Whether to skip the blog status check. Default null.</p>","types":["bool","null"],"variable":"$check"}]},"args":1},{"name":"site_by_path_segments_count","file":"wp-includes/ms-load.php","type":"filter","doc":{"description":"Filters the number of path segments to consider when searching for a site.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.9.0"},{"name":"param","content":"<p>The number of path segments to consider. WordPress by default looks at one path segment following the network path. The function default of null only makes sense when you know the requested path should match a site.</p>","types":["int","null"],"variable":"$segments"},{"name":"param","content":"<p>The requested domain.</p>","types":["string"],"variable":"$domain"},{"name":"param","content":"<p>The requested path, in full.</p>","types":["string"],"variable":"$path"}]},"args":3},{"name":"pre_get_site_by_path","file":"wp-includes/ms-load.php","type":"filter","doc":{"description":"Determines a site by its domain and path.","long_description":"This allows one to short-circuit the default logic, perhaps by replacing it with a routine that is more optimal for your setup.\n Return null to avoid the short-circuit. Return false if no site can be found at the requested domain and path. Otherwise, return a site object.","long_description_html":"<p>This allows one to short-circuit the default logic, perhaps by replacing it with a routine that is more optimal for your setup.</p> <p>Return null to avoid the short-circuit. Return false if no site can be found at the requested domain and path. Otherwise, return a site object.</p>","tags":[{"name":"since","content":"3.9.0"},{"name":"param","content":"<p>Site value to return by path. Default null to continue retrieving the site.</p>","types":["null","false","\\WP_Site"],"variable":"$site"},{"name":"param","content":"<p>The requested domain.</p>","types":["string"],"variable":"$domain"},{"name":"param","content":"<p>The requested path, in full.</p>","types":["string"],"variable":"$path"},{"name":"param","content":"<p>The suggested number of paths to consult. Default null, meaning the entire path was to be consulted.</p>","types":["int","null"],"variable":"$segments"},{"name":"param","content":"<p>The paths to search for, based on $path and $segments.</p>","types":["string[]"],"variable":"$paths"}]},"args":5},{"name":"search_form_args","file":"wp-includes/general-template.php","type":"filter","doc":{"description":"Filters the array of arguments used when generating the search form.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.2.0"},{"name":"param","content":"<p>The array of arguments for building the search form. See get_search_form() for information on accepted arguments.</p>","types":["array"],"variable":"$args"}]},"args":1},{"name":"search_form_format","file":"wp-includes/general-template.php","type":"filter","doc":{"description":"Filters the HTML format of the search form.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.6.0"},{"name":"since","content":"5.5.0","description":"<p>The <code>$args</code> parameter was added.</p>"},{"name":"param","content":"<p>The type of markup to use in the search form. Accepts 'html5', 'xhtml'.</p>","types":["string"],"variable":"$format"},{"name":"param","content":"<p>The array of arguments for building the search form. See get_search_form() for information on accepted arguments.</p>","types":["array"],"variable":"$args"}]},"args":2},{"name":"get_search_form","file":"wp-includes/general-template.php","type":"filter","doc":{"description":"Filters the HTML output of the search form.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.7.0"},{"name":"since","content":"5.5.0","description":"<p>The <code>$args</code> parameter was added.</p>"},{"name":"param","content":"<p>The search form HTML output.</p>","types":["string"],"variable":"$form"},{"name":"param","content":"<p>The array of arguments for building the search form. See get_search_form() for information on accepted arguments.</p>","types":["array"],"variable":"$args"}]},"args":2},{"name":"loginout","file":"wp-includes/general-template.php","type":"filter","doc":{"description":"Filters the HTML output for the Log In/Log Out link.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"1.5.0"},{"name":"param","content":"<p>The HTML link content.</p>","types":["string"],"variable":"$link"}]},"args":1},{"name":"logout_url","file":"wp-includes/general-template.php","type":"filter","doc":{"description":"Filters the logout URL.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.8.0"},{"name":"param","content":"<p>The HTML-encoded logout URL.</p>","types":["string"],"variable":"$logout_url"},{"name":"param","content":"<p>Path to redirect to on logout.</p>","types":["string"],"variable":"$redirect"}]},"args":2},{"name":"login_url","file":"wp-includes/general-template.php","type":"filter","doc":{"description":"Filters the login URL.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.8.0"},{"name":"since","content":"4.2.0","description":"<p>The <code>$force_reauth</code> parameter was added.</p>"},{"name":"param","content":"<p>The login URL. Not HTML-encoded.</p>","types":["string"],"variable":"$login_url"},{"name":"param","content":"<p>The path to redirect to on login, if supplied.</p>","types":["string"],"variable":"$redirect"},{"name":"param","content":"<p>Whether to force reauthorization, even if a cookie is present.</p>","types":["bool"],"variable":"$force_reauth"}]},"args":3},{"name":"register_url","file":"wp-includes/general-template.php","type":"filter","doc":{"description":"Filters the user registration URL.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.6.0"},{"name":"param","content":"<p>The user registration URL.</p>","types":["string"],"variable":"$register"}]},"args":1},{"name":"login_form_defaults","file":"wp-includes/general-template.php","type":"filter","doc":{"description":"Filters the default login form output arguments.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.0.0"},{"name":"see","content":"","refers":"wp_login_form()"},{"name":"param","content":"<p>An array of default login form arguments.</p>","types":["array"],"variable":"$defaults"}]},"args":1},{"name":"login_form_top","file":"wp-includes/general-template.php","type":"filter","doc":{"description":"Filters content to display at the top of the login form.","long_description":"The filter evaluates just following the opening form tag element.","long_description_html":"<p>The filter evaluates just following the opening form tag element.</p>","tags":[{"name":"since","content":"3.0.0"},{"name":"param","content":"<p>Content to display. Default empty.</p>","types":["string"],"variable":"$content"},{"name":"param","content":"<p>Array of login form arguments.</p>","types":["array"],"variable":"$args"}]},"args":2},{"name":"login_form_middle","file":"wp-includes/general-template.php","type":"filter","doc":{"description":"Filters content to display in the middle of the login form.","long_description":"The filter evaluates just following the location where the 'login-password' field is displayed.","long_description_html":"<p>The filter evaluates just following the location where the 'login-password' field is displayed.</p>","tags":[{"name":"since","content":"3.0.0"},{"name":"param","content":"<p>Content to display. Default empty.</p>","types":["string"],"variable":"$content"},{"name":"param","content":"<p>Array of login form arguments.</p>","types":["array"],"variable":"$args"}]},"args":2},{"name":"login_form_bottom","file":"wp-includes/general-template.php","type":"filter","doc":{"description":"Filters content to display at the bottom of the login form.","long_description":"The filter evaluates just preceding the closing form tag element.","long_description_html":"<p>The filter evaluates just preceding the closing form tag element.</p>","tags":[{"name":"since","content":"3.0.0"},{"name":"param","content":"<p>Content to display. Default empty.</p>","types":["string"],"variable":"$content"},{"name":"param","content":"<p>Array of login form arguments.</p>","types":["array"],"variable":"$args"}]},"args":2},{"name":"lostpassword_url","file":"wp-includes/general-template.php","type":"filter","doc":{"description":"Filters the Lost Password URL.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.8.0"},{"name":"param","content":"<p>The lost password page URL.</p>","types":["string"],"variable":"$lostpassword_url"},{"name":"param","content":"<p>The path to redirect to on login.</p>","types":["string"],"variable":"$redirect"}]},"args":2},{"name":"register","file":"wp-includes/general-template.php","type":"filter","doc":{"description":"Filters the HTML link to the Registration or Admin page.","long_description":"Users are sent to the admin page if logged-in, or the registration page if enabled and logged-out.","long_description_html":"<p>Users are sent to the admin page if logged-in, or the registration page if enabled and logged-out.</p>","tags":[{"name":"since","content":"1.5.0"},{"name":"param","content":"<p>The HTML code for the link to the Registration or Admin page.</p>","types":["string"],"variable":"$link"}]},"args":1},{"name":"bloginfo_url","file":"wp-includes/general-template.php","type":"filter","doc":{"description":"Filters the URL returned by get_bloginfo().","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.0.5"},{"name":"param","content":"<p>The URL returned by bloginfo().</p>","types":["string"],"variable":"$output"},{"name":"param","content":"<p>Type of information requested.</p>","types":["string"],"variable":"$show"}]},"args":2},{"name":"bloginfo","file":"wp-includes/general-template.php","type":"filter","doc":{"description":"Filters the site information returned by get_bloginfo().","long_description":"","long_description_html":"","tags":[{"name":"since","content":"0.71"},{"name":"param","content":"<p>The requested non-URL site information.</p>","types":["mixed"],"variable":"$output"},{"name":"param","content":"<p>Type of information requested.</p>","types":["string"],"variable":"$show"}]},"args":2},{"name":"get_site_icon_url","file":"wp-includes/general-template.php","type":"filter","doc":{"description":"Filters the site icon URL.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.4.0"},{"name":"param","content":"<p>Site icon URL.</p>","types":["string"],"variable":"$url"},{"name":"param","content":"<p>Size of the site icon.</p>","types":["int"],"variable":"$size"},{"name":"param","content":"<p>ID of the blog to get the site icon for.</p>","types":["int"],"variable":"$blog_id"}]},"args":3},{"name":"get_custom_logo_image_attributes","file":"wp-includes/general-template.php","type":"filter","doc":{"description":"Filters the list of custom logo image attributes.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.5.0"},{"name":"param","content":"<p>Custom logo image attributes.</p>","types":["array"],"variable":"$custom_logo_attr"},{"name":"param","content":"<p>Custom logo attachment ID.</p>","types":["int"],"variable":"$custom_logo_id"},{"name":"param","content":"<p>ID of the blog to get the custom logo for.</p>","types":["int"],"variable":"$blog_id"}]},"args":3},{"name":"get_custom_logo","file":"wp-includes/general-template.php","type":"filter","doc":{"description":"Filters the custom logo output.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.5.0"},{"name":"since","content":"4.6.0","description":"<p>Added the <code>$blog_id</code> parameter.</p>"},{"name":"param","content":"<p>Custom logo HTML output.</p>","types":["string"],"variable":"$html"},{"name":"param","content":"<p>ID of the blog to get the custom logo for.</p>","types":["int"],"variable":"$blog_id"}]},"args":2},{"name":"pre_get_document_title","file":"wp-includes/general-template.php","type":"filter","doc":{"description":"Filters the document title before it is generated.","long_description":"Passing a non-empty value will short-circuit wp_get_document_title(), returning that value instead.","long_description_html":"<p>Passing a non-empty value will short-circuit wp_get_document_title(), returning that value instead.</p>","tags":[{"name":"since","content":"4.4.0"},{"name":"param","content":"<p>The document title. Default empty string.</p>","types":["string"],"variable":"$title"}]},"args":1},{"name":"document_title_separator","file":"wp-includes/general-template.php","type":"filter","doc":{"description":"Filters the separator for the document title.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.4.0"},{"name":"param","content":"<p>Document title separator. Default '-'.</p>","types":["string"],"variable":"$sep"}]},"args":1},{"name":"document_title_parts","file":"wp-includes/general-template.php","type":"filter","doc":{"description":"Filters the parts of the document title.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.4.0"},{"name":"param","content":"<p>{ The document title parts.</p>","types":["array"],"variable":"$title"}]},"args":1},{"name":"document_title","file":"wp-includes/general-template.php","type":"filter","doc":{"description":"Filters the document title.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.8.0"},{"name":"param","content":"<p>Document title.</p>","types":["string"],"variable":"$title"}]},"args":1},{"name":"wp_title_parts","file":"wp-includes/general-template.php","type":"filter","doc":{"description":"Filters the parts of the page title.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.0.0"},{"name":"param","content":"<p>Array of parts of the page title.</p>","types":["string[]"],"variable":"$title_array"}]},"args":1},{"name":"wp_title","file":"wp-includes/general-template.php","type":"filter","doc":{"description":"Filters the text of the page title.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.0.0"},{"name":"param","content":"<p>Page title.</p>","types":["string"],"variable":"$title"},{"name":"param","content":"<p>Title separator.</p>","types":["string"],"variable":"$sep"},{"name":"param","content":"<p>Location of the separator (either 'left' or 'right').</p>","types":["string"],"variable":"$seplocation"}]},"args":3},{"name":"single_post_title","file":"wp-includes/general-template.php","type":"filter","doc":{"description":"Filters the page title for a single post.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"0.71"},{"name":"param","content":"<p>The single post page title.</p>","types":["string"],"variable":"$_post_title"},{"name":"param","content":"<p>The current post.</p>","types":["\\WP_Post"],"variable":"$_post"}]},"args":2},{"name":"post_type_archive_title","file":"wp-includes/general-template.php","type":"filter","doc":{"description":"Filters the post type archive title.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.1.0"},{"name":"param","content":"<p>Post type 'name' label.</p>","types":["string"],"variable":"$post_type_name"},{"name":"param","content":"<p>Post type.</p>","types":["string"],"variable":"$post_type"}]},"args":2},{"name":"single_cat_title","file":"wp-includes/general-template.php","type":"filter","doc":{"description":"Filters the category archive page title.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.0.10"},{"name":"param","content":"<p>Category name for archive being displayed.</p>","types":["string"],"variable":"$term_name"}]},"args":1},{"name":"single_tag_title","file":"wp-includes/general-template.php","type":"filter","doc":{"description":"Filters the tag archive page title.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.3.0"},{"name":"param","content":"<p>Tag name for archive being displayed.</p>","types":["string"],"variable":"$term_name"}]},"args":1},{"name":"single_term_title","file":"wp-includes/general-template.php","type":"filter","doc":{"description":"Filters the custom taxonomy archive page title.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.1.0"},{"name":"param","content":"<p>Term name for archive being displayed.</p>","types":["string"],"variable":"$term_name"}]},"args":1},{"name":"get_the_archive_title_prefix","file":"wp-includes/general-template.php","type":"filter","doc":{"description":"Filters the archive title prefix.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.5.0"},{"name":"param","content":"<p>Archive title prefix.</p>","types":["string"],"variable":"$prefix"}]},"args":1},{"name":"get_the_archive_title","file":"wp-includes/general-template.php","type":"filter","doc":{"description":"Filters the archive title.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.1.0"},{"name":"since","content":"5.5.0","description":"<p>Added the <code>$prefix</code> and <code>$original_title</code> parameters.</p>"},{"name":"param","content":"<p>Archive title to be displayed.</p>","types":["string"],"variable":"$title"},{"name":"param","content":"<p>Archive title without prefix.</p>","types":["string"],"variable":"$original_title"},{"name":"param","content":"<p>Archive title prefix.</p>","types":["string"],"variable":"$prefix"}]},"args":3},{"name":"get_the_archive_description","file":"wp-includes/general-template.php","type":"filter","doc":{"description":"Filters the archive description.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.1.0"},{"name":"param","content":"<p>Archive description to be displayed.</p>","types":["string"],"variable":"$description"}]},"args":1},{"name":"get_the_post_type_description","file":"wp-includes/general-template.php","type":"filter","doc":{"description":"Filters the description for a post type archive.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.9.0"},{"name":"param","content":"<p>The post type description.</p>","types":["string"],"variable":"$description"},{"name":"param","content":"<p>The post type object.</p>","types":["\\WP_Post_Type"],"variable":"$post_type_obj"}]},"args":2},{"name":"get_archives_link","file":"wp-includes/general-template.php","type":"filter","doc":{"description":"Filters the archive link content.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.6.0"},{"name":"since","content":"4.5.0","description":"<p>Added the <code>$url</code>, <code>$text</code>, <code>$format</code>, <code>$before</code>, and <code>$after</code> parameters.</p>"},{"name":"since","content":"5.2.0","description":"<p>Added the <code>$selected</code> parameter.</p>"},{"name":"param","content":"<p>The archive HTML link content.</p>","types":["string"],"variable":"$link_html"},{"name":"param","content":"<p>URL to archive.</p>","types":["string"],"variable":"$url"},{"name":"param","content":"<p>Archive text description.</p>","types":["string"],"variable":"$text"},{"name":"param","content":"<p>Link format. Can be 'link', 'option', 'html', or custom.</p>","types":["string"],"variable":"$format"},{"name":"param","content":"<p>Content to prepend to the description.</p>","types":["string"],"variable":"$before"},{"name":"param","content":"<p>Content to append to the description.</p>","types":["string"],"variable":"$after"},{"name":"param","content":"<p>True if the current page is the selected archive.</p>","types":["bool"],"variable":"$selected"}]},"args":7},{"name":"getarchives_where","file":"wp-includes/general-template.php","type":"filter","doc":{"description":"Filters the SQL WHERE clause for retrieving archives.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.2.0"},{"name":"param","content":"<p>Portion of SQL query containing the WHERE clause.</p>","types":["string"],"variable":"$sql_where"},{"name":"param","content":"<p>An array of default arguments.</p>","types":["array"],"variable":"$parsed_args"}]},"args":2},{"name":"getarchives_join","file":"wp-includes/general-template.php","type":"filter","doc":{"description":"Filters the SQL JOIN clause for retrieving archives.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.2.0"},{"name":"param","content":"<p>Portion of SQL query containing JOIN clause.</p>","types":["string"],"variable":"$sql_join"},{"name":"param","content":"<p>An array of default arguments.</p>","types":["array"],"variable":"$parsed_args"}]},"args":2},{"name":"get_calendar","file":"wp-includes/general-template.php","type":"filter","doc":{"description":"Filters the HTML calendar output.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.0.0"},{"name":"param","content":"<p>HTML output of the calendar.</p>","types":["string"],"variable":"$calendar_output"}]},"args":1},{"name":"the_date","file":"wp-includes/general-template.php","type":"filter","doc":{"description":"Filters the date a post was published for display.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"0.71"},{"name":"param","content":"<p>The formatted date string.</p>","types":["string"],"variable":"$the_date"},{"name":"param","content":"<p>PHP date format.</p>","types":["string"],"variable":"$format"},{"name":"param","content":"<p>HTML output before the date.</p>","types":["string"],"variable":"$before"},{"name":"param","content":"<p>HTML output after the date.</p>","types":["string"],"variable":"$after"}]},"args":4},{"name":"get_the_date","file":"wp-includes/general-template.php","type":"filter","doc":{"description":"Filters the date a post was published.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.0.0"},{"name":"param","content":"<p>Formatted date string or Unix timestamp if <code>$format</code> is 'U' or 'G'.</p>","types":["string","int"],"variable":"$the_date"},{"name":"param","content":"<p>PHP date format.</p>","types":["string"],"variable":"$format"},{"name":"param","content":"<p>The post object.</p>","types":["\\WP_Post"],"variable":"$post"}]},"args":3},{"name":"the_modified_date","file":"wp-includes/general-template.php","type":"filter","doc":{"description":"Filters the date a post was last modified for display.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.1.0"},{"name":"param","content":"<p>The last modified date or false if no post is found.</p>","types":["string","false"],"variable":"$the_modified_date"},{"name":"param","content":"<p>PHP date format.</p>","types":["string"],"variable":"$format"},{"name":"param","content":"<p>HTML output before the date.</p>","types":["string"],"variable":"$before"},{"name":"param","content":"<p>HTML output after the date.</p>","types":["string"],"variable":"$after"}]},"args":4},{"name":"get_the_modified_date","file":"wp-includes/general-template.php","type":"filter","doc":{"description":"Filters the date a post was last modified.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.1.0"},{"name":"since","content":"4.6.0","description":"<p>Added the <code>$post</code> parameter.</p>"},{"name":"param","content":"<p>The formatted date or false if no post is found.</p>","types":["string","int","false"],"variable":"$the_time"},{"name":"param","content":"<p>PHP date format.</p>","types":["string"],"variable":"$format"},{"name":"param","content":"<p>WP_Post object or null if no post is found.</p>","types":["\\WP_Post","null"],"variable":"$post"}]},"args":3},{"name":"the_time","file":"wp-includes/general-template.php","type":"filter","doc":{"description":"Filters the time a post was written for display.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"0.71"},{"name":"param","content":"<p>The formatted time.</p>","types":["string"],"variable":"$get_the_time"},{"name":"param","content":"<p>Format to use for retrieving the time the post was written. Accepts 'G', 'U', or PHP date format.</p>","types":["string"],"variable":"$format"}]},"args":2},{"name":"get_the_time","file":"wp-includes/general-template.php","type":"filter","doc":{"description":"Filters the time a post was written.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"1.5.0"},{"name":"param","content":"<p>Formatted date string or Unix timestamp if <code>$format</code> is 'U' or 'G'.</p>","types":["string","int"],"variable":"$the_time"},{"name":"param","content":"<p>Format to use for retrieving the time the post was written. Accepts 'G', 'U', or PHP date format.</p>","types":["string"],"variable":"$format"},{"name":"param","content":"<p>Post object.</p>","types":["\\WP_Post"],"variable":"$post"}]},"args":3},{"name":"get_post_time","file":"wp-includes/general-template.php","type":"filter","doc":{"description":"Filters the localized time a post was written.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.6.0"},{"name":"param","content":"<p>Formatted date string or Unix timestamp if <code>$format</code> is 'U' or 'G'.</p>","types":["string","int"],"variable":"$time"},{"name":"param","content":"<p>Format to use for retrieving the time the post was written. Accepts 'G', 'U', or PHP date format.</p>","types":["string"],"variable":"$format"},{"name":"param","content":"<p>Whether to retrieve the GMT time.</p>","types":["bool"],"variable":"$gmt"}]},"args":3},{"name":"the_modified_time","file":"wp-includes/general-template.php","type":"filter","doc":{"description":"Filters the localized time a post was last modified, for display.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.0.0"},{"name":"param","content":"<p>The formatted time or false if no post is found.</p>","types":["string","false"],"variable":"$get_the_modified_time"},{"name":"param","content":"<p>Format to use for retrieving the time the post was modified. Accepts 'G', 'U', or PHP date format.</p>","types":["string"],"variable":"$format"}]},"args":2},{"name":"get_the_modified_time","file":"wp-includes/general-template.php","type":"filter","doc":{"description":"Filters the localized time a post was last modified.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.0.0"},{"name":"since","content":"4.6.0","description":"<p>Added the <code>$post</code> parameter.</p>"},{"name":"param","content":"<p>The formatted time or false if no post is found.</p>","types":["string","int","false"],"variable":"$the_time"},{"name":"param","content":"<p>Format to use for retrieving the time the post was modified. Accepts 'G', 'U', or PHP date format.</p>","types":["string"],"variable":"$format"},{"name":"param","content":"<p>WP_Post object or null if no post is found.</p>","types":["\\WP_Post","null"],"variable":"$post"}]},"args":3},{"name":"get_post_modified_time","file":"wp-includes/general-template.php","type":"filter","doc":{"description":"Filters the localized time a post was last modified.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.8.0"},{"name":"param","content":"<p>Formatted date string or Unix timestamp if <code>$format</code> is 'U' or 'G'.</p>","types":["string","int"],"variable":"$time"},{"name":"param","content":"<p>Format to use for retrieving the time the post was modified. Accepts 'G', 'U', or PHP date format. Default 'U'.</p>","types":["string"],"variable":"$format"},{"name":"param","content":"<p>Whether to retrieve the GMT time. Default false.</p>","types":["bool"],"variable":"$gmt"}]},"args":3},{"name":"the_weekday","file":"wp-includes/general-template.php","type":"filter","doc":{"description":"Filters the weekday on which the post was written, for display.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"0.71"},{"name":"param","content":"","types":["string"],"variable":"$the_weekday"}]},"args":1},{"name":"the_weekday_date","file":"wp-includes/general-template.php","type":"filter","doc":{"description":"Filters the localized date on which the post was written, for display.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"0.71"},{"name":"param","content":"<p>The weekday on which the post was written.</p>","types":["string"],"variable":"$the_weekday_date"},{"name":"param","content":"<p>The HTML to output before the date.</p>","types":["string"],"variable":"$before"},{"name":"param","content":"<p>The HTML to output after the date.</p>","types":["string"],"variable":"$after"}]},"args":3},{"name":"feed_links_args","file":"wp-includes/general-template.php","type":"filter","doc":{"description":"Filters the feed links arguments.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"6.7.0"},{"name":"param","content":"<p>An array of feed links arguments.</p>","types":["array"],"variable":"$args"}]},"args":1},{"name":"feed_links_show_posts_feed","file":"wp-includes/general-template.php","type":"filter","doc":{"description":"Filters whether to display the posts feed link.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.4.0"},{"name":"param","content":"<p>Whether to display the posts feed link. Default true.</p>","types":["bool"],"variable":"$show"}]},"args":1},{"name":"feed_links_show_comments_feed","file":"wp-includes/general-template.php","type":"filter","doc":{"description":"Filters whether to display the comments feed link.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.4.0"},{"name":"param","content":"<p>Whether to display the comments feed link. Default true.</p>","types":["bool"],"variable":"$show"}]},"args":1},{"name":"feed_links_extra_args","file":"wp-includes/general-template.php","type":"filter","doc":{"description":"Filters the extra feed links arguments.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"6.7.0"},{"name":"param","content":"<p>An array of extra feed links arguments.</p>","types":["array"],"variable":"$args"}]},"args":1},{"name":"feed_links_extra_show_post_comments_feed","file":"wp-includes/general-template.php","type":"filter","doc":{"description":"Filters whether to display the post comments feed link.","long_description":"This filter allows to enable or disable the feed link for a singular post in a way that is independent of {@see 'feed_links_show_comments_feed'} (which controls the global comments feed). The result of that filter is accepted as a parameter.","long_description_html":"<p>This filter allows to enable or disable the feed link for a singular post in a way that is independent of {@see 'feed_links_show_comments_feed'} (which controls the global comments feed). The result of that filter is accepted as a parameter.</p>","tags":[{"name":"since","content":"6.1.0"},{"name":"param","content":"<p>Whether to display the post comments feed link. Defaults to the {@see 'feed_links_show_comments_feed'} filter result.</p>","types":["bool"],"variable":"$show_comments_feed"}]},"args":1},{"name":"feed_links_extra_show_post_type_archive_feed","file":"wp-includes/general-template.php","type":"filter","doc":{"description":"Filters whether to display the post type archive feed link.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"6.1.0"},{"name":"param","content":"<p>Whether to display the post type archive feed link. Default true.</p>","types":["bool"],"variable":"$show"}]},"args":1},{"name":"feed_links_extra_show_category_feed","file":"wp-includes/general-template.php","type":"filter","doc":{"description":"Filters whether to display the category feed link.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"6.1.0"},{"name":"param","content":"<p>Whether to display the category feed link. Default true.</p>","types":["bool"],"variable":"$show"}]},"args":1},{"name":"feed_links_extra_show_tag_feed","file":"wp-includes/general-template.php","type":"filter","doc":{"description":"Filters whether to display the tag feed link.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"6.1.0"},{"name":"param","content":"<p>Whether to display the tag feed link. Default true.</p>","types":["bool"],"variable":"$show"}]},"args":1},{"name":"feed_links_extra_show_tax_feed","file":"wp-includes/general-template.php","type":"filter","doc":{"description":"Filters whether to display the custom taxonomy feed link.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"6.1.0"},{"name":"param","content":"<p>Whether to display the custom taxonomy feed link. Default true.</p>","types":["bool"],"variable":"$show"}]},"args":1},{"name":"feed_links_extra_show_author_feed","file":"wp-includes/general-template.php","type":"filter","doc":{"description":"Filters whether to display the author feed link.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"6.1.0"},{"name":"param","content":"<p>Whether to display the author feed link. Default true.</p>","types":["bool"],"variable":"$show"}]},"args":1},{"name":"feed_links_extra_show_search_feed","file":"wp-includes/general-template.php","type":"filter","doc":{"description":"Filters whether to display the search results feed link.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"6.1.0"},{"name":"param","content":"<p>Whether to display the search results feed link. Default true.</p>","types":["bool"],"variable":"$show"}]},"args":1},{"name":"site_icon_meta_tags","file":"wp-includes/general-template.php","type":"filter","doc":{"description":"Filters the site icon meta tags, so plugins can add their own.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.3.0"},{"name":"param","content":"<p>Array of Site Icon meta tags.</p>","types":["string[]"],"variable":"$meta_tags"}]},"args":1},{"name":"wp_resource_hints","file":"wp-includes/general-template.php","type":"filter","doc":{"description":"Filters domains and URLs for resource hints of the given relation type.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.6.0"},{"name":"since","content":"4.7.0","description":"<p>The <code>$urls</code> parameter accepts arrays of specific HTML attributes as its child elements.</p>"},{"name":"param","content":"<p>{ Array of resources and their attributes, or URLs to print for resource hints.</p>","types":["array"],"variable":"$urls"},{"name":"param","content":"<p>The relation type the URLs are printed for. One of 'dns-prefetch', 'preconnect', 'prefetch', or 'prerender'.</p>","types":["string"],"variable":"$relation_type"}]},"args":2},{"name":"wp_preload_resources","file":"wp-includes/general-template.php","type":"filter","doc":{"description":"Filters domains and URLs for resource preloads.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"6.1.0"},{"name":"since","content":"6.6.0","description":"<p>Added the <code>$fetchpriority</code> attribute.</p>"},{"name":"param","content":"<p>{ Array of resources and their attributes, or URLs to print for resource preloads.</p>","types":["array"],"variable":"$preload_resources"}]},"args":1},{"name":"user_can_richedit","file":"wp-includes/general-template.php","type":"filter","doc":{"description":"Filters whether the user can access the visual editor.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.1.0"},{"name":"param","content":"<p>Whether the user can access the visual editor.</p>","types":["bool"],"variable":"$wp_rich_edit"}]},"args":1},{"name":"wp_default_editor","file":"wp-includes/general-template.php","type":"filter","doc":{"description":"Filters which editor should be displayed by default.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.5.0"},{"name":"param","content":"<p>Which editor should be displayed by default. Either 'tinymce', 'html', or 'test'.</p>","types":["string"],"variable":"$r"}]},"args":1},{"name":"wp_code_editor_settings","file":"wp-includes/general-template.php","type":"filter","doc":{"description":"Filters settings that are passed into the code editor.","long_description":"Returning a falsey value will disable the syntax-highlighting code editor.","long_description_html":"<p>Returning a falsey value will disable the syntax-highlighting code editor.</p>","tags":[{"name":"since","content":"4.9.0"},{"name":"param","content":"<p>The array of settings passed to the code editor. A falsey value disables the editor.</p>","types":["array"],"variable":"$settings"},{"name":"param","content":"<p>{ Args passed when calling <code>get_code_editor_settings()</code>.</p>","types":["array"],"variable":"$args"}]},"args":2},{"name":"get_search_query","file":"wp-includes/general-template.php","type":"filter","doc":{"description":"Filters the contents of the search query variable.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.3.0"},{"name":"param","content":"<p>Contents of the search query variable.</p>","types":["mixed"],"variable":"$search"}]},"args":1},{"name":"the_search_query","file":"wp-includes/general-template.php","type":"filter","doc":{"description":"Filters the contents of the search query variable for display.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.3.0"},{"name":"param","content":"<p>Contents of the search query variable.</p>","types":["mixed"],"variable":"$search"}]},"args":1},{"name":"language_attributes","file":"wp-includes/general-template.php","type":"filter","doc":{"description":"Filters the language attributes for display in the 'html' tag.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.5.0"},{"name":"since","content":"4.3.0","description":"<p>Added the <code>$doctype</code> parameter.</p>"},{"name":"param","content":"<p>A space-separated list of language attributes.</p>","types":["string"],"variable":"$output"},{"name":"param","content":"<p>The type of HTML document (xhtml|html).</p>","types":["string"],"variable":"$doctype"}]},"args":2},{"name":"paginate_links","file":"wp-includes/general-template.php","type":"filter","doc":{"description":"Filters the paginated links for the given archive pages.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.0.0"},{"name":"param","content":"<p>The paginated link URL.</p>","types":["string"],"variable":"$link"}]},"args":1},{"name":"paginate_links_output","file":"wp-includes/general-template.php","type":"filter","doc":{"description":"Filters the HTML output of paginated links for archives.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.7.0"},{"name":"param","content":"<p>HTML output.</p>","types":["string"],"variable":"$r"},{"name":"param","content":"<p>An array of arguments. See paginate_links() for information on accepted arguments.</p>","types":["array"],"variable":"$args"}]},"args":2},{"name":"wp_admin_css_uri","file":"wp-includes/general-template.php","type":"filter","doc":{"description":"Filters the URI of a WordPress admin CSS file.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.3.0"},{"name":"param","content":"<p>Relative path to the file with query arguments attached.</p>","types":["string"],"variable":"$_file"},{"name":"param","content":"<p>Relative path to the file, minus its &quot;.css&quot; extension.</p>","types":["string"],"variable":"$file"}]},"args":2},{"name":"wp_admin_css","file":"wp-includes/general-template.php","type":"filter","doc":{"description":"Filters the stylesheet link to the specified CSS file.","long_description":"If the site is set to display right-to-left, the RTL stylesheet link will be used instead.","long_description_html":"<p>If the site is set to display right-to-left, the RTL stylesheet link will be used instead.</p>","tags":[{"name":"since","content":"2.3.0"},{"name":"param","content":"<p>HTML link element for the stylesheet.</p>","types":["string"],"variable":"$stylesheet_link"},{"name":"param","content":"<p>Style handle name or filename (without &quot;.css&quot; extension) relative to wp-admin/. Defaults to 'wp-admin'.</p>","types":["string"],"variable":"$file"}]},"args":2},{"name":"wp_generator_type","file":"wp-includes/general-template.php","type":"filter","doc":{"description":"Filters the output of the XHTML generator tag.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.5.0"},{"name":"param","content":"<p>The XHTML generator.</p>","types":["string"],"variable":"$generator_type"}]},"args":1},{"name":"the_generator","file":"wp-includes/general-template.php","type":"filter","doc":{"description":"Filters the output of the XHTML generator tag for display.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.5.0"},{"name":"param","content":"<p>The generator output.</p>","types":["string"],"variable":"$generator_type"},{"name":"param","content":"<p>The type of generator to output. Accepts 'html', 'xhtml', 'atom', 'rss2', 'rdf', 'comment', 'export'.</p>","types":["string"],"variable":"$type"}]},"args":2},{"name":"get_the_generator_{$type}","aliases":["get_the_generator_atom","get_the_generator_comment","get_the_generator_export","get_the_generator_html","get_the_generator_rdf","get_the_generator_rss2","get_the_generator_xhtml"],"file":"wp-includes/general-template.php","type":"filter","doc":{"description":"Filters the HTML for the retrieved generator type.","long_description":"The dynamic portion of the hook name, `$type`, refers to the generator type.\n Possible hook names include:\n\n  - `get_the_generator_atom`\n  - `get_the_generator_comment`\n  - `get_the_generator_export`\n  - `get_the_generator_html`\n  - `get_the_generator_rdf`\n  - `get_the_generator_rss2`\n  - `get_the_generator_xhtml`","long_description_html":"<p>The dynamic portion of the hook name, <code>$type</code>, refers to the generator type.</p> <p>Possible hook names include:</p> <ul> <li><code>get_the_generator_atom</code></li> <li><code>get_the_generator_comment</code></li> <li><code>get_the_generator_export</code></li> <li><code>get_the_generator_html</code></li> <li><code>get_the_generator_rdf</code></li> <li><code>get_the_generator_rss2</code></li> <li><code>get_the_generator_xhtml</code></li> </ul>","tags":[{"name":"since","content":"2.5.0"},{"name":"param","content":"<p>The HTML markup output to wp_head().</p>","types":["string"],"variable":"$gen"},{"name":"param","content":"<p>The type of generator. Accepts 'html', 'xhtml', 'atom', 'rss2', 'rdf', 'comment', 'export'.</p>","types":["string"],"variable":"$type"}]},"args":2},{"name":"wp_required_field_indicator","file":"wp-includes/general-template.php","type":"filter","doc":{"description":"Filters the markup for a visual indicator of required form fields.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"6.1.0"},{"name":"param","content":"<p>Markup for the indicator element.</p>","types":["string"],"variable":"$indicator"}]},"args":1},{"name":"wp_required_field_message","file":"wp-includes/general-template.php","type":"filter","doc":{"description":"Filters the message to explain required form fields.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"6.1.0"},{"name":"param","content":"<p>Message text and glyph wrapped in a <code>span</code> tag.</p>","types":["string"],"variable":"$message"}]},"args":1},{"name":"register_post_type_args","file":"wp-includes/class-wp-post-type.php","type":"filter","doc":{"description":"Filters the arguments for registering a post type.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.4.0"},{"name":"param","content":"<p>Array of arguments for registering a post type. See the register_post_type() function for accepted arguments.</p>","types":["array"],"variable":"$args"},{"name":"param","content":"<p>Post type key.</p>","types":["string"],"variable":"$post_type"}]},"args":2},{"name":"register_{$post_type}_post_type_args","aliases":["register_page_post_type_args","register_post_post_type_args"],"file":"wp-includes/class-wp-post-type.php","type":"filter","doc":{"description":"Filters the arguments for registering a specific post type.","long_description":"The dynamic portion of the filter name, `$post_type`, refers to the post type key.\n Possible hook names include:\n\n  - `register_post_post_type_args`\n  - `register_page_post_type_args`","long_description_html":"<p>The dynamic portion of the filter name, <code>$post_type</code>, refers to the post type key.</p> <p>Possible hook names include:</p> <ul> <li><code>register_post_post_type_args</code></li> <li><code>register_page_post_type_args</code></li> </ul>","tags":[{"name":"since","content":"6.0.0"},{"name":"since","content":"6.4.0","description":"<p>Added <code>late_route_registration</code>, <code>autosave_rest_controller_class</code> and <code>revisions_rest_controller_class</code> arguments.</p>"},{"name":"param","content":"<p>Array of arguments for registering a post type. See the register_post_type() function for accepted arguments.</p>","types":["array"],"variable":"$args"},{"name":"param","content":"<p>Post type key.</p>","types":["string"],"variable":"$post_type"}]},"args":2},{"name":"stylesheet","file":"wp-includes/theme.php","type":"filter","doc":{"description":"Filters the name of current stylesheet.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"1.5.0"},{"name":"param","content":"<p>Name of the current stylesheet.</p>","types":["string"],"variable":"$stylesheet"}]},"args":1},{"name":"stylesheet_directory","file":"wp-includes/theme.php","type":"filter","doc":{"description":"Filters the stylesheet directory path for the active theme.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"1.5.0"},{"name":"param","content":"<p>Absolute path to the active theme.</p>","types":["string"],"variable":"$stylesheet_dir"},{"name":"param","content":"<p>Directory name of the active theme.</p>","types":["string"],"variable":"$stylesheet"},{"name":"param","content":"<p>Absolute path to themes directory.</p>","types":["string"],"variable":"$theme_root"}]},"args":3},{"name":"stylesheet_directory_uri","file":"wp-includes/theme.php","type":"filter","doc":{"description":"Filters the stylesheet directory URI.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"1.5.0"},{"name":"param","content":"<p>Stylesheet directory URI.</p>","types":["string"],"variable":"$stylesheet_dir_uri"},{"name":"param","content":"<p>Name of the activated theme's directory.</p>","types":["string"],"variable":"$stylesheet"},{"name":"param","content":"<p>Themes root URI.</p>","types":["string"],"variable":"$theme_root_uri"}]},"args":3},{"name":"stylesheet_uri","file":"wp-includes/theme.php","type":"filter","doc":{"description":"Filters the URI of the active theme stylesheet.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"1.5.0"},{"name":"param","content":"<p>Stylesheet URI for the active theme/child theme.</p>","types":["string"],"variable":"$stylesheet_uri"},{"name":"param","content":"<p>Stylesheet directory URI for the active theme/child theme.</p>","types":["string"],"variable":"$stylesheet_dir_uri"}]},"args":2},{"name":"locale_stylesheet_uri","file":"wp-includes/theme.php","type":"filter","doc":{"description":"Filters the localized stylesheet URI.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.1.0"},{"name":"param","content":"<p>Localized stylesheet URI.</p>","types":["string"],"variable":"$stylesheet_uri"},{"name":"param","content":"<p>Stylesheet directory URI.</p>","types":["string"],"variable":"$stylesheet_dir_uri"}]},"args":2},{"name":"template","file":"wp-includes/theme.php","type":"filter","doc":{"description":"Filters the name of the active theme.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"1.5.0"},{"name":"param","content":"<p>active theme's directory name.</p>","types":["string"],"variable":"$template"}]},"args":1},{"name":"template_directory","file":"wp-includes/theme.php","type":"filter","doc":{"description":"Filters the active theme directory path.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"1.5.0"},{"name":"param","content":"<p>The path of the active theme directory.</p>","types":["string"],"variable":"$template_dir"},{"name":"param","content":"<p>Directory name of the active theme.</p>","types":["string"],"variable":"$template"},{"name":"param","content":"<p>Absolute path to the themes directory.</p>","types":["string"],"variable":"$theme_root"}]},"args":3},{"name":"template_directory_uri","file":"wp-includes/theme.php","type":"filter","doc":{"description":"Filters the active theme directory URI.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"1.5.0"},{"name":"param","content":"<p>The URI of the active theme directory.</p>","types":["string"],"variable":"$template_dir_uri"},{"name":"param","content":"<p>Directory name of the active theme.</p>","types":["string"],"variable":"$template"},{"name":"param","content":"<p>The themes root URI.</p>","types":["string"],"variable":"$theme_root_uri"}]},"args":3},{"name":"wp_cache_themes_persistently","file":"wp-includes/theme.php","type":"filter","doc":{"description":"Filters whether to get the cache of the registered theme directories.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.4.0"},{"name":"param","content":"<p>Whether to get the cache of the theme directories. Default false.</p>","types":["bool"],"variable":"$cache_expiration"},{"name":"param","content":"<p>The class or function name calling the filter.</p>","types":["string"],"variable":"$context"}]},"args":2},{"name":"theme_root","file":"wp-includes/theme.php","type":"filter","doc":{"description":"Filters the absolute path to the themes directory.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"1.5.0"},{"name":"param","content":"<p>Absolute path to themes directory.</p>","types":["string"],"variable":"$theme_root"}]},"args":1},{"name":"theme_root_uri","file":"wp-includes/theme.php","type":"filter","doc":{"description":"Filters the URI for themes directory.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"1.5.0"},{"name":"param","content":"<p>The URI for themes directory.</p>","types":["string"],"variable":"$theme_root_uri"},{"name":"param","content":"<p>WordPress web address which is set in General Options.</p>","types":["string"],"variable":"$siteurl"},{"name":"param","content":"<p>The stylesheet or template name of the theme.</p>","types":["string"],"variable":"$stylesheet_or_template"}]},"args":3},{"name":"validate_current_theme","file":"wp-includes/theme.php","type":"filter","doc":{"description":"Filters whether to validate the active theme.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.7.0"},{"name":"param","content":"<p>Whether to validate the active theme. Default true.</p>","types":["bool"],"variable":"$validate"}]},"args":1},{"name":"theme_mod_{$name}","file":"wp-includes/theme.php","type":"filter","doc":{"description":"Filters the theme modification, or 'theme_mod', value.","long_description":"The dynamic portion of the hook name, `$name`, refers to the key name of the modification array. For example, 'header_textcolor', 'header_image', and so on depending on the theme options.","long_description_html":"<p>The dynamic portion of the hook name, <code>$name</code>, refers to the key name of the modification array. For example, 'header_textcolor', 'header_image', and so on depending on the theme options.</p>","tags":[{"name":"since","content":"2.2.0"},{"name":"param","content":"<p>The value of the active theme modification.</p>","types":["mixed"],"variable":"$current_mod"}]},"args":1},{"name":"pre_set_theme_mod_{$name}","file":"wp-includes/theme.php","type":"filter","doc":{"description":"Filters the theme modification, or 'theme_mod', value on save.","long_description":"The dynamic portion of the hook name, `$name`, refers to the key name of the modification array. For example, 'header_textcolor', 'header_image', and so on depending on the theme options.","long_description_html":"<p>The dynamic portion of the hook name, <code>$name</code>, refers to the key name of the modification array. For example, 'header_textcolor', 'header_image', and so on depending on the theme options.</p>","tags":[{"name":"since","content":"3.9.0"},{"name":"param","content":"<p>The new value of the theme modification.</p>","types":["mixed"],"variable":"$value"},{"name":"param","content":"<p>The current value of the theme modification.</p>","types":["mixed"],"variable":"$old_value"}]},"args":2},{"name":"get_header_image","file":"wp-includes/theme.php","type":"filter","doc":{"description":"Filters the header image URL.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"6.1.0"},{"name":"param","content":"<p>Header image URL.</p>","types":["string"],"variable":"$url"}]},"args":1},{"name":"get_header_image_tag_attributes","file":"wp-includes/theme.php","type":"filter","doc":{"description":"Filters the list of header image attributes.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.9.0"},{"name":"param","content":"<p>Array of the attributes for the image tag.</p>","types":["array"],"variable":"$attr"},{"name":"param","content":"<p>The custom header object returned by 'get_custom_header()'.</p>","types":["object"],"variable":"$header"}]},"args":2},{"name":"get_header_image_tag","file":"wp-includes/theme.php","type":"filter","doc":{"description":"Filters the markup of header images.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.4.0"},{"name":"param","content":"<p>The HTML image tag markup being filtered.</p>","types":["string"],"variable":"$html"},{"name":"param","content":"<p>The custom header object returned by 'get_custom_header()'.</p>","types":["object"],"variable":"$header"},{"name":"param","content":"<p>Array of the attributes for the image tag.</p>","types":["array"],"variable":"$attr"}]},"args":3},{"name":"get_header_video_url","file":"wp-includes/theme.php","type":"filter","doc":{"description":"Filters the header video URL.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.7.3"},{"name":"param","content":"<p>Header video URL, if available.</p>","types":["string"],"variable":"$url"}]},"args":1},{"name":"header_video_settings","file":"wp-includes/theme.php","type":"filter","doc":{"description":"Filters header video settings.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.7.0"},{"name":"param","content":"<p>An array of header video settings.</p>","types":["array"],"variable":"$settings"}]},"args":1},{"name":"is_header_video_active","file":"wp-includes/theme.php","type":"filter","doc":{"description":"Filters whether the custom header video is eligible to show on the current page.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.7.0"},{"name":"param","content":"<p>Whether the custom header video should be shown. Returns the value of the theme setting for the <code>custom-header</code>'s <code>video-active-callback</code>. If no callback is set, the default value is that of <code>is_front_page()</code>.</p>","types":["bool"],"variable":"$show_video"}]},"args":1},{"name":"wp_get_custom_css","file":"wp-includes/theme.php","type":"filter","doc":{"description":"Filters the custom CSS output into the head element.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.7.0"},{"name":"param","content":"<p>CSS pulled in from the Custom CSS post type.</p>","types":["string"],"variable":"$css"},{"name":"param","content":"<p>The theme stylesheet name.</p>","types":["string"],"variable":"$stylesheet"}]},"args":2},{"name":"update_custom_css_data","file":"wp-includes/theme.php","type":"filter","doc":{"description":"Filters the `css` (`post_content`) and `preprocessed` (`post_content_filtered`) args for a `custom_css` post being updated.","long_description":"This filter can be used by plugin that offer CSS pre-processors, to store the original pre-processed CSS in `post_content_filtered` and then store processed CSS in `post_content`. When used in this way, the `post_content_filtered` should be supplied as the setting value instead of `post_content` via a the `customize_value_custom_css` filter, for example:\n <code>\nadd_filter( 'customize_value_custom_css', function( $value, $setting ) {\n    $post = wp_get_custom_css_post( $setting->stylesheet );\n    if ( $post && ! empty( $post->post_content_filtered ) ) {\n        $css = $post->post_content_filtered;\n    }\n    return $css;\n}, 10, 2 );\n</code>","long_description_html":"<p>This filter can be used by plugin that offer CSS pre-processors, to store the original pre-processed CSS in <code>post_content_filtered</code> and then store processed CSS in <code>post_content</code>. When used in this way, the <code>post_content_filtered</code> should be supplied as the setting value instead of <code>post_content</code> via a the <code>customize_value_custom_css</code> filter, for example:</p> <p><code> add_filter( 'customize_value_custom_css', function( $value, $setting ) { $post = wp_get_custom_css_post( $setting-&gt;stylesheet ); if ( $post &amp;&amp; ! empty( $post-&gt;post_content_filtered ) ) { $css = $post-&gt;post_content_filtered; } return $css; }, 10, 2 ); </code></p>","tags":[{"name":"since","content":"4.7.0"},{"name":"param","content":"<p>{ Custom CSS data.</p>","types":["array"],"variable":"$data"},{"name":"param","content":"<p>{ The args passed into <code>wp_update_custom_css_post()</code> merged with defaults.</p>","types":["array"],"variable":"$args"}]},"args":2},{"name":"editor_stylesheets","file":"wp-includes/theme.php","type":"filter","doc":{"description":"Filters the array of URLs of stylesheets applied to the editor.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.3.0"},{"name":"param","content":"<p>Array of URLs of stylesheets to be applied to the editor.</p>","types":["string[]"],"variable":"$stylesheets"}]},"args":1},{"name":"get_theme_starter_content","file":"wp-includes/theme.php","type":"filter","doc":{"description":"Filters the expanded array of starter content.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.7.0"},{"name":"param","content":"<p>Array of starter content.</p>","types":["array"],"variable":"$content"},{"name":"param","content":"<p>Array of theme-specific starter content configuration.</p>","types":["array"],"variable":"$config"}]},"args":2},{"name":"current_theme_supports-{$feature}","file":"wp-includes/theme.php","type":"filter","doc":{"description":"Filters whether the active theme supports a specific feature.","long_description":"The dynamic portion of the hook name, `$feature`, refers to the specific theme feature. See add_theme_support() for the list of possible values.","long_description_html":"<p>The dynamic portion of the hook name, <code>$feature</code>, refers to the specific theme feature. See add_theme_support() for the list of possible values.</p>","tags":[{"name":"since","content":"3.4.0"},{"name":"param","content":"<p>Whether the active theme supports the given feature. Default true.</p>","types":["bool"],"variable":"$supports"},{"name":"param","content":"<p>Array of arguments for the feature.</p>","types":["array"],"variable":"$args"},{"name":"param","content":"<p>The theme feature.</p>","types":["string"],"variable":"$feature"}]},"args":3},{"name":"the_title","file":"wp-includes/deprecated.php","type":"filter","doc":{"description":"","long_description":"","long_description_html":"","tags":[]},"args":2},{"name":"the_title","file":"wp-includes/deprecated.php","type":"filter","doc":{"description":"","long_description":"","long_description_html":"","tags":[]},"args":2},{"name":"link_category","file":"wp-includes/deprecated.php","type":"filter","doc":{"description":"","long_description":"","long_description_html":"","tags":[]},"args":1},{"name":"the_content_rss","file":"wp-includes/deprecated.php","type":"filter","doc":{"description":"Filters the post content in the context of an RSS feed.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"0.71"},{"name":"param","content":"<p>Content of the current post.</p>","types":["string"],"variable":"$content"}]},"args":1},{"name":"attachment_max_dims","file":"wp-includes/deprecated.php","type":"filter","doc":{"description":"","long_description":"","long_description_html":"","tags":[]},"args":1},{"name":"attachment_icon","file":"wp-includes/deprecated.php","type":"filter","doc":{"description":"","long_description":"","long_description_html":"","tags":[]},"args":2},{"name":"attachment_innerHTML","file":"wp-includes/deprecated.php","type":"filter","doc":{"description":"","long_description":"","long_description_html":"","tags":[]},"args":2},{"name":"the_title","file":"wp-includes/deprecated.php","type":"filter","doc":{"description":"","long_description":"","long_description_html":"","tags":[]},"args":2},{"name":"{$boundary}_post_rel_link","file":"wp-includes/deprecated.php","type":"filter","doc":{"description":"","long_description":"","long_description_html":"","tags":[]},"args":1},{"name":"index_rel_link","file":"wp-includes/deprecated.php","type":"filter","doc":{"description":"","long_description":"","long_description_html":"","tags":[]},"args":1},{"name":"the_title","file":"wp-includes/deprecated.php","type":"filter","doc":{"description":"","long_description":"","long_description_html":"","tags":[]},"args":2},{"name":"parent_post_rel_link","file":"wp-includes/deprecated.php","type":"filter","doc":{"description":"","long_description":"","long_description_html":"","tags":[]},"args":1},{"name":"extra_theme_headers","file":"wp-includes/deprecated.php","type":"filter","doc":{"description":"","long_description":"","long_description_html":"","tags":[]},"args":1},{"name":"richedit_pre","file":"wp-includes/deprecated.php","type":"filter","doc":{"description":"Filters text returned for the rich text editor.","long_description":"This filter is first evaluated, and the value returned, if an empty string is passed to wp_richedit_pre(). If an empty string is passed, it results in a break tag and line feed.\n If a non-empty string is passed, the filter is evaluated on the wp_richedit_pre() return after being formatted.","long_description_html":"<p>This filter is first evaluated, and the value returned, if an empty string is passed to wp_richedit_pre(). If an empty string is passed, it results in a break tag and line feed.</p> <p>If a non-empty string is passed, the filter is evaluated on the wp_richedit_pre() return after being formatted.</p>","tags":[{"name":"since","content":"2.0.0"},{"name":"deprecated","content":"4.3.0"},{"name":"param","content":"<p>Text for the rich text editor.</p>","types":["string"],"variable":"$output"}]},"args":1},{"name":"htmledit_pre","file":"wp-includes/deprecated.php","type":"filter","doc":{"description":"Filters the text before it is formatted for the HTML editor.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.5.0"},{"name":"deprecated","content":"4.3.0"},{"name":"param","content":"<p>The HTML-formatted text.</p>","types":["string"],"variable":"$output"}]},"args":1},{"name":"shortcut_link","file":"wp-includes/deprecated.php","type":"filter","doc":{"description":"Filters the Press This bookmarklet link.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.6.0"},{"name":"deprecated","content":"4.9.0"},{"name":"param","content":"<p>The Press This bookmarklet link.</p>","types":["string"],"variable":"$link"}]},"args":1},{"name":"wp_get_attachment_thumb_file","file":"wp-includes/deprecated.php","type":"filter","doc":{"description":"Filters the attachment thumbnail file path.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.1.0"},{"name":"param","content":"<p>File path to the attachment thumbnail.</p>","types":["string"],"variable":"$thumbfile"},{"name":"param","content":"<p>Attachment ID.</p>","types":["int"],"variable":"$post_id"}]},"args":2},{"name":"pre_wp_update_https_detection_errors","file":"wp-includes/deprecated.php","type":"filter","doc":{"description":"Short-circuits the process of detecting errors related to HTTPS support.","long_description":"Returning a `WP_Error` from the filter will effectively short-circuit the default logic of trying a remote request to the site over HTTPS, storing the errors array from the returned `WP_Error` instead.","long_description_html":"<p>Returning a <code>WP_Error</code> from the filter will effectively short-circuit the default logic of trying a remote request to the site over HTTPS, storing the errors array from the returned <code>WP_Error</code> instead.</p>","tags":[{"name":"since","content":"5.7.0"},{"name":"deprecated","content":"6.4.0 The `wp_update_https_detection_errors` filter is no longer used and has been replaced by `pre_wp_get_https_detection_errors`."},{"name":"param","content":"<p>Error object to short-circuit detection, or null to continue with the default behavior.</p>","types":["null","\\WP_Error"],"variable":"$pre"}]},"args":1},{"name":"wp_img_tag_add_decoding_attr","file":"wp-includes/deprecated.php","type":"filter","doc":{"description":"This action is documented in wp-includes/media.php","long_description":"","long_description_html":"","tags":[]},"args":3},{"name":"wp_should_replace_insecure_home_url","file":"wp-includes/https-migration.php","type":"filter","doc":{"description":"Filters whether WordPress should replace old HTTP URLs to the site with their HTTPS counterpart.","long_description":"If a WordPress site had its URL changed from HTTP to HTTPS, by default this will return `true`. This filter can be used to disable that behavior, e.g. after having replaced URLs manually in the database.","long_description_html":"<p>If a WordPress site had its URL changed from HTTP to HTTPS, by default this will return <code>true</code>. This filter can be used to disable that behavior, e.g. after having replaced URLs manually in the database.</p>","tags":[{"name":"since","content":"5.7.0"},{"name":"param","content":"<p>Whether insecure HTTP URLs to the site should be replaced.</p>","types":["bool"],"variable":"$should_replace_insecure_home_url"}]},"args":1},{"name":"widget_display_callback","file":"wp-includes/class-wp-widget.php","type":"filter","doc":{"description":"Filters the settings for a particular widget instance.","long_description":"Returning false will effectively short-circuit display of the widget.","long_description_html":"<p>Returning false will effectively short-circuit display of the widget.</p>","tags":[{"name":"since","content":"2.8.0"},{"name":"param","content":"<p>The current widget instance's settings.</p>","types":["array"],"variable":"$instance"},{"name":"param","content":"<p>The current widget instance.</p>","types":["\\WP_Widget"],"variable":"$widget"},{"name":"param","content":"<p>An array of default widget arguments.</p>","types":["array"],"variable":"$args"}]},"args":3},{"name":"widget_update_callback","file":"wp-includes/class-wp-widget.php","type":"filter","doc":{"description":"Filters a widget's settings before saving.","long_description":"Returning false will effectively short-circuit the widget's ability to update settings.","long_description_html":"<p>Returning false will effectively short-circuit the widget's ability to update settings.</p>","tags":[{"name":"since","content":"2.8.0"},{"name":"param","content":"<p>The current widget instance's settings.</p>","types":["array"],"variable":"$instance"},{"name":"param","content":"<p>Array of new widget settings.</p>","types":["array"],"variable":"$new_instance"},{"name":"param","content":"<p>Array of old widget settings.</p>","types":["array"],"variable":"$old_instance"},{"name":"param","content":"<p>The current widget instance.</p>","types":["\\WP_Widget"],"variable":"$widget"}]},"args":4},{"name":"widget_form_callback","file":"wp-includes/class-wp-widget.php","type":"filter","doc":{"description":"Filters the widget instance's settings before displaying the control form.","long_description":"Returning false effectively short-circuits display of the control form.","long_description_html":"<p>Returning false effectively short-circuits display of the control form.</p>","tags":[{"name":"since","content":"2.8.0"},{"name":"param","content":"<p>The current widget instance's settings.</p>","types":["array"],"variable":"$instance"},{"name":"param","content":"<p>The current widget instance.</p>","types":["\\WP_Widget"],"variable":"$widget"}]},"args":2},{"name":"recovery_mode_cookie_length","file":"wp-includes/class-wp-recovery-mode-cookie-service.php","type":"filter","doc":{"description":"Filters the length of time a Recovery Mode cookie is valid for.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.2.0"},{"name":"param","content":"<p>Length in seconds.</p>","types":["int"],"variable":"$length"}]},"args":1},{"name":"use_curl_transport","file":"wp-includes/class-wp-http-curl.php","type":"filter","doc":{"description":"Filters whether cURL can be used as a transport for retrieving a URL.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.7.0"},{"name":"param","content":"<p>Whether the class can be used. Default true.</p>","types":["bool"],"variable":"$use_class"},{"name":"param","content":"<p>An array of request arguments.</p>","types":["array"],"variable":"$args"}]},"args":2},{"name":"wp_sitemaps_max_urls","file":"wp-includes/sitemaps.php","type":"filter","doc":{"description":"Filters the maximum number of URLs displayed on a sitemap.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.5.0"},{"name":"param","content":"<p>The maximum number of URLs included in a sitemap. Default 2000.</p>","types":["int"],"variable":"$max_urls"},{"name":"param","content":"<p>Object type for sitemap to be filtered (e.g. 'post', 'term', 'user').</p>","types":["string"],"variable":"$object_type"}]},"args":2},{"name":"post_rewrite_rules","file":"wp-includes/class-wp-rewrite.php","type":"filter","doc":{"description":"Filters rewrite rules used for \"post\" archives.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"1.5.0"},{"name":"param","content":"<p>Array of rewrite rules for posts, keyed by their regex pattern.</p>","types":["string[]"],"variable":"$post_rewrite"}]},"args":1},{"name":"date_rewrite_rules","file":"wp-includes/class-wp-rewrite.php","type":"filter","doc":{"description":"Filters rewrite rules used for date archives.","long_description":"Likely date archives would include `/yyyy/`, `/yyyy/mm/`, and `/yyyy/mm/dd/`.","long_description_html":"<p>Likely date archives would include <code>/yyyy/</code>, <code>/yyyy/mm/</code>, and <code>/yyyy/mm/dd/</code>.</p>","tags":[{"name":"since","content":"1.5.0"},{"name":"param","content":"<p>Array of rewrite rules for date archives, keyed by their regex pattern.</p>","types":["string[]"],"variable":"$date_rewrite"}]},"args":1},{"name":"root_rewrite_rules","file":"wp-includes/class-wp-rewrite.php","type":"filter","doc":{"description":"Filters rewrite rules used for root-level archives.","long_description":"Likely root-level archives would include pagination rules for the homepage as well as site-wide post feeds (e.g. `/feed/`, and `/feed/atom/`).","long_description_html":"<p>Likely root-level archives would include pagination rules for the homepage as well as site-wide post feeds (e.g. <code>/feed/</code>, and <code>/feed/atom/</code>).</p>","tags":[{"name":"since","content":"1.5.0"},{"name":"param","content":"<p>Array of root-level rewrite rules, keyed by their regex pattern.</p>","types":["string[]"],"variable":"$root_rewrite"}]},"args":1},{"name":"comments_rewrite_rules","file":"wp-includes/class-wp-rewrite.php","type":"filter","doc":{"description":"Filters rewrite rules used for comment feed archives.","long_description":"Likely comments feed archives include `/comments/feed/` and `/comments/feed/atom/`.","long_description_html":"<p>Likely comments feed archives include <code>/comments/feed/</code> and <code>/comments/feed/atom/</code>.</p>","tags":[{"name":"since","content":"1.5.0"},{"name":"param","content":"<p>Array of rewrite rules for the site-wide comments feeds, keyed by their regex pattern.</p>","types":["string[]"],"variable":"$comments_rewrite"}]},"args":1},{"name":"search_rewrite_rules","file":"wp-includes/class-wp-rewrite.php","type":"filter","doc":{"description":"Filters rewrite rules used for search archives.","long_description":"Likely search-related archives include `/search/search+query/` as well as pagination and feed paths for a search.","long_description_html":"<p>Likely search-related archives include <code>/search/search+query/</code> as well as pagination and feed paths for a search.</p>","tags":[{"name":"since","content":"1.5.0"},{"name":"param","content":"<p>Array of rewrite rules for search queries, keyed by their regex pattern.</p>","types":["string[]"],"variable":"$search_rewrite"}]},"args":1},{"name":"author_rewrite_rules","file":"wp-includes/class-wp-rewrite.php","type":"filter","doc":{"description":"Filters rewrite rules used for author archives.","long_description":"Likely author archives would include `/author/author-name/`, as well as pagination and feed paths for author archives.","long_description_html":"<p>Likely author archives would include <code>/author/author-name/</code>, as well as pagination and feed paths for author archives.</p>","tags":[{"name":"since","content":"1.5.0"},{"name":"param","content":"<p>Array of rewrite rules for author archives, keyed by their regex pattern.</p>","types":["string[]"],"variable":"$author_rewrite"}]},"args":1},{"name":"page_rewrite_rules","file":"wp-includes/class-wp-rewrite.php","type":"filter","doc":{"description":"Filters rewrite rules used for \"page\" post type archives.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"1.5.0"},{"name":"param","content":"<p>Array of rewrite rules for the &quot;page&quot; post type, keyed by their regex pattern.</p>","types":["string[]"],"variable":"$page_rewrite"}]},"args":1},{"name":"{$permastructname}_rewrite_rules","aliases":["category_rewrite_rules","post_format_rewrite_rules","post_tag_rewrite_rules"],"file":"wp-includes/class-wp-rewrite.php","type":"filter","doc":{"description":"Filters rewrite rules used for individual permastructs.","long_description":"The dynamic portion of the hook name, `$permastructname`, refers to the name of the registered permastruct.\n Possible hook names include:\n\n  - `category_rewrite_rules`\n  - `post_format_rewrite_rules`\n  - `post_tag_rewrite_rules`","long_description_html":"<p>The dynamic portion of the hook name, <code>$permastructname</code>, refers to the name of the registered permastruct.</p> <p>Possible hook names include:</p> <ul> <li><code>category_rewrite_rules</code></li> <li><code>post_format_rewrite_rules</code></li> <li><code>post_tag_rewrite_rules</code></li> </ul>","tags":[{"name":"since","content":"3.1.0"},{"name":"param","content":"<p>Array of rewrite rules generated for the current permastruct, keyed by their regex pattern.</p>","types":["string[]"],"variable":"$rules"}]},"args":1},{"name":"rewrite_rules_array","file":"wp-includes/class-wp-rewrite.php","type":"filter","doc":{"description":"Filters the full set of generated rewrite rules.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"1.5.0"},{"name":"param","content":"<p>The compiled array of rewrite rules, keyed by their regex pattern.</p>","types":["string[]"],"variable":"$rules"}]},"args":1},{"name":"mod_rewrite_rules","file":"wp-includes/class-wp-rewrite.php","type":"filter","doc":{"description":"Filters the list of rewrite rules formatted for output to an .htaccess file.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"1.5.0"},{"name":"param","content":"<p>mod_rewrite Rewrite rules formatted for .htaccess.</p>","types":["string"],"variable":"$rules"}]},"args":1},{"name":"iis7_url_rewrite_rules","file":"wp-includes/class-wp-rewrite.php","type":"filter","doc":{"description":"Filters the list of rewrite rules formatted for output to a web.config.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.8.0"},{"name":"param","content":"<p>Rewrite rules formatted for IIS web.config.</p>","types":["string"],"variable":"$rules"}]},"args":1},{"name":"flush_rewrite_rules_hard","file":"wp-includes/class-wp-rewrite.php","type":"filter","doc":{"description":"Filters whether a \"hard\" rewrite rule flush should be performed when requested.","long_description":"A \"hard\" flush updates .htaccess (Apache) or web.config (IIS).","long_description_html":"<p>A &quot;hard&quot; flush updates .htaccess (Apache) or web.config (IIS).</p>","tags":[{"name":"since","content":"3.7.0"},{"name":"param","content":"<p>Whether to flush rewrite rules &quot;hard&quot;. Default true.</p>","types":["bool"],"variable":"$hard"}]},"args":1},{"name":"heartbeat_settings","file":"wp-includes/script-loader.php","type":"filter","doc":{"description":"Filters the Heartbeat settings.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.6.0"},{"name":"param","content":"<p>Heartbeat settings array.</p>","types":["array"],"variable":"$settings"}]},"args":1},{"name":"mejs_settings","file":"wp-includes/script-loader.php","type":"filter","doc":{"description":"Filters the MediaElement configuration settings.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.4.0"},{"name":"param","content":"<p>MediaElement settings array.</p>","types":["array"],"variable":"$mejs_settings"}]},"args":1},{"name":"print_head_scripts","file":"wp-includes/script-loader.php","type":"filter","doc":{"description":"Filters whether to print the head scripts.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.8.0"},{"name":"param","content":"<p>Whether to print the head scripts. Default true.</p>","types":["bool"],"variable":"$print"}]},"args":1},{"name":"print_footer_scripts","file":"wp-includes/script-loader.php","type":"filter","doc":{"description":"Filters whether to print the footer scripts.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.8.0"},{"name":"param","content":"<p>Whether to print the footer scripts. Default true.</p>","types":["bool"],"variable":"$print"}]},"args":1},{"name":"print_admin_styles","file":"wp-includes/script-loader.php","type":"filter","doc":{"description":"Filters whether to print the admin styles.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.8.0"},{"name":"param","content":"<p>Whether to print the admin styles. Default true.</p>","types":["bool"],"variable":"$print"}]},"args":1},{"name":"print_late_styles","file":"wp-includes/script-loader.php","type":"filter","doc":{"description":"Filters whether to print the styles queued too late for the HTML head.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.3.0"},{"name":"param","content":"<p>Whether to print the 'late' styles. Default true.</p>","types":["bool"],"variable":"$print"}]},"args":1},{"name":"should_load_block_editor_scripts_and_styles","file":"wp-includes/script-loader.php","type":"filter","doc":{"description":"Filters the flag that decides whether or not block editor scripts and styles are going to be enqueued on the current screen.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.6.0"},{"name":"param","content":"<p>Current value of the flag.</p>","types":["bool"],"variable":"$is_block_editor_screen"}]},"args":1},{"name":"should_load_separate_core_block_assets","file":"wp-includes/script-loader.php","type":"filter","doc":{"description":"Filters whether block styles should be loaded separately.","long_description":"Returning false loads all core block assets, regardless of whether they are rendered in a page or not. Returning true loads core block assets only when they are rendered.","long_description_html":"<p>Returning false loads all core block assets, regardless of whether they are rendered in a page or not. Returning true loads core block assets only when they are rendered.</p>","tags":[{"name":"since","content":"5.8.0"},{"name":"param","content":"<p>Whether separate assets will be loaded. Default false (all block assets are loaded, even when not used).</p>","types":["bool"],"variable":"$load_separate_assets"}]},"args":1},{"name":"wp_script_attributes","file":"wp-includes/script-loader.php","type":"filter","doc":{"description":"Filters attributes to be added to a script tag.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.7.0"},{"name":"param","content":"<p>Key-value pairs representing <code>&lt;script&gt;</code> tag attributes. Only the attribute name is added to the <code>&lt;script&gt;</code> tag for entries with a boolean value, and that are true.</p>","types":["array"],"variable":"$attributes"}]},"args":1},{"name":"wp_inline_script_attributes","file":"wp-includes/script-loader.php","type":"filter","doc":{"description":"Filters attributes to be added to a script tag.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.7.0"},{"name":"param","content":"<p>Key-value pairs representing <code>&lt;script&gt;</code> tag attributes. Only the attribute name is added to the <code>&lt;script&gt;</code> tag for entries with a boolean value, and that are true.</p>","types":["array"],"variable":"$attributes"},{"name":"param","content":"<p>Inline data.</p>","types":["string"],"variable":"$data"}]},"args":2},{"name":"styles_inline_size_limit","file":"wp-includes/script-loader.php","type":"filter","doc":{"description":"The maximum size of inlined styles in bytes.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.8.0"},{"name":"param","content":"<p>The file-size threshold, in bytes. Default 20000.</p>","types":["int"],"variable":"$total_inline_limit"}]},"args":1},{"name":"wp_editor_set_quality","file":"wp-includes/class-wp-image-editor.php","type":"filter","doc":{"description":"Filters the default image compression quality setting.","long_description":"Applies only during initial editor instantiation, or when set_quality() is run manually without the `$quality` argument.\n The WP_Image_Editor::set_quality() method has priority over the filter.","long_description_html":"<p>Applies only during initial editor instantiation, or when set_quality() is run manually without the <code>$quality</code> argument.</p> <p>The WP_Image_Editor::set_quality() method has priority over the filter.</p>","tags":[{"name":"since","content":"3.5.0"},{"name":"param","content":"<p>Quality level between 1 (low) and 100 (high).</p>","types":["int"],"variable":"$quality"},{"name":"param","content":"<p>Image mime type.</p>","types":["string"],"variable":"$mime_type"}]},"args":2},{"name":"jpeg_quality","file":"wp-includes/class-wp-image-editor.php","type":"filter","doc":{"description":"Filters the JPEG compression quality for backward-compatibility.","long_description":"Applies only during initial editor instantiation, or when set_quality() is run manually without the `$quality` argument.\n The WP_Image_Editor::set_quality() method has priority over the filter.\n The filter is evaluated under two contexts: 'image_resize', and 'edit_image', (when a JPEG image is saved to file).","long_description_html":"<p>Applies only during initial editor instantiation, or when set_quality() is run manually without the <code>$quality</code> argument.</p> <p>The WP_Image_Editor::set_quality() method has priority over the filter.</p> <p>The filter is evaluated under two contexts: 'image_resize', and 'edit_image', (when a JPEG image is saved to file).</p>","tags":[{"name":"since","content":"2.5.0"},{"name":"param","content":"<p>Quality level between 0 (low) and 100 (high) of the JPEG.</p>","types":["int"],"variable":"$quality"},{"name":"param","content":"<p>Context of the filter.</p>","types":["string"],"variable":"$context"}]},"args":2},{"name":"image_editor_default_mime_type","file":"wp-includes/class-wp-image-editor.php","type":"filter","doc":{"description":"Filters default mime type prior to getting the file extension.","long_description":"","long_description_html":"","tags":[{"name":"see","content":"","refers":"wp_get_mime_types()"},{"name":"since","content":"3.5.0"},{"name":"param","content":"<p>Mime type string.</p>","types":["string"],"variable":"$mime_type"}]},"args":1},{"name":"wp_image_maybe_exif_rotate","file":"wp-includes/class-wp-image-editor.php","type":"filter","doc":{"description":"Filters the `$orientation` value to correct it before rotating or to prevent rotating the image.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.3.0"},{"name":"param","content":"<p>EXIF Orientation value as retrieved from the image file.</p>","types":["int"],"variable":"$orientation"},{"name":"param","content":"<p>Path to the image file.</p>","types":["string"],"variable":"$file"}]},"args":2},{"name":"wp_fatal_error_handler_enabled","file":"wp-includes/error-protection.php","type":"filter","doc":{"description":"Filters whether the fatal error handler is enabled.","long_description":"**Important:** This filter runs before it can be used by plugins. It cannot be used by plugins, mu-plugins, or themes. To use this filter you must define a `$wp_filter` global before WordPress loads, usually in `wp-config.php`.\n Example:\n     $GLOBALS['wp_filter'] = array(         'wp_fatal_error_handler_enabled' => array(             10 => array(                 array(                     'accepted_args' => 0,                     'function'      => function() {                         return false;                     },                 ),             ),         ),     );\n Alternatively you can use the `WP_DISABLE_FATAL_ERROR_HANDLER` constant.","long_description_html":"<p><strong>Important:</strong> This filter runs before it can be used by plugins. It cannot be used by plugins, mu-plugins, or themes. To use this filter you must define a <code>$wp_filter</code> global before WordPress loads, usually in <code>wp-config.php</code>.</p> <p>Example:</p> <pre><code>$GLOBALS['wp_filter'] = array(     'wp_fatal_error_handler_enabled' =&gt; array(         10 =&gt; array(             array(                 'accepted_args' =&gt; 0,                 'function'      =&gt; function() {                     return false;                 },             ),         ),     ), );</code></pre> <p>Alternatively you can use the <code>WP_DISABLE_FATAL_ERROR_HANDLER</code> constant.</p>","tags":[{"name":"since","content":"5.2.0"},{"name":"param","content":"<p>True if the fatal error handler is enabled, false otherwise.</p>","types":["bool"],"variable":"$enabled"}]},"args":1},{"name":"wp_should_handle_php_error","file":"wp-includes/class-wp-fatal-error-handler.php","type":"filter","doc":{"description":"Filters whether a given thrown error should be handled by the fatal error handler.","long_description":"This filter is only fired if the error is not already configured to be handled by WordPress core. As such, it exclusively allows adding further rules for which errors should be handled, but not removing existing ones.","long_description_html":"<p>This filter is only fired if the error is not already configured to be handled by WordPress core. As such, it exclusively allows adding further rules for which errors should be handled, but not removing existing ones.</p>","tags":[{"name":"since","content":"5.2.0"},{"name":"param","content":"<p>Whether the error should be handled by the fatal error handler.</p>","types":["bool"],"variable":"$should_handle_error"},{"name":"param","content":"<p>Error information retrieved from <code>error_get_last()</code>.</p>","types":["array"],"variable":"$error"}]},"args":2},{"name":"wp_php_error_message","file":"wp-includes/class-wp-fatal-error-handler.php","type":"filter","doc":{"description":"Filters the message that the default PHP error template displays.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.2.0"},{"name":"param","content":"<p>HTML error message to display.</p>","types":["string"],"variable":"$message"},{"name":"param","content":"<p>Error information retrieved from <code>error_get_last()</code>.</p>","types":["array"],"variable":"$error"}]},"args":2},{"name":"wp_php_error_args","file":"wp-includes/class-wp-fatal-error-handler.php","type":"filter","doc":{"description":"Filters the arguments passed to {@see wp_die()} for the default PHP error template.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.2.0"},{"name":"param","content":"<p>Associative array of arguments passed to <code>wp_die()</code>. By default these contain a 'response' key, and optionally 'link_url' and 'link_text' keys.</p>","types":["array"],"variable":"$args"},{"name":"param","content":"<p>Error information retrieved from <code>error_get_last()</code>.</p>","types":["array"],"variable":"$error"}]},"args":2},{"name":"sites_pre_query","file":"wp-includes/class-wp-site-query.php","type":"filter","doc":{"description":"Filters the site data before the get_sites query takes place.","long_description":"Return a non-null value to bypass WordPress' default site queries.\n The expected return type from this filter depends on the value passed in the request query vars: - When `$this->query_vars['count']` is set, the filter should return   the site count as an integer. - When `'ids' === $this->query_vars['fields']`, the filter should return   an array of site IDs. - Otherwise the filter should return an array of WP_Site objects.\n Note that if the filter returns an array of site data, it will be assigned to the `sites` property of the current WP_Site_Query instance.\n Filtering functions that require pagination information are encouraged to set the `found_sites` and `max_num_pages` properties of the WP_Site_Query object, passed to the filter by reference. If WP_Site_Query does not perform a database query, it will not have enough information to generate these values itself.","long_description_html":"<p>Return a non-null value to bypass WordPress' default site queries.</p> <p>The expected return type from this filter depends on the value passed in the request query vars:</p> <ul> <li>When <code>$this-&gt;query_vars['count']</code> is set, the filter should return the site count as an integer.</li> <li>When <code>'ids' === $this-&gt;query_vars['fields']</code>, the filter should return an array of site IDs.</li> <li>Otherwise the filter should return an array of WP_Site objects.</li> </ul> <p>Note that if the filter returns an array of site data, it will be assigned to the <code>sites</code> property of the current WP_Site_Query instance.</p> <p>Filtering functions that require pagination information are encouraged to set the <code>found_sites</code> and <code>max_num_pages</code> properties of the WP_Site_Query object, passed to the filter by reference. If WP_Site_Query does not perform a database query, it will not have enough information to generate these values itself.</p>","tags":[{"name":"since","content":"5.2.0"},{"name":"since","content":"5.6.0","description":"<p>The returned array of site data is assigned to the <code>sites</code> property of the current WP_Site_Query instance.</p>"},{"name":"param","content":"<p>Return an array of site data to short-circuit WP's site query, the site count as an integer if <code>$this-&gt;query_vars['count']</code> is set, or null to run the normal queries.</p>","types":["\\WP_Site[]","int[]","int","null"],"variable":"$site_data"},{"name":"param","content":"<p>The WP_Site_Query instance, passed by reference.</p>","types":["\\WP_Site_Query"],"variable":"$query"}]},"args":1},{"name":"the_sites","file":"wp-includes/class-wp-site-query.php","type":"filter","doc":{"description":"Filters the site query results.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.6.0"},{"name":"param","content":"<p>An array of WP_Site objects.</p>","types":["\\WP_Site[]"],"variable":"$_sites"},{"name":"param","content":"<p>Current instance of WP_Site_Query (passed by reference).</p>","types":["\\WP_Site_Query"],"variable":"$query"}]},"args":1},{"name":"site_search_columns","file":"wp-includes/class-wp-site-query.php","type":"filter","doc":{"description":"Filters the columns to search in a WP_Site_Query search.","long_description":"The default columns include 'domain' and 'path.","long_description_html":"<p>The default columns include 'domain' and 'path.</p>","tags":[{"name":"since","content":"4.6.0"},{"name":"param","content":"<p>Array of column names to be searched.</p>","types":["string[]"],"variable":"$search_columns"},{"name":"param","content":"<p>Text being searched.</p>","types":["string"],"variable":"$search"},{"name":"param","content":"<p>The current WP_Site_Query instance.</p>","types":["\\WP_Site_Query"],"variable":"$query"}]},"args":3},{"name":"sites_clauses","file":"wp-includes/class-wp-site-query.php","type":"filter","doc":{"description":"Filters the site query clauses.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.6.0"},{"name":"param","content":"<p>{ Associative array of the clauses for the query.</p>","types":["string[]"],"variable":"$clauses"},{"name":"param","content":"<p>Current instance of WP_Site_Query (passed by reference).</p>","types":["\\WP_Site_Query"],"variable":"$query"}]},"args":1},{"name":"found_sites_query","file":"wp-includes/class-wp-site-query.php","type":"filter","doc":{"description":"Filters the query used to retrieve found site count.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.6.0"},{"name":"param","content":"<p>SQL query. Default 'SELECT FOUND_ROWS()'.</p>","types":["string"],"variable":"$found_sites_query"},{"name":"param","content":"<p>The <code>WP_Site_Query</code> instance.</p>","types":["\\WP_Site_Query"],"variable":"$site_query"}]},"args":2},{"name":"register_sidebar_defaults","file":"wp-includes/widgets.php","type":"filter","doc":{"description":"Filters the sidebar default arguments.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.3.0"},{"name":"see","content":"","refers":"register_sidebar()"},{"name":"param","content":"<p>The default sidebar arguments.</p>","types":["array"],"variable":"$defaults"}]},"args":1},{"name":"dynamic_sidebar_params","file":"wp-includes/widgets.php","type":"filter","doc":{"description":"Filters the parameters passed to a widget's display callback.","long_description":"Note: The filter is evaluated on both the front end and back end, including for the Inactive Widgets sidebar on the Widgets screen.","long_description_html":"<p>Note: The filter is evaluated on both the front end and back end, including for the Inactive Widgets sidebar on the Widgets screen.</p>","tags":[{"name":"since","content":"2.5.0"},{"name":"see","content":"","refers":"register_sidebar()"},{"name":"param","content":"{","types":["array"],"variable":"$params"}]},"args":1},{"name":"dynamic_sidebar_has_widgets","file":"wp-includes/widgets.php","type":"filter","doc":{"description":"Filters whether a sidebar has widgets.","long_description":"Note: The filter is also evaluated for empty sidebars, and on both the front end and back end, including the Inactive Widgets sidebar on the Widgets screen.","long_description_html":"<p>Note: The filter is also evaluated for empty sidebars, and on both the front end and back end, including the Inactive Widgets sidebar on the Widgets screen.</p>","tags":[{"name":"since","content":"3.9.0"},{"name":"param","content":"<p>Whether at least one widget was rendered in the sidebar. Default false.</p>","types":["bool"],"variable":"$did_one"},{"name":"param","content":"<p>Index, name, or ID of the dynamic sidebar.</p>","types":["int","string"],"variable":"$index"}]},"args":2},{"name":"is_active_sidebar","file":"wp-includes/widgets.php","type":"filter","doc":{"description":"Filters whether a dynamic sidebar is considered \"active\".","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.9.0"},{"name":"param","content":"<p>Whether or not the sidebar should be considered &quot;active&quot;. In other words, whether the sidebar contains any widgets.</p>","types":["bool"],"variable":"$is_active_sidebar"},{"name":"param","content":"<p>Index, name, or ID of the dynamic sidebar.</p>","types":["int","string"],"variable":"$index"}]},"args":2},{"name":"sidebars_widgets","file":"wp-includes/widgets.php","type":"filter","doc":{"description":"Filters the list of sidebars and their widgets.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.7.0"},{"name":"param","content":"<p>An associative array of sidebars and their widgets.</p>","types":["array"],"variable":"$sidebars_widgets"}]},"args":1},{"name":"use_widgets_block_editor","file":"wp-includes/widgets.php","type":"filter","doc":{"description":"Filters whether to use the block editor to manage widgets.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.8.0"},{"name":"param","content":"<p>Whether to use the block editor to manage widgets.</p>","types":["bool"],"variable":"$use_widgets_block_editor"}]},"args":1},{"name":"wp_navigation_should_create_fallback","file":"wp-includes/class-wp-navigation-fallback.php","type":"filter","doc":{"description":"Filters whether or not a fallback should be created.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"6.3.0"},{"name":"param","content":"<p>Whether to create a fallback navigation menu. Default true.</p>","types":["bool"],"variable":"$create"}]},"args":1},{"name":"get_attached_file","file":"wp-includes/post.php","type":"filter","doc":{"description":"Filters the attached file based on the given ID.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.1.0"},{"name":"param","content":"<p>The file path to where the attached file should be, false otherwise.</p>","types":["string","false"],"variable":"$file"},{"name":"param","content":"<p>Attachment ID.</p>","types":["int"],"variable":"$attachment_id"}]},"args":2},{"name":"update_attached_file","file":"wp-includes/post.php","type":"filter","doc":{"description":"Filters the path to the attached file to update.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.1.0"},{"name":"param","content":"<p>Path to the attached file to update.</p>","types":["string"],"variable":"$file"},{"name":"param","content":"<p>Attachment ID.</p>","types":["int"],"variable":"$attachment_id"}]},"args":2},{"name":"_wp_relative_upload_path","file":"wp-includes/post.php","type":"filter","doc":{"description":"Filters the relative path to an uploaded file.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.9.0"},{"name":"param","content":"<p>Relative path to the file.</p>","types":["string"],"variable":"$new_path"},{"name":"param","content":"<p>Full path to the file.</p>","types":["string"],"variable":"$path"}]},"args":2},{"name":"get_post_status","file":"wp-includes/post.php","type":"filter","doc":{"description":"Filters the post status.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.4.0"},{"name":"since","content":"5.7.0","description":"<p>The attachment post type is now passed through this filter.</p>"},{"name":"param","content":"<p>The post status.</p>","types":["string"],"variable":"$post_status"},{"name":"param","content":"<p>The post object.</p>","types":["\\WP_Post"],"variable":"$post"}]},"args":2},{"name":"post_type_labels_{$post_type}","aliases":["post_type_labels_attachment","post_type_labels_page","post_type_labels_post"],"file":"wp-includes/post.php","type":"filter","doc":{"description":"Filters the labels of a specific post type.","long_description":"The dynamic portion of the hook name, `$post_type`, refers to the post type slug.\n Possible hook names include:\n\n  - `post_type_labels_post`\n  - `post_type_labels_page`\n  - `post_type_labels_attachment`","long_description_html":"<p>The dynamic portion of the hook name, <code>$post_type</code>, refers to the post type slug.</p> <p>Possible hook names include:</p> <ul> <li><code>post_type_labels_post</code></li> <li><code>post_type_labels_page</code></li> <li><code>post_type_labels_attachment</code></li> </ul>","tags":[{"name":"since","content":"3.5.0"},{"name":"see","content":"<p>for the full list of labels.</p>","refers":"get_post_type_labels()"},{"name":"param","content":"<p>Object with labels for the post type as member variables.</p>","types":["object"],"variable":"$labels"}]},"args":1},{"name":"is_post_type_viewable","file":"wp-includes/post.php","type":"filter","doc":{"description":"Filters whether a post type is considered \"viewable\".","long_description":"The returned filtered value must be a boolean type to ensure `is_post_type_viewable()` only returns a boolean. This strictness is by design to maintain backwards-compatibility and guard against potential type errors in PHP 8.1+. Non-boolean values (even falsey and truthy values) will result in the function returning false.","long_description_html":"<p>The returned filtered value must be a boolean type to ensure <code>is_post_type_viewable()</code> only returns a boolean. This strictness is by design to maintain backwards-compatibility and guard against potential type errors in PHP 8.1+. Non-boolean values (even falsey and truthy values) will result in the function returning false.</p>","tags":[{"name":"since","content":"5.9.0"},{"name":"param","content":"<p>Whether the post type is &quot;viewable&quot; (strict type).</p>","types":["bool"],"variable":"$is_viewable"},{"name":"param","content":"<p>Post type object.</p>","types":["\\WP_Post_Type"],"variable":"$post_type"}]},"args":2},{"name":"is_post_status_viewable","file":"wp-includes/post.php","type":"filter","doc":{"description":"Filters whether a post status is considered \"viewable\".","long_description":"The returned filtered value must be a boolean type to ensure `is_post_status_viewable()` only returns a boolean. This strictness is by design to maintain backwards-compatibility and guard against potential type errors in PHP 8.1+. Non-boolean values (even falsey and truthy values) will result in the function returning false.","long_description_html":"<p>The returned filtered value must be a boolean type to ensure <code>is_post_status_viewable()</code> only returns a boolean. This strictness is by design to maintain backwards-compatibility and guard against potential type errors in PHP 8.1+. Non-boolean values (even falsey and truthy values) will result in the function returning false.</p>","tags":[{"name":"since","content":"5.9.0"},{"name":"param","content":"<p>Whether the post status is &quot;viewable&quot; (strict type).</p>","types":["bool"],"variable":"$is_viewable"},{"name":"param","content":"<p>Post status object.</p>","types":["\\stdClass"],"variable":"$post_status"}]},"args":2},{"name":"is_sticky","file":"wp-includes/post.php","type":"filter","doc":{"description":"Filters whether a post is sticky.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.3.0"},{"name":"param","content":"<p>Whether a post is sticky.</p>","types":["bool"],"variable":"$is_sticky"},{"name":"param","content":"<p>Post ID.</p>","types":["int"],"variable":"$post_id"}]},"args":2},{"name":"edit_{$field}","file":"wp-includes/post.php","type":"filter","doc":{"description":"Filters the value of a specific post field to edit.","long_description":"The dynamic portion of the hook name, `$field`, refers to the post field name. Possible filter names include:\n\n  - `edit_post_author`\n  - `edit_post_date`\n  - `edit_post_date_gmt`\n  - `edit_post_content`\n  - `edit_post_title`\n  - `edit_post_excerpt`\n  - `edit_post_status`\n  - `edit_post_password`\n  - `edit_post_name`\n  - `edit_post_modified`\n  - `edit_post_modified_gmt`\n  - `edit_post_content_filtered`\n  - `edit_post_parent`\n  - `edit_post_type`\n  - `edit_post_mime_type`","long_description_html":"<p>The dynamic portion of the hook name, <code>$field</code>, refers to the post field name. Possible filter names include:</p> <ul> <li><code>edit_post_author</code></li> <li><code>edit_post_date</code></li> <li><code>edit_post_date_gmt</code></li> <li><code>edit_post_content</code></li> <li><code>edit_post_title</code></li> <li><code>edit_post_excerpt</code></li> <li><code>edit_post_status</code></li> <li><code>edit_post_password</code></li> <li><code>edit_post_name</code></li> <li><code>edit_post_modified</code></li> <li><code>edit_post_modified_gmt</code></li> <li><code>edit_post_content_filtered</code></li> <li><code>edit_post_parent</code></li> <li><code>edit_post_type</code></li> <li><code>edit_post_mime_type</code></li> </ul>","tags":[{"name":"since","content":"2.3.0"},{"name":"param","content":"<p>Value of the post field.</p>","types":["mixed"],"variable":"$value"},{"name":"param","content":"<p>Post ID.</p>","types":["int"],"variable":"$post_id"}]},"args":2},{"name":"{$field_no_prefix}_edit_pre","file":"wp-includes/post.php","type":"filter","doc":{"description":"Filters the value of a specific post field to edit.","long_description":"Only applied to post fields with a name which is prefixed with `post_`.\n The dynamic portion of the hook name, `$field_no_prefix`, refers to the post field name minus the `post_` prefix. Possible filter names include:\n\n  - `author_edit_pre`\n  - `date_edit_pre`\n  - `date_gmt_edit_pre`\n  - `content_edit_pre`\n  - `title_edit_pre`\n  - `excerpt_edit_pre`\n  - `status_edit_pre`\n  - `password_edit_pre`\n  - `name_edit_pre`\n  - `modified_edit_pre`\n  - `modified_gmt_edit_pre`\n  - `content_filtered_edit_pre`\n  - `parent_edit_pre`\n  - `type_edit_pre`\n  - `mime_type_edit_pre`","long_description_html":"<p>Only applied to post fields with a name which is prefixed with <code>post_</code>.</p> <p>The dynamic portion of the hook name, <code>$field_no_prefix</code>, refers to the post field name minus the <code>post_</code> prefix. Possible filter names include:</p> <ul> <li><code>author_edit_pre</code></li> <li><code>date_edit_pre</code></li> <li><code>date_gmt_edit_pre</code></li> <li><code>content_edit_pre</code></li> <li><code>title_edit_pre</code></li> <li><code>excerpt_edit_pre</code></li> <li><code>status_edit_pre</code></li> <li><code>password_edit_pre</code></li> <li><code>name_edit_pre</code></li> <li><code>modified_edit_pre</code></li> <li><code>modified_gmt_edit_pre</code></li> <li><code>content_filtered_edit_pre</code></li> <li><code>parent_edit_pre</code></li> <li><code>type_edit_pre</code></li> <li><code>mime_type_edit_pre</code></li> </ul>","tags":[{"name":"since","content":"2.3.0"},{"name":"param","content":"<p>Value of the post field.</p>","types":["mixed"],"variable":"$value"},{"name":"param","content":"<p>Post ID.</p>","types":["int"],"variable":"$post_id"}]},"args":2},{"name":"edit_post_{$field}","file":"wp-includes/post.php","type":"filter","doc":{"description":"Filters the value of a specific post field to edit.","long_description":"Only applied to post fields not prefixed with `post_`.\n The dynamic portion of the hook name, `$field`, refers to the post field name. Possible filter names include:\n\n  - `edit_post_ID`\n  - `edit_post_ping_status`\n  - `edit_post_pinged`\n  - `edit_post_to_ping`\n  - `edit_post_comment_count`\n  - `edit_post_comment_status`\n  - `edit_post_guid`\n  - `edit_post_menu_order`","long_description_html":"<p>Only applied to post fields not prefixed with <code>post_</code>.</p> <p>The dynamic portion of the hook name, <code>$field</code>, refers to the post field name. Possible filter names include:</p> <ul> <li><code>edit_post_ID</code></li> <li><code>edit_post_ping_status</code></li> <li><code>edit_post_pinged</code></li> <li><code>edit_post_to_ping</code></li> <li><code>edit_post_comment_count</code></li> <li><code>edit_post_comment_status</code></li> <li><code>edit_post_guid</code></li> <li><code>edit_post_menu_order</code></li> </ul>","tags":[{"name":"since","content":"2.3.0"},{"name":"param","content":"<p>Value of the post field.</p>","types":["mixed"],"variable":"$value"},{"name":"param","content":"<p>Post ID.</p>","types":["int"],"variable":"$post_id"}]},"args":2},{"name":"pre_{$field}","file":"wp-includes/post.php","type":"filter","doc":{"description":"Filters the value of a specific post field before saving.","long_description":"Only applied to post fields with a name which is prefixed with `post_`.\n The dynamic portion of the hook name, `$field`, refers to the post field name. Possible filter names include:\n\n  - `pre_post_author`\n  - `pre_post_date`\n  - `pre_post_date_gmt`\n  - `pre_post_content`\n  - `pre_post_title`\n  - `pre_post_excerpt`\n  - `pre_post_status`\n  - `pre_post_password`\n  - `pre_post_name`\n  - `pre_post_modified`\n  - `pre_post_modified_gmt`\n  - `pre_post_content_filtered`\n  - `pre_post_parent`\n  - `pre_post_type`\n  - `pre_post_mime_type`","long_description_html":"<p>Only applied to post fields with a name which is prefixed with <code>post_</code>.</p> <p>The dynamic portion of the hook name, <code>$field</code>, refers to the post field name. Possible filter names include:</p> <ul> <li><code>pre_post_author</code></li> <li><code>pre_post_date</code></li> <li><code>pre_post_date_gmt</code></li> <li><code>pre_post_content</code></li> <li><code>pre_post_title</code></li> <li><code>pre_post_excerpt</code></li> <li><code>pre_post_status</code></li> <li><code>pre_post_password</code></li> <li><code>pre_post_name</code></li> <li><code>pre_post_modified</code></li> <li><code>pre_post_modified_gmt</code></li> <li><code>pre_post_content_filtered</code></li> <li><code>pre_post_parent</code></li> <li><code>pre_post_type</code></li> <li><code>pre_post_mime_type</code></li> </ul>","tags":[{"name":"since","content":"2.3.0"},{"name":"param","content":"<p>Value of the post field.</p>","types":["mixed"],"variable":"$value"}]},"args":1},{"name":"{$field_no_prefix}_save_pre","file":"wp-includes/post.php","type":"filter","doc":{"description":"Filters the value of a specific field before saving.","long_description":"Only applied to post fields with a name which is prefixed with `post_`.\n The dynamic portion of the hook name, `$field_no_prefix`, refers to the post field name minus the `post_` prefix. Possible filter names include:\n\n  - `author_save_pre`\n  - `date_save_pre`\n  - `date_gmt_save_pre`\n  - `content_save_pre`\n  - `title_save_pre`\n  - `excerpt_save_pre`\n  - `status_save_pre`\n  - `password_save_pre`\n  - `name_save_pre`\n  - `modified_save_pre`\n  - `modified_gmt_save_pre`\n  - `content_filtered_save_pre`\n  - `parent_save_pre`\n  - `type_save_pre`\n  - `mime_type_save_pre`","long_description_html":"<p>Only applied to post fields with a name which is prefixed with <code>post_</code>.</p> <p>The dynamic portion of the hook name, <code>$field_no_prefix</code>, refers to the post field name minus the <code>post_</code> prefix. Possible filter names include:</p> <ul> <li><code>author_save_pre</code></li> <li><code>date_save_pre</code></li> <li><code>date_gmt_save_pre</code></li> <li><code>content_save_pre</code></li> <li><code>title_save_pre</code></li> <li><code>excerpt_save_pre</code></li> <li><code>status_save_pre</code></li> <li><code>password_save_pre</code></li> <li><code>name_save_pre</code></li> <li><code>modified_save_pre</code></li> <li><code>modified_gmt_save_pre</code></li> <li><code>content_filtered_save_pre</code></li> <li><code>parent_save_pre</code></li> <li><code>type_save_pre</code></li> <li><code>mime_type_save_pre</code></li> </ul>","tags":[{"name":"since","content":"2.3.0"},{"name":"param","content":"<p>Value of the post field.</p>","types":["mixed"],"variable":"$value"}]},"args":1},{"name":"pre_post_{$field}","file":"wp-includes/post.php","type":"filter","doc":{"description":"Filters the value of a specific field before saving.","long_description":"Only applied to post fields with a name which is prefixed with `post_`.\n The dynamic portion of the hook name, `$field_no_prefix`, refers to the post field name minus the `post_` prefix. Possible filter names include:\n\n  - `pre_post_ID`\n  - `pre_post_comment_status`\n  - `pre_post_ping_status`\n  - `pre_post_to_ping`\n  - `pre_post_pinged`\n  - `pre_post_guid`\n  - `pre_post_menu_order`\n  - `pre_post_comment_count`","long_description_html":"<p>Only applied to post fields with a name which is prefixed with <code>post_</code>.</p> <p>The dynamic portion of the hook name, <code>$field_no_prefix</code>, refers to the post field name minus the <code>post_</code> prefix. Possible filter names include:</p> <ul> <li><code>pre_post_ID</code></li> <li><code>pre_post_comment_status</code></li> <li><code>pre_post_ping_status</code></li> <li><code>pre_post_to_ping</code></li> <li><code>pre_post_pinged</code></li> <li><code>pre_post_guid</code></li> <li><code>pre_post_menu_order</code></li> <li><code>pre_post_comment_count</code></li> </ul>","tags":[{"name":"since","content":"2.3.0"},{"name":"param","content":"<p>Value of the post field.</p>","types":["mixed"],"variable":"$value"}]},"args":1},{"name":"{$field}_pre","file":"wp-includes/post.php","type":"filter","doc":{"description":"Filters the value of a specific post field before saving.","long_description":"Only applied to post fields with a name which is *not* prefixed with `post_`.\n The dynamic portion of the hook name, `$field`, refers to the post field name. Possible filter names include:\n\n  - `ID_pre`\n  - `comment_status_pre`\n  - `ping_status_pre`\n  - `to_ping_pre`\n  - `pinged_pre`\n  - `guid_pre`\n  - `menu_order_pre`\n  - `comment_count_pre`","long_description_html":"<p>Only applied to post fields with a name which is <em>not</em> prefixed with <code>post_</code>.</p> <p>The dynamic portion of the hook name, <code>$field</code>, refers to the post field name. Possible filter names include:</p> <ul> <li><code>ID_pre</code></li> <li><code>comment_status_pre</code></li> <li><code>ping_status_pre</code></li> <li><code>to_ping_pre</code></li> <li><code>pinged_pre</code></li> <li><code>guid_pre</code></li> <li><code>menu_order_pre</code></li> <li><code>comment_count_pre</code></li> </ul>","tags":[{"name":"since","content":"2.3.0"},{"name":"param","content":"<p>Value of the post field.</p>","types":["mixed"],"variable":"$value"}]},"args":1},{"name":"{$field}","file":"wp-includes/post.php","type":"filter","doc":{"description":"Filters the value of a specific post field for display.","long_description":"Only applied to post fields with a name which is prefixed with `post_`.\n The dynamic portion of the hook name, `$field`, refers to the post field name. Possible filter names include:\n\n  - `post_author`\n  - `post_date`\n  - `post_date_gmt`\n  - `post_content`\n  - `post_title`\n  - `post_excerpt`\n  - `post_status`\n  - `post_password`\n  - `post_name`\n  - `post_modified`\n  - `post_modified_gmt`\n  - `post_content_filtered`\n  - `post_parent`\n  - `post_type`\n  - `post_mime_type`","long_description_html":"<p>Only applied to post fields with a name which is prefixed with <code>post_</code>.</p> <p>The dynamic portion of the hook name, <code>$field</code>, refers to the post field name. Possible filter names include:</p> <ul> <li><code>post_author</code></li> <li><code>post_date</code></li> <li><code>post_date_gmt</code></li> <li><code>post_content</code></li> <li><code>post_title</code></li> <li><code>post_excerpt</code></li> <li><code>post_status</code></li> <li><code>post_password</code></li> <li><code>post_name</code></li> <li><code>post_modified</code></li> <li><code>post_modified_gmt</code></li> <li><code>post_content_filtered</code></li> <li><code>post_parent</code></li> <li><code>post_type</code></li> <li><code>post_mime_type</code></li> </ul>","tags":[{"name":"since","content":"2.3.0"},{"name":"param","content":"<p>Value of the prefixed post field.</p>","types":["mixed"],"variable":"$value"},{"name":"param","content":"<p>Post ID.</p>","types":["int"],"variable":"$post_id"},{"name":"param","content":"<p>Context for how to sanitize the field. Accepts 'raw', 'edit', 'db', 'display', 'attribute', or 'js'. Default 'display'.</p>","types":["string"],"variable":"$context"}]},"args":3},{"name":"post_{$field}","file":"wp-includes/post.php","type":"filter","doc":{"description":"Filters the value of a specific post field for display.","long_description":"Only applied to post fields name which is *not* prefixed with `post_`.\n The dynamic portion of the hook name, `$field`, refers to the post field name. Possible filter names include:\n\n  - `post_ID`\n  - `post_comment_status`\n  - `post_ping_status`\n  - `post_to_ping`\n  - `post_pinged`\n  - `post_guid`\n  - `post_menu_order`\n  - `post_comment_count`","long_description_html":"<p>Only applied to post fields name which is <em>not</em> prefixed with <code>post_</code>.</p> <p>The dynamic portion of the hook name, <code>$field</code>, refers to the post field name. Possible filter names include:</p> <ul> <li><code>post_ID</code></li> <li><code>post_comment_status</code></li> <li><code>post_ping_status</code></li> <li><code>post_to_ping</code></li> <li><code>post_pinged</code></li> <li><code>post_guid</code></li> <li><code>post_menu_order</code></li> <li><code>post_comment_count</code></li> </ul>","tags":[{"name":"since","content":"2.3.0"},{"name":"param","content":"<p>Value of the unprefixed post field.</p>","types":["mixed"],"variable":"$value"},{"name":"param","content":"<p>Post ID</p>","types":["int"],"variable":"$post_id"},{"name":"param","content":"<p>Context for how to sanitize the field. Accepts 'raw', 'edit', 'db', 'display', 'attribute', or 'js'. Default 'display'.</p>","types":["string"],"variable":"$context"}]},"args":3},{"name":"wp_count_posts","file":"wp-includes/post.php","type":"filter","doc":{"description":"Filters the post counts by status for the current post type.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.7.0"},{"name":"param","content":"<p>An object containing the current post_type's post counts by status.</p>","types":["\\stdClass"],"variable":"$counts"},{"name":"param","content":"<p>Post type.</p>","types":["string"],"variable":"$type"},{"name":"param","content":"<p>The permission to determine if the posts are 'readable' by the current user.</p>","types":["string"],"variable":"$perm"}]},"args":3},{"name":"wp_count_attachments","file":"wp-includes/post.php","type":"filter","doc":{"description":"Filters the attachment counts by mime type.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.7.0"},{"name":"param","content":"<p>An object containing the attachment counts by mime type.</p>","types":["\\stdClass"],"variable":"$counts"},{"name":"param","content":"<p>Array or comma-separated list of MIME patterns.</p>","types":["string","string[]"],"variable":"$mime_type"}]},"args":2},{"name":"post_mime_types","file":"wp-includes/post.php","type":"filter","doc":{"description":"Filters the default list of post mime types.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.5.0"},{"name":"param","content":"<p>Default list of post mime types.</p>","types":["array"],"variable":"$post_mime_types"}]},"args":1},{"name":"pre_delete_post","file":"wp-includes/post.php","type":"filter","doc":{"description":"Filters whether a post deletion should take place.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.4.0"},{"name":"param","content":"<p>Whether to go forward with deletion.</p>","types":["\\WP_Post","false","null"],"variable":"$delete"},{"name":"param","content":"<p>Post object.</p>","types":["\\WP_Post"],"variable":"$post"},{"name":"param","content":"<p>Whether to bypass the Trash.</p>","types":["bool"],"variable":"$force_delete"}]},"args":3},{"name":"pre_trash_post","file":"wp-includes/post.php","type":"filter","doc":{"description":"Filters whether a post trashing should take place.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.9.0"},{"name":"since","content":"6.3.0","description":"<p>Added the <code>$previous_status</code> parameter.</p>"},{"name":"param","content":"<p>Whether to go forward with trashing.</p>","types":["bool","null"],"variable":"$trash"},{"name":"param","content":"<p>Post object.</p>","types":["\\WP_Post"],"variable":"$post"},{"name":"param","content":"<p>The status of the post about to be trashed.</p>","types":["string"],"variable":"$previous_status"}]},"args":3},{"name":"pre_untrash_post","file":"wp-includes/post.php","type":"filter","doc":{"description":"Filters whether a post untrashing should take place.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.9.0"},{"name":"since","content":"5.6.0","description":"<p>Added the <code>$previous_status</code> parameter.</p>"},{"name":"param","content":"<p>Whether to go forward with untrashing.</p>","types":["bool","null"],"variable":"$untrash"},{"name":"param","content":"<p>Post object.</p>","types":["\\WP_Post"],"variable":"$post"},{"name":"param","content":"<p>The status of the post at the point where it was trashed.</p>","types":["string"],"variable":"$previous_status"}]},"args":3},{"name":"wp_untrash_post_status","file":"wp-includes/post.php","type":"filter","doc":{"description":"Filters the status that a post gets assigned when it is restored from the trash (untrashed).","long_description":"By default posts that are restored will be assigned a status of 'draft'. Return the value of `$previous_status` in order to assign the status that the post had before it was trashed. The `wp_untrash_post_set_previous_status()` function is available for this.\n Prior to WordPress 5.6.0, restored posts were always assigned their original status.","long_description_html":"<p>By default posts that are restored will be assigned a status of 'draft'. Return the value of <code>$previous_status</code> in order to assign the status that the post had before it was trashed. The <code>wp_untrash_post_set_previous_status()</code> function is available for this.</p> <p>Prior to WordPress 5.6.0, restored posts were always assigned their original status.</p>","tags":[{"name":"since","content":"5.6.0"},{"name":"param","content":"<p>The new status of the post being restored.</p>","types":["string"],"variable":"$new_status"},{"name":"param","content":"<p>The ID of the post being restored.</p>","types":["int"],"variable":"$post_id"},{"name":"param","content":"<p>The status of the post at the point where it was trashed.</p>","types":["string"],"variable":"$previous_status"}]},"args":3},{"name":"wp_insert_post_empty_content","file":"wp-includes/post.php","type":"filter","doc":{"description":"Filters whether the post should be considered \"empty\".","long_description":"The post is considered \"empty\" if both:\n 1. The post type supports the title, editor, and excerpt fields\n 2. The title, editor, and excerpt fields are all empty\n Returning a truthy value from the filter will effectively short-circuit the new post being inserted and return 0. If $wp_error is true, a WP_Error will be returned instead.","long_description_html":"<p>The post is considered &quot;empty&quot; if both:</p> <ol> <li>The post type supports the title, editor, and excerpt fields</li> <li>The title, editor, and excerpt fields are all empty</li> </ol> <p>Returning a truthy value from the filter will effectively short-circuit the new post being inserted and return 0. If $wp_error is true, a WP_Error will be returned instead.</p>","tags":[{"name":"since","content":"3.3.0"},{"name":"param","content":"<p>Whether the post should be considered &quot;empty&quot;.</p>","types":["bool"],"variable":"$maybe_empty"},{"name":"param","content":"<p>Array of post data.</p>","types":["array"],"variable":"$postarr"}]},"args":2},{"name":"wp_insert_post_parent","file":"wp-includes/post.php","type":"filter","doc":{"description":"Filters the post parent -- used to check for and prevent hierarchy loops.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.1.0"},{"name":"param","content":"<p>Post parent ID.</p>","types":["int"],"variable":"$post_parent"},{"name":"param","content":"<p>Post ID.</p>","types":["int"],"variable":"$post_id"},{"name":"param","content":"<p>Array of parsed post data.</p>","types":["array"],"variable":"$new_postarr"},{"name":"param","content":"<p>Array of sanitized, but otherwise unmodified post data.</p>","types":["array"],"variable":"$postarr"}]},"args":4},{"name":"add_trashed_suffix_to_trashed_posts","file":"wp-includes/post.php","type":"filter","doc":{"description":"Filters whether or not to add a `__trashed` suffix to trashed posts that match the name of the updated post.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.4.0"},{"name":"param","content":"<p>Whether to attempt to add the suffix.</p>","types":["bool"],"variable":"$add_trashed_suffix"},{"name":"param","content":"<p>The name of the post being updated.</p>","types":["string"],"variable":"$post_name"},{"name":"param","content":"<p>Post ID.</p>","types":["int"],"variable":"$post_id"}]},"args":3},{"name":"wp_insert_attachment_data","file":"wp-includes/post.php","type":"filter","doc":{"description":"Filters attachment post data before it is updated in or added to the database.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.9.0"},{"name":"since","content":"5.4.1","description":"<p>The <code>$unsanitized_postarr</code> parameter was added.</p>"},{"name":"since","content":"6.0.0","description":"<p>The <code>$update</code> parameter was added.</p>"},{"name":"param","content":"<p>An array of slashed, sanitized, and processed attachment post data.</p>","types":["array"],"variable":"$data"},{"name":"param","content":"<p>An array of slashed and sanitized attachment post data, but not processed.</p>","types":["array"],"variable":"$postarr"},{"name":"param","content":"<p>An array of slashed yet <em>unsanitized</em> and unprocessed attachment post data as originally passed to wp_insert_post().</p>","types":["array"],"variable":"$unsanitized_postarr"},{"name":"param","content":"<p>Whether this is an existing attachment post being updated.</p>","types":["bool"],"variable":"$update"}]},"args":4},{"name":"wp_insert_post_data","file":"wp-includes/post.php","type":"filter","doc":{"description":"Filters slashed post data just before it is inserted into the database.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.7.0"},{"name":"since","content":"5.4.1","description":"<p>The <code>$unsanitized_postarr</code> parameter was added.</p>"},{"name":"since","content":"6.0.0","description":"<p>The <code>$update</code> parameter was added.</p>"},{"name":"param","content":"<p>An array of slashed, sanitized, and processed post data.</p>","types":["array"],"variable":"$data"},{"name":"param","content":"<p>An array of sanitized (and slashed) but otherwise unmodified post data.</p>","types":["array"],"variable":"$postarr"},{"name":"param","content":"<p>An array of slashed yet <em>unsanitized</em> and unprocessed post data as originally passed to wp_insert_post().</p>","types":["array"],"variable":"$unsanitized_postarr"},{"name":"param","content":"<p>Whether this is an existing post being updated.</p>","types":["bool"],"variable":"$update"}]},"args":4},{"name":"pre_wp_unique_post_slug","file":"wp-includes/post.php","type":"filter","doc":{"description":"Filters the post slug before it is generated to be unique.","long_description":"Returning a non-null value will short-circuit the unique slug generation, returning the passed value instead.","long_description_html":"<p>Returning a non-null value will short-circuit the unique slug generation, returning the passed value instead.</p>","tags":[{"name":"since","content":"5.1.0"},{"name":"param","content":"<p>Short-circuit return value.</p>","types":["string","null"],"variable":"$override_slug"},{"name":"param","content":"<p>The desired slug (post_name).</p>","types":["string"],"variable":"$slug"},{"name":"param","content":"<p>Post ID.</p>","types":["int"],"variable":"$post_id"},{"name":"param","content":"<p>The post status.</p>","types":["string"],"variable":"$post_status"},{"name":"param","content":"<p>Post type.</p>","types":["string"],"variable":"$post_type"},{"name":"param","content":"<p>Post parent ID.</p>","types":["int"],"variable":"$post_parent"}]},"args":6},{"name":"wp_unique_post_slug_is_bad_attachment_slug","file":"wp-includes/post.php","type":"filter","doc":{"description":"Filters whether the post slug would make a bad attachment slug.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.1.0"},{"name":"param","content":"<p>Whether the slug would be bad as an attachment slug.</p>","types":["bool"],"variable":"$bad_slug"},{"name":"param","content":"<p>The post slug.</p>","types":["string"],"variable":"$slug"}]},"args":2},{"name":"wp_unique_post_slug_is_bad_hierarchical_slug","file":"wp-includes/post.php","type":"filter","doc":{"description":"Filters whether the post slug would make a bad hierarchical post slug.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.1.0"},{"name":"param","content":"<p>Whether the post slug would be bad in a hierarchical post context.</p>","types":["bool"],"variable":"$bad_slug"},{"name":"param","content":"<p>The post slug.</p>","types":["string"],"variable":"$slug"},{"name":"param","content":"<p>Post type.</p>","types":["string"],"variable":"$post_type"},{"name":"param","content":"<p>Post parent ID.</p>","types":["int"],"variable":"$post_parent"}]},"args":4},{"name":"wp_unique_post_slug_is_bad_flat_slug","file":"wp-includes/post.php","type":"filter","doc":{"description":"Filters whether the post slug would be bad as a flat slug.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.1.0"},{"name":"param","content":"<p>Whether the post slug would be bad as a flat slug.</p>","types":["bool"],"variable":"$bad_slug"},{"name":"param","content":"<p>The post slug.</p>","types":["string"],"variable":"$slug"},{"name":"param","content":"<p>Post type.</p>","types":["string"],"variable":"$post_type"}]},"args":3},{"name":"wp_unique_post_slug","file":"wp-includes/post.php","type":"filter","doc":{"description":"Filters the unique post slug.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.3.0"},{"name":"param","content":"<p>The post slug.</p>","types":["string"],"variable":"$slug"},{"name":"param","content":"<p>Post ID.</p>","types":["int"],"variable":"$post_id"},{"name":"param","content":"<p>The post status.</p>","types":["string"],"variable":"$post_status"},{"name":"param","content":"<p>Post type.</p>","types":["string"],"variable":"$post_type"},{"name":"param","content":"<p>Post parent ID</p>","types":["int"],"variable":"$post_parent"},{"name":"param","content":"<p>The original post slug.</p>","types":["string"],"variable":"$original_slug"}]},"args":6},{"name":"default_category_post_types","file":"wp-includes/post.php","type":"filter","doc":{"description":"Filters post types (in addition to 'post') that require a default category.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.5.0"},{"name":"param","content":"<p>An array of post type names. Default empty array.</p>","types":["string[]"],"variable":"$post_types"}]},"args":1},{"name":"add_ping","file":"wp-includes/post.php","type":"filter","doc":{"description":"Filters the new ping URL to add for the given post.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.0.0"},{"name":"param","content":"<p>New ping URL to add.</p>","types":["string"],"variable":"$new"}]},"args":1},{"name":"get_enclosed","file":"wp-includes/post.php","type":"filter","doc":{"description":"Filters the list of enclosures already enclosed for the given post.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.0.0"},{"name":"param","content":"<p>Array of enclosures for the given post.</p>","types":["string[]"],"variable":"$pung"},{"name":"param","content":"<p>Post ID.</p>","types":["int"],"variable":"$post_id"}]},"args":2},{"name":"get_pung","file":"wp-includes/post.php","type":"filter","doc":{"description":"Filters the list of already-pinged URLs for the given post.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.0.0"},{"name":"param","content":"<p>Array of URLs already pinged for the given post.</p>","types":["string[]"],"variable":"$pung"}]},"args":1},{"name":"get_to_ping","file":"wp-includes/post.php","type":"filter","doc":{"description":"Filters the list of URLs yet to ping for the given post.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.0.0"},{"name":"param","content":"<p>List of URLs yet to ping.</p>","types":["string[]"],"variable":"$to_ping"}]},"args":1},{"name":"get_page_uri","file":"wp-includes/post.php","type":"filter","doc":{"description":"Filters the URI for a page.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.4.0"},{"name":"param","content":"<p>Page URI.</p>","types":["string"],"variable":"$uri"},{"name":"param","content":"<p>Page object.</p>","types":["\\WP_Post"],"variable":"$page"}]},"args":2},{"name":"get_pages_query_args","file":"wp-includes/post.php","type":"filter","doc":{"description":"Filters query arguments passed to WP_Query in get_pages.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"6.3.0"},{"name":"param","content":"<p>Array of arguments passed to WP_Query.</p>","types":["array"],"variable":"$query_args"},{"name":"param","content":"<p>Array of get_pages() arguments.</p>","types":["array"],"variable":"$parsed_args"}]},"args":2},{"name":"get_pages","file":"wp-includes/post.php","type":"filter","doc":{"description":"Filters the retrieved list of pages.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.1.0"},{"name":"param","content":"<p>Array of page objects.</p>","types":["\\WP_Post[]"],"variable":"$pages"},{"name":"param","content":"<p>Array of get_pages() arguments.</p>","types":["array"],"variable":"$parsed_args"}]},"args":2},{"name":"pre_delete_attachment","file":"wp-includes/post.php","type":"filter","doc":{"description":"Filters whether an attachment deletion should take place.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.5.0"},{"name":"param","content":"<p>Whether to go forward with deletion.</p>","types":["\\WP_Post","false","null"],"variable":"$delete"},{"name":"param","content":"<p>Post object.</p>","types":["\\WP_Post"],"variable":"$post"},{"name":"param","content":"<p>Whether to bypass the Trash.</p>","types":["bool"],"variable":"$force_delete"}]},"args":3},{"name":"wp_get_attachment_metadata","file":"wp-includes/post.php","type":"filter","doc":{"description":"Filters the attachment meta data.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.1.0"},{"name":"param","content":"<p>Array of meta data for the given attachment.</p>","types":["array"],"variable":"$data"},{"name":"param","content":"<p>Attachment post ID.</p>","types":["int"],"variable":"$attachment_id"}]},"args":2},{"name":"wp_update_attachment_metadata","file":"wp-includes/post.php","type":"filter","doc":{"description":"Filters the updated attachment meta data.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.1.0"},{"name":"param","content":"<p>Array of updated attachment meta data.</p>","types":["array"],"variable":"$data"},{"name":"param","content":"<p>Attachment post ID.</p>","types":["int"],"variable":"$attachment_id"}]},"args":2},{"name":"wp_get_attachment_url","file":"wp-includes/post.php","type":"filter","doc":{"description":"Filters the attachment URL.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.1.0"},{"name":"param","content":"<p>URL for the given attachment.</p>","types":["string"],"variable":"$url"},{"name":"param","content":"<p>Attachment post ID.</p>","types":["int"],"variable":"$attachment_id"}]},"args":2},{"name":"wp_get_attachment_caption","file":"wp-includes/post.php","type":"filter","doc":{"description":"Filters the attachment caption.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.6.0"},{"name":"param","content":"<p>Caption for the given attachment.</p>","types":["string"],"variable":"$caption"},{"name":"param","content":"<p>Attachment ID.</p>","types":["int"],"variable":"$post_id"}]},"args":2},{"name":"wp_get_attachment_thumb_url","file":"wp-includes/post.php","type":"filter","doc":{"description":"Filters the attachment thumbnail URL.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.1.0"},{"name":"param","content":"<p>URL for the attachment thumbnail.</p>","types":["string"],"variable":"$thumbnail_url"},{"name":"param","content":"<p>Attachment ID.</p>","types":["int"],"variable":"$post_id"}]},"args":2},{"name":"icon_dir","file":"wp-includes/post.php","type":"filter","doc":{"description":"Filters the icon directory path.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.0.0"},{"name":"param","content":"<p>Icon directory absolute path.</p>","types":["string"],"variable":"$path"}]},"args":1},{"name":"icon_dir_uri","file":"wp-includes/post.php","type":"filter","doc":{"description":"Filters the icon directory URI.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.0.0"},{"name":"param","content":"<p>Icon directory URI.</p>","types":["string"],"variable":"$uri"}]},"args":1},{"name":"icon_dirs","file":"wp-includes/post.php","type":"filter","doc":{"description":"Filters the array of icon directory URIs.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.5.0"},{"name":"param","content":"<p>Array of icon directory URIs keyed by directory absolute path.</p>","types":["string[]"],"variable":"$uris"}]},"args":1},{"name":"wp_mime_type_icon","file":"wp-includes/post.php","type":"filter","doc":{"description":"Filters the mime type icon.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.1.0"},{"name":"param","content":"<p>Path to the mime type icon.</p>","types":["string"],"variable":"$icon"},{"name":"param","content":"<p>Mime type.</p>","types":["string"],"variable":"$mime"},{"name":"param","content":"<p>Attachment ID. Will equal 0 if the function passed the mime type.</p>","types":["int"],"variable":"$post_id"}]},"args":3},{"name":"get_lastpostdate","file":"wp-includes/post.php","type":"filter","doc":{"description":"Filters the most recent time that a post on the site was published.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.3.0"},{"name":"since","content":"5.5.0","description":"<p>Added the <code>$post_type</code> parameter.</p>"},{"name":"param","content":"<p>The most recent time that a post was published, in 'Y-m-d H:i:s' format. False on failure.</p>","types":["string","false"],"variable":"$lastpostdate"},{"name":"param","content":"<p>Location to use for getting the post published date. See get_lastpostdate() for accepted <code>$timezone</code> values.</p>","types":["string"],"variable":"$timezone"},{"name":"param","content":"<p>The post type to check.</p>","types":["string"],"variable":"$post_type"}]},"args":3},{"name":"pre_get_lastpostmodified","file":"wp-includes/post.php","type":"filter","doc":{"description":"Pre-filter the return value of get_lastpostmodified() before the query is run.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.4.0"},{"name":"param","content":"<p>The most recent time that a post was modified, in 'Y-m-d H:i:s' format, or false. Returning anything other than false will short-circuit the function.</p>","types":["string","false"],"variable":"$lastpostmodified"},{"name":"param","content":"<p>Location to use for getting the post modified date. See get_lastpostdate() for accepted <code>$timezone</code> values.</p>","types":["string"],"variable":"$timezone"},{"name":"param","content":"<p>The post type to check.</p>","types":["string"],"variable":"$post_type"}]},"args":3},{"name":"get_lastpostmodified","file":"wp-includes/post.php","type":"filter","doc":{"description":"Filters the most recent time that a post on the site was modified.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.3.0"},{"name":"since","content":"5.5.0","description":"<p>Added the <code>$post_type</code> parameter.</p>"},{"name":"param","content":"<p>The most recent time that a post was modified, in 'Y-m-d H:i:s' format. False on failure.</p>","types":["string","false"],"variable":"$lastpostmodified"},{"name":"param","content":"<p>Location to use for getting the post modified date. See get_lastpostdate() for accepted <code>$timezone</code> values.</p>","types":["string"],"variable":"$timezone"},{"name":"param","content":"<p>The post type to check.</p>","types":["string"],"variable":"$post_type"}]},"args":3},{"name":"pre_get_available_post_mime_types","file":"wp-includes/post.php","type":"filter","doc":{"description":"Filters the list of available post MIME types for the given post type.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"6.4.0"},{"name":"param","content":"<p>An array of MIME types. Default null.</p>","types":["string[]","null"],"variable":"$mime_types"},{"name":"param","content":"<p>The post type name. Usually 'attachment' but can be any post type.</p>","types":["string"],"variable":"$type"}]},"args":2},{"name":"wp_get_original_image_path","file":"wp-includes/post.php","type":"filter","doc":{"description":"Filters the path to the original image.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.3.0"},{"name":"param","content":"<p>Path to original image file.</p>","types":["string"],"variable":"$original_image"},{"name":"param","content":"<p>Attachment ID.</p>","types":["int"],"variable":"$attachment_id"}]},"args":2},{"name":"wp_get_original_image_url","file":"wp-includes/post.php","type":"filter","doc":{"description":"Filters the URL to the original attachment image.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.3.0"},{"name":"param","content":"<p>URL to original image.</p>","types":["string"],"variable":"$original_image_url"},{"name":"param","content":"<p>Attachment ID.</p>","types":["int"],"variable":"$attachment_id"}]},"args":2},{"name":"use_block_editor_for_post","file":"wp-includes/post.php","type":"filter","doc":{"description":"Filters whether a post is able to be edited in the block editor.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.0.0"},{"name":"param","content":"<p>Whether the post can be edited or not.</p>","types":["bool"],"variable":"$use_block_editor"},{"name":"param","content":"<p>The post being checked.</p>","types":["\\WP_Post"],"variable":"$post"}]},"args":2},{"name":"use_block_editor_for_post_type","file":"wp-includes/post.php","type":"filter","doc":{"description":"Filters whether a post is able to be edited in the block editor.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.0.0"},{"name":"param","content":"<p>Whether the post type can be edited or not. Default true.</p>","types":["bool"],"variable":"$use_block_editor"},{"name":"param","content":"<p>The post type being checked.</p>","types":["string"],"variable":"$post_type"}]},"args":2},{"name":"block_bindings_source_value","file":"wp-includes/class-wp-block-bindings-source.php","type":"filter","doc":{"description":"Filters the output of a block bindings source.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"6.7.0"},{"name":"param","content":"<p>The computed value for the source.</p>","types":["mixed"],"variable":"$value"},{"name":"param","content":"<p>The name of the source.</p>","types":["string"],"variable":"$name"},{"name":"param","content":"<p>Array containing source arguments used to look up the override value, i.e. { &quot;key&quot;: &quot;foo&quot; }.</p>","types":["array"],"variable":"$source_args"},{"name":"param","content":"<p>The block instance.</p>","types":["\\WP_Block"],"variable":"$block_instance"},{"name":"param","content":"<p>The name of an attribute.</p>","types":["string"],"variable":"$attribute_name"}]},"args":5},{"name":"date_query_valid_columns","file":"wp-includes/class-wp-date-query.php","type":"filter","doc":{"description":"Filters the list of valid date query columns.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.7.0"},{"name":"since","content":"4.1.0","description":"<p>Added 'user_registered' to the default recognized columns.</p>"},{"name":"since","content":"4.6.0","description":"<p>Added 'registered' and 'last_updated' to the default recognized columns.</p>"},{"name":"param","content":"<p>An array of valid date query columns. Defaults are 'post_date', 'post_date_gmt', 'post_modified', 'post_modified_gmt', 'comment_date', 'comment_date_gmt', 'user_registered', 'registered', 'last_updated'.</p>","types":["string[]"],"variable":"$valid_columns"}]},"args":1},{"name":"get_date_sql","file":"wp-includes/class-wp-date-query.php","type":"filter","doc":{"description":"Filters the date query WHERE clause.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.7.0"},{"name":"param","content":"<p>WHERE clause of the date query.</p>","types":["string"],"variable":"$where"},{"name":"param","content":"<p>The WP_Date_Query instance.</p>","types":["\\WP_Date_Query"],"variable":"$query"}]},"args":2},{"name":"wp_admin_bar_class","file":"wp-includes/admin-bar.php","type":"filter","doc":{"description":"Filters the admin bar class to instantiate.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.1.0"},{"name":"param","content":"<p>Admin bar class to use. Default 'WP_Admin_Bar'.</p>","types":["string"],"variable":"$wp_admin_bar_class"}]},"args":1},{"name":"wp_admin_bar_show_site_icons","file":"wp-includes/admin-bar.php","type":"filter","doc":{"description":"Filters whether to show the site icons in toolbar.","long_description":"Returning false to this hook is the recommended way to hide site icons in the toolbar. A truthy return may have negative performance impact on large multisites.","long_description_html":"<p>Returning false to this hook is the recommended way to hide site icons in the toolbar. A truthy return may have negative performance impact on large multisites.</p>","tags":[{"name":"since","content":"6.0.0"},{"name":"param","content":"<p>Whether site icons should be shown in the toolbar. Default true.</p>","types":["bool"],"variable":"$show_site_icons"}]},"args":1},{"name":"show_admin_bar","file":"wp-includes/admin-bar.php","type":"filter","doc":{"description":"Filters whether to show the admin bar.","long_description":"Returning false to this hook is the recommended way to hide the admin bar. The user's display preference is used for logged in users.","long_description_html":"<p>Returning false to this hook is the recommended way to hide the admin bar. The user's display preference is used for logged in users.</p>","tags":[{"name":"since","content":"3.1.0"},{"name":"param","content":"<p>Whether the admin bar should be shown. Default false.</p>","types":["bool"],"variable":"$show_admin_bar"}]},"args":1},{"name":"the_author","file":"wp-includes/author-template.php","type":"filter","doc":{"description":"Filters the display name of the current post's author.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.9.0"},{"name":"param","content":"<p>The author's display name.</p>","types":["string"],"variable":"$display_name"}]},"args":1},{"name":"the_modified_author","file":"wp-includes/author-template.php","type":"filter","doc":{"description":"Filters the display name of the author who last edited the current post.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.8.0"},{"name":"param","content":"<p>The author's display name, empty string if unknown.</p>","types":["string"],"variable":"$display_name"}]},"args":1},{"name":"get_the_author_{$field}","file":"wp-includes/author-template.php","type":"filter","doc":{"description":"Filters the value of the requested user metadata.","long_description":"The filter name is dynamic and depends on the $field parameter of the function.","long_description_html":"<p>The filter name is dynamic and depends on the $field parameter of the function.</p>","tags":[{"name":"since","content":"2.8.0"},{"name":"since","content":"4.3.0","description":"<p>The <code>$original_user_id</code> parameter was added.</p>"},{"name":"param","content":"<p>The value of the metadata.</p>","types":["string"],"variable":"$value"},{"name":"param","content":"<p>The user ID for the value.</p>","types":["int"],"variable":"$user_id"},{"name":"param","content":"<p>The original user ID, as passed to the function.</p>","types":["int","false"],"variable":"$original_user_id"}]},"args":3},{"name":"the_author_{$field}","file":"wp-includes/author-template.php","type":"filter","doc":{"description":"Filters the value of the requested user metadata.","long_description":"The filter name is dynamic and depends on the $field parameter of the function.","long_description_html":"<p>The filter name is dynamic and depends on the $field parameter of the function.</p>","tags":[{"name":"since","content":"2.8.0"},{"name":"param","content":"<p>The value of the metadata.</p>","types":["string"],"variable":"$author_meta"},{"name":"param","content":"<p>The user ID.</p>","types":["int","false"],"variable":"$user_id"}]},"args":2},{"name":"the_author_link","file":"wp-includes/author-template.php","type":"filter","doc":{"description":"Filters the author URL link HTML.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"6.0.0"},{"name":"param","content":"<p>The default rendered author HTML link.</p>","types":["string"],"variable":"$link"},{"name":"param","content":"<p>Author's URL.</p>","types":["string"],"variable":"$author_url"},{"name":"param","content":"<p>Author user data.</p>","types":["\\WP_User"],"variable":"$authordata"}]},"args":3},{"name":"the_author_posts_link","file":"wp-includes/author-template.php","type":"filter","doc":{"description":"Filters the link to the author page of the author of the current post.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.9.0"},{"name":"param","content":"<p>HTML link.</p>","types":["string"],"variable":"$link"}]},"args":1},{"name":"author_link","file":"wp-includes/author-template.php","type":"filter","doc":{"description":"Filters the URL to the author's page.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.1.0"},{"name":"param","content":"<p>The URL to the author's page.</p>","types":["string"],"variable":"$link"},{"name":"param","content":"<p>The author's ID.</p>","types":["int"],"variable":"$author_id"},{"name":"param","content":"<p>The author's nice name.</p>","types":["string"],"variable":"$author_nicename"}]},"args":3},{"name":"wp_list_authors_args","file":"wp-includes/author-template.php","type":"filter","doc":{"description":"Filters the query arguments for the list of all authors of the site.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"6.1.0"},{"name":"param","content":"<p>The query arguments for get_users().</p>","types":["array"],"variable":"$query_args"},{"name":"param","content":"<p>The arguments passed to wp_list_authors() combined with the defaults.</p>","types":["array"],"variable":"$parsed_args"}]},"args":2},{"name":"pre_wp_list_authors_post_counts_query","file":"wp-includes/author-template.php","type":"filter","doc":{"description":"Filters whether to short-circuit performing the query for author post counts.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"6.1.0"},{"name":"param","content":"<p>Array of post counts, keyed by author ID.</p>","types":["int[]","false"],"variable":"$post_counts"},{"name":"param","content":"<p>The arguments passed to wp_list_authors() combined with the defaults.</p>","types":["array"],"variable":"$parsed_args"}]},"args":2},{"name":"is_multi_author","file":"wp-includes/author-template.php","type":"filter","doc":{"description":"Filters whether the site has more than one author with published posts.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.2.0"},{"name":"param","content":"<p>Whether $is_multi_author should evaluate as true.</p>","types":["bool"],"variable":"$is_multi_author"}]},"args":1},{"name":"style_loader_tag","file":"wp-includes/class-wp-styles.php","type":"filter","doc":{"description":"Filters the HTML link tag of an enqueued style.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.6.0"},{"name":"since","content":"4.3.0","description":"<p>Introduced the <code>$href</code> parameter.</p>"},{"name":"since","content":"4.5.0","description":"<p>Introduced the <code>$media</code> parameter.</p>"},{"name":"param","content":"<p>The link tag for the enqueued style.</p>","types":["string"],"variable":"$tag"},{"name":"param","content":"<p>The style's registered handle.</p>","types":["string"],"variable":"$handle"},{"name":"param","content":"<p>The stylesheet's source URL.</p>","types":["string"],"variable":"$href"},{"name":"param","content":"<p>The stylesheet's media attribute.</p>","types":["string"],"variable":"$media"}]},"args":4},{"name":"print_styles_array","file":"wp-includes/class-wp-styles.php","type":"filter","doc":{"description":"Filters the array of enqueued styles before processing for output.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.6.0"},{"name":"param","content":"<p>The list of enqueued style handles about to be processed.</p>","types":["string[]"],"variable":"$to_do"}]},"args":1},{"name":"style_loader_src","file":"wp-includes/class-wp-styles.php","type":"filter","doc":{"description":"Filters an enqueued style's fully-qualified URL.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.6.0"},{"name":"param","content":"<p>The source URL of the enqueued style.</p>","types":["string"],"variable":"$src"},{"name":"param","content":"<p>The style's registered handle.</p>","types":["string"],"variable":"$handle"}]},"args":2},{"name":"wp_http_accept_encoding","file":"wp-includes/class-wp-http-encoding.php","type":"filter","doc":{"description":"Filters the allowed encoding types.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.6.0"},{"name":"param","content":"<p>Array of what encoding types to accept and their priority values.</p>","types":["string[]"],"variable":"$type"},{"name":"param","content":"<p>URL of the HTTP request.</p>","types":["string"],"variable":"$url"},{"name":"param","content":"<p>HTTP request arguments.</p>","types":["array"],"variable":"$args"}]},"args":3},{"name":"customizer_widgets_section_args","file":"wp-includes/class-wp-customize-widgets.php","type":"filter","doc":{"description":"Filters Customizer widget section arguments for a given sidebar.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.9.0"},{"name":"param","content":"<p>Array of Customizer widget section arguments.</p>","types":["array"],"variable":"$section_args"},{"name":"param","content":"<p>Customizer section ID.</p>","types":["string"],"variable":"$section_id"},{"name":"param","content":"<p>Sidebar ID.</p>","types":["int","string"],"variable":"$sidebar_id"}]},"args":3},{"name":"is_wide_widget_in_customizer","file":"wp-includes/class-wp-customize-widgets.php","type":"filter","doc":{"description":"Filters whether the given widget is considered \"wide\".","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.9.0"},{"name":"param","content":"<p>Whether the widget is wide, Default false.</p>","types":["bool"],"variable":"$is_wide"},{"name":"param","content":"<p>Widget ID.</p>","types":["string"],"variable":"$widget_id"}]},"args":2},{"name":"widget_customizer_setting_args","file":"wp-includes/class-wp-customize-widgets.php","type":"filter","doc":{"description":"Filters the common arguments supplied when constructing a Customizer setting.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.9.0"},{"name":"see","content":"","refers":"WP_Customize_Setting"},{"name":"param","content":"<p>Array of Customizer setting arguments.</p>","types":["array"],"variable":"$args"},{"name":"param","content":"<p>Widget setting ID.</p>","types":["string"],"variable":"$id"}]},"args":2},{"name":"block_default_classname","file":"wp-includes/block-supports/generated-classname.php","type":"filter","doc":{"description":"Filters the default block className for server rendered blocks.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.6.0"},{"name":"param","content":"<p>The current applied classname.</p>","types":["string"],"variable":"$class_name"},{"name":"param","content":"<p>The block name.</p>","types":["string"],"variable":"$block_name"}]},"args":2},{"name":"enable_maintenance_mode","file":"wp-includes/load.php","type":"filter","doc":{"description":"Filters whether to enable maintenance mode.","long_description":"This filter runs before it can be used by plugins. It is designed for non-web runtimes. If this filter returns true, maintenance mode will be active and the request will end. If false, the request will be allowed to continue processing even if maintenance mode should be active.","long_description_html":"<p>This filter runs before it can be used by plugins. It is designed for non-web runtimes. If this filter returns true, maintenance mode will be active and the request will end. If false, the request will be allowed to continue processing even if maintenance mode should be active.</p>","tags":[{"name":"since","content":"4.6.0"},{"name":"param","content":"<p>Whether to enable maintenance mode. Default true.</p>","types":["bool"],"variable":"$enable_checks"},{"name":"param","content":"<p>The timestamp set in the .maintenance file.</p>","types":["int"],"variable":"$upgrading"}]},"args":2},{"name":"enable_wp_debug_mode_checks","file":"wp-includes/load.php","type":"filter","doc":{"description":"Filters whether to allow the debug mode check to occur.","long_description":"This filter runs before it can be used by plugins. It is designed for non-web runtimes. Returning false causes the `WP_DEBUG` and related constants to not be checked and the default PHP values for errors will be used unless you take care to update them yourself.\n To use this filter you must define a `$wp_filter` global before WordPress loads, usually in `wp-config.php`.\n Example:\n     $GLOBALS['wp_filter'] = array(         'enable_wp_debug_mode_checks' => array(             10 => array(                 array(                     'accepted_args' => 0,                     'function'      => function() {                         return false;                     },                 ),             ),         ),     );","long_description_html":"<p>This filter runs before it can be used by plugins. It is designed for non-web runtimes. Returning false causes the <code>WP_DEBUG</code> and related constants to not be checked and the default PHP values for errors will be used unless you take care to update them yourself.</p> <p>To use this filter you must define a <code>$wp_filter</code> global before WordPress loads, usually in <code>wp-config.php</code>.</p> <p>Example:</p> <pre><code>$GLOBALS['wp_filter'] = array(     'enable_wp_debug_mode_checks' =&gt; array(         10 =&gt; array(             array(                 'accepted_args' =&gt; 0,                 'function'      =&gt; function() {                     return false;                 },             ),         ),     ), );</code></pre>","tags":[{"name":"since","content":"4.6.0"},{"name":"param","content":"<p>Whether to enable debug mode checks to occur. Default true.</p>","types":["bool"],"variable":"$enable_debug_mode"}]},"args":1},{"name":"enable_loading_object_cache_dropin","file":"wp-includes/load.php","type":"filter","doc":{"description":"Filters whether to enable loading of the object-cache.php drop-in.","long_description":"This filter runs before it can be used by plugins. It is designed for non-web runtimes. If false is returned, object-cache.php will never be loaded.","long_description_html":"<p>This filter runs before it can be used by plugins. It is designed for non-web runtimes. If false is returned, object-cache.php will never be loaded.</p>","tags":[{"name":"since","content":"5.8.0"},{"name":"param","content":"<p>Whether to enable loading object-cache.php (if present). Default true.</p>","types":["bool"],"variable":"$enable_object_cache"}]},"args":1},{"name":"is_protected_endpoint","file":"wp-includes/load.php","type":"filter","doc":{"description":"Filters whether the current request is against a protected endpoint.","long_description":"This filter is only fired when an endpoint is requested which is not already protected by WordPress core. As such, it exclusively allows providing further protected endpoints in addition to the admin backend, login pages and protected Ajax actions.","long_description_html":"<p>This filter is only fired when an endpoint is requested which is not already protected by WordPress core. As such, it exclusively allows providing further protected endpoints in addition to the admin backend, login pages and protected Ajax actions.</p>","tags":[{"name":"since","content":"5.2.0"},{"name":"param","content":"<p>Whether the currently requested endpoint is protected. Default false.</p>","types":["bool"],"variable":"$is_protected_endpoint"}]},"args":1},{"name":"wp_protected_ajax_actions","file":"wp-includes/load.php","type":"filter","doc":{"description":"Filters the array of protected Ajax actions.","long_description":"This filter is only fired when doing Ajax and the Ajax request has an 'action' property.","long_description_html":"<p>This filter is only fired when doing Ajax and the Ajax request has an 'action' property.</p>","tags":[{"name":"since","content":"5.2.0"},{"name":"param","content":"<p>Array of strings with Ajax actions to protect.</p>","types":["string[]"],"variable":"$actions_to_protect"}]},"args":1},{"name":"wp_doing_ajax","file":"wp-includes/load.php","type":"filter","doc":{"description":"Filters whether the current request is a WordPress Ajax request.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.7.0"},{"name":"param","content":"<p>Whether the current request is a WordPress Ajax request.</p>","types":["bool"],"variable":"$wp_doing_ajax"}]},"args":1},{"name":"wp_using_themes","file":"wp-includes/load.php","type":"filter","doc":{"description":"Filters whether the current request should use themes.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.1.0"},{"name":"param","content":"<p>Whether the current request should use themes.</p>","types":["bool"],"variable":"$wp_using_themes"}]},"args":1},{"name":"wp_doing_cron","file":"wp-includes/load.php","type":"filter","doc":{"description":"Filters whether the current request is a WordPress cron request.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.8.0"},{"name":"param","content":"<p>Whether the current request is a WordPress cron request.</p>","types":["bool"],"variable":"$wp_doing_cron"}]},"args":1},{"name":"file_mod_allowed","file":"wp-includes/load.php","type":"filter","doc":{"description":"Filters whether file modifications are allowed.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.8.0"},{"name":"param","content":"<p>Whether file modifications are allowed.</p>","types":["bool"],"variable":"$file_mod_allowed"},{"name":"param","content":"<p>The usage context.</p>","types":["string"],"variable":"$context"}]},"args":2},{"name":"wp_is_site_protected_by_basic_auth","file":"wp-includes/load.php","type":"filter","doc":{"description":"Filters whether a site is protected by HTTP Basic Auth.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.6.1"},{"name":"param","content":"<p>Whether the site is protected by Basic Auth.</p>","types":["bool"],"variable":"$is_protected"},{"name":"param","content":"<p>The context to check for protection. One of 'login', 'admin', or 'front'.</p>","types":["string"],"variable":"$context"}]},"args":2},{"name":"redirect_canonical","file":"wp-includes/canonical.php","type":"filter","doc":{"description":"Filters the canonical redirect URL.","long_description":"Returning false to this filter will cancel the redirect.","long_description_html":"<p>Returning false to this filter will cancel the redirect.</p>","tags":[{"name":"since","content":"2.3.0"},{"name":"param","content":"<p>The redirect URL.</p>","types":["string"],"variable":"$redirect_url"},{"name":"param","content":"<p>The requested URL.</p>","types":["string"],"variable":"$requested_url"}]},"args":2},{"name":"do_redirect_guess_404_permalink","file":"wp-includes/canonical.php","type":"filter","doc":{"description":"Filters whether to attempt to guess a redirect URL for a 404 request.","long_description":"Returning a false value from the filter will disable the URL guessing and return early without performing a redirect.","long_description_html":"<p>Returning a false value from the filter will disable the URL guessing and return early without performing a redirect.</p>","tags":[{"name":"since","content":"5.5.0"},{"name":"param","content":"<p>Whether to attempt to guess a redirect URL for a 404 request. Default true.</p>","types":["bool"],"variable":"$do_redirect_guess"}]},"args":1},{"name":"pre_redirect_guess_404_permalink","file":"wp-includes/canonical.php","type":"filter","doc":{"description":"Short-circuits the redirect URL guessing for 404 requests.","long_description":"Returning a non-null value from the filter will effectively short-circuit the URL guessing, returning the passed value instead.","long_description_html":"<p>Returning a non-null value from the filter will effectively short-circuit the URL guessing, returning the passed value instead.</p>","tags":[{"name":"since","content":"5.5.0"},{"name":"param","content":"<p>Whether to short-circuit guessing the redirect for a 404. Default null to continue with the URL guessing.</p>","types":["null","string","false"],"variable":"$pre"}]},"args":1},{"name":"strict_redirect_guess_404_permalink","file":"wp-includes/canonical.php","type":"filter","doc":{"description":"Filters whether to perform a strict guess for a 404 redirect.","long_description":"Returning a truthy value from the filter will redirect only exact post_name matches.","long_description_html":"<p>Returning a truthy value from the filter will redirect only exact post_name matches.</p>","tags":[{"name":"since","content":"5.5.0"},{"name":"param","content":"<p>Whether to perform a strict guess. Default false (loose guess).</p>","types":["bool"],"variable":"$strict_guess"}]},"args":1},{"name":"pre_wp_get_https_detection_errors","file":"wp-includes/https-detection.php","type":"filter","doc":{"description":"Short-circuits the process of detecting errors related to HTTPS support.","long_description":"Returning a `WP_Error` from the filter will effectively short-circuit the default logic of trying a remote request to the site over HTTPS, storing the errors array from the returned `WP_Error` instead.","long_description_html":"<p>Returning a <code>WP_Error</code> from the filter will effectively short-circuit the default logic of trying a remote request to the site over HTTPS, storing the errors array from the returned <code>WP_Error</code> instead.</p>","tags":[{"name":"since","content":"6.4.0"},{"name":"param","content":"<p>Error object to short-circuit detection, or null to continue with the default behavior.</p>","types":["null","\\WP_Error"],"variable":"$pre"},{"name":"return","content":"Error object if HTTPS detection errors are found, null otherwise.","types":["null","\\WP_Error"]}]},"args":1},{"name":"rss_update_period","file":"wp-includes/feed-rss2.php","type":"filter","doc":{"description":"Filters how often to update the RSS feed.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.1.0"},{"name":"param","content":"<p>The update period. Accepts 'hourly', 'daily', 'weekly', 'monthly', 'yearly'. Default 'hourly'.</p>","types":["string"],"variable":"$duration"}]},"args":1},{"name":"rss_update_frequency","file":"wp-includes/feed-rss2.php","type":"filter","doc":{"description":"Filters the RSS update frequency.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.1.0"},{"name":"param","content":"<p>An integer passed as a string representing the frequency of RSS updates within the update period. Default '1'.</p>","types":["string"],"variable":"$frequency"}]},"args":1},{"name":"recovery_mode_begin_url","file":"wp-includes/class-wp-recovery-mode-link-service.php","type":"filter","doc":{"description":"Filters the URL to begin recovery mode.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.2.0"},{"name":"param","content":"<p>The generated recovery mode begin URL.</p>","types":["string"],"variable":"$url"},{"name":"param","content":"<p>The token used to identify the key.</p>","types":["string"],"variable":"$token"},{"name":"param","content":"<p>The recovery mode key.</p>","types":["string"],"variable":"$key"}]},"args":3},{"name":"networks_pre_query","file":"wp-includes/class-wp-network-query.php","type":"filter","doc":{"description":"Filters the network data before the query takes place.","long_description":"Return a non-null value to bypass WordPress' default network queries.\n The expected return type from this filter depends on the value passed in the request query vars: - When `$this->query_vars['count']` is set, the filter should return   the network count as an integer. - When `'ids' === $this->query_vars['fields']`, the filter should return   an array of network IDs. - Otherwise the filter should return an array of WP_Network objects.\n Note that if the filter returns an array of network data, it will be assigned to the `networks` property of the current WP_Network_Query instance.\n Filtering functions that require pagination information are encouraged to set the `found_networks` and `max_num_pages` properties of the WP_Network_Query object, passed to the filter by reference. If WP_Network_Query does not perform a database query, it will not have enough information to generate these values itself.","long_description_html":"<p>Return a non-null value to bypass WordPress' default network queries.</p> <p>The expected return type from this filter depends on the value passed in the request query vars:</p> <ul> <li>When <code>$this-&gt;query_vars['count']</code> is set, the filter should return the network count as an integer.</li> <li>When <code>'ids' === $this-&gt;query_vars['fields']</code>, the filter should return an array of network IDs.</li> <li>Otherwise the filter should return an array of WP_Network objects.</li> </ul> <p>Note that if the filter returns an array of network data, it will be assigned to the <code>networks</code> property of the current WP_Network_Query instance.</p> <p>Filtering functions that require pagination information are encouraged to set the <code>found_networks</code> and <code>max_num_pages</code> properties of the WP_Network_Query object, passed to the filter by reference. If WP_Network_Query does not perform a database query, it will not have enough information to generate these values itself.</p>","tags":[{"name":"since","content":"5.2.0"},{"name":"since","content":"5.6.0","description":"<p>The returned array of network data is assigned to the <code>networks</code> property of the current WP_Network_Query instance.</p>"},{"name":"param","content":"<p>Return an array of network data to short-circuit WP's network query, the network count as an integer if <code>$this-&gt;query_vars['count']</code> is set, or null to allow WP to run its normal queries.</p>","types":["array","int","null"],"variable":"$network_data"},{"name":"param","content":"<p>The WP_Network_Query instance, passed by reference.</p>","types":["\\WP_Network_Query"],"variable":"$query"}]},"args":1},{"name":"the_networks","file":"wp-includes/class-wp-network-query.php","type":"filter","doc":{"description":"Filters the network query results.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.6.0"},{"name":"param","content":"<p>An array of WP_Network objects.</p>","types":["\\WP_Network[]"],"variable":"$_networks"},{"name":"param","content":"<p>Current instance of WP_Network_Query (passed by reference).</p>","types":["\\WP_Network_Query"],"variable":"$query"}]},"args":1},{"name":"networks_clauses","file":"wp-includes/class-wp-network-query.php","type":"filter","doc":{"description":"Filters the network query clauses.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.6.0"},{"name":"param","content":"<p>{ Associative array of the clauses for the query.</p>","types":["string[]"],"variable":"$clauses"},{"name":"param","content":"<p>Current instance of WP_Network_Query (passed by reference).</p>","types":["\\WP_Network_Query"],"variable":"$query"}]},"args":1},{"name":"found_networks_query","file":"wp-includes/class-wp-network-query.php","type":"filter","doc":{"description":"Filters the query used to retrieve found network count.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.6.0"},{"name":"param","content":"<p>SQL query. Default 'SELECT FOUND_ROWS()'.</p>","types":["string"],"variable":"$found_networks_query"},{"name":"param","content":"<p>The <code>WP_Network_Query</code> instance.</p>","types":["\\WP_Network_Query"],"variable":"$network_query"}]},"args":2},{"name":"get_comment_author","file":"wp-includes/comment-template.php","type":"filter","doc":{"description":"Filters the returned comment author name.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"1.5.0"},{"name":"since","content":"4.1.0","description":"<p>The <code>$comment_id</code> and <code>$comment</code> parameters were added.</p>"},{"name":"param","content":"<p>The comment author's username.</p>","types":["string"],"variable":"$comment_author"},{"name":"param","content":"<p>The comment ID as a numeric string.</p>","types":["string"],"variable":"$comment_id"},{"name":"param","content":"<p>The comment object.</p>","types":["\\WP_Comment"],"variable":"$comment"}]},"args":3},{"name":"comment_author","file":"wp-includes/comment-template.php","type":"filter","doc":{"description":"Filters the comment author's name for display.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"1.2.0"},{"name":"since","content":"4.1.0","description":"<p>The <code>$comment_id</code> parameter was added.</p>"},{"name":"param","content":"<p>The comment author's username.</p>","types":["string"],"variable":"$comment_author"},{"name":"param","content":"<p>The comment ID as a numeric string.</p>","types":["string"],"variable":"$comment_id"}]},"args":2},{"name":"get_comment_author_email","file":"wp-includes/comment-template.php","type":"filter","doc":{"description":"Filters the comment author's returned email address.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"1.5.0"},{"name":"since","content":"4.1.0","description":"<p>The <code>$comment_id</code> and <code>$comment</code> parameters were added.</p>"},{"name":"param","content":"<p>The comment author's email address.</p>","types":["string"],"variable":"$comment_author_email"},{"name":"param","content":"<p>The comment ID as a numeric string.</p>","types":["string"],"variable":"$comment_id"},{"name":"param","content":"<p>The comment object.</p>","types":["\\WP_Comment"],"variable":"$comment"}]},"args":3},{"name":"author_email","file":"wp-includes/comment-template.php","type":"filter","doc":{"description":"Filters the comment author's email for display.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"1.2.0"},{"name":"since","content":"4.1.0","description":"<p>The <code>$comment_id</code> parameter was added.</p>"},{"name":"param","content":"<p>The comment author's email address.</p>","types":["string"],"variable":"$comment_author_email"},{"name":"param","content":"<p>The comment ID as a numeric string.</p>","types":["string"],"variable":"$comment_id"}]},"args":2},{"name":"comment_email","file":"wp-includes/comment-template.php","type":"filter","doc":{"description":"Filters the comment author's email for display.","long_description":"Care should be taken to protect the email address and assure that email harvesters do not capture your commenter's email address.","long_description_html":"<p>Care should be taken to protect the email address and assure that email harvesters do not capture your commenter's email address.</p>","tags":[{"name":"since","content":"1.2.0"},{"name":"since","content":"4.1.0","description":"<p>The <code>$comment</code> parameter was added.</p>"},{"name":"param","content":"<p>The comment author's email address.</p>","types":["string"],"variable":"$comment_author_email"},{"name":"param","content":"<p>The comment object.</p>","types":["\\WP_Comment"],"variable":"$comment"}]},"args":2},{"name":"comment_author_link_rel","file":"wp-includes/comment-template.php","type":"filter","doc":{"description":"Filters the rel attributes of the comment author's link.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"6.2.0"},{"name":"param","content":"<p>An array of strings representing the rel tags which will be joined into the anchor's rel attribute.</p>","types":["string[]"],"variable":"$rel_parts"},{"name":"param","content":"<p>The comment object.</p>","types":["\\WP_Comment"],"variable":"$comment"}]},"args":2},{"name":"get_comment_author_link","file":"wp-includes/comment-template.php","type":"filter","doc":{"description":"Filters the comment author's link for display.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"1.5.0"},{"name":"since","content":"4.1.0","description":"<p>The <code>$comment_author</code> and <code>$comment_id</code> parameters were added.</p>"},{"name":"param","content":"<p>The HTML-formatted comment author link. Empty for an invalid URL.</p>","types":["string"],"variable":"$comment_author_link"},{"name":"param","content":"<p>The comment author's username.</p>","types":["string"],"variable":"$comment_author"},{"name":"param","content":"<p>The comment ID as a numeric string.</p>","types":["string"],"variable":"$comment_id"}]},"args":3},{"name":"get_comment_author_IP","file":"wp-includes/comment-template.php","type":"filter","doc":{"description":"Filters the comment author's returned IP address.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"1.5.0"},{"name":"since","content":"4.1.0","description":"<p>The <code>$comment_id</code> and <code>$comment</code> parameters were added.</p>"},{"name":"param","content":"<p>The comment author's IP address, or an empty string if it's not available.</p>","types":["string"],"variable":"$comment_author_ip"},{"name":"param","content":"<p>The comment ID as a numeric string.</p>","types":["string"],"variable":"$comment_id"},{"name":"param","content":"<p>The comment object.</p>","types":["\\WP_Comment"],"variable":"$comment"}]},"args":3},{"name":"get_comment_author_url","file":"wp-includes/comment-template.php","type":"filter","doc":{"description":"Filters the comment author's URL.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"1.5.0"},{"name":"since","content":"4.1.0","description":"<p>The <code>$comment_id</code> and <code>$comment</code> parameters were added.</p>"},{"name":"param","content":"<p>The comment author's URL, or an empty string.</p>","types":["string"],"variable":"$comment_author_url"},{"name":"param","content":"<p>The comment ID as a numeric string, or 0 if not found.</p>","types":["string","int"],"variable":"$comment_id"},{"name":"param","content":"<p>The comment object, or null if not found.</p>","types":["\\WP_Comment","null"],"variable":"$comment"}]},"args":3},{"name":"comment_url","file":"wp-includes/comment-template.php","type":"filter","doc":{"description":"Filters the comment author's URL for display.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"1.2.0"},{"name":"since","content":"4.1.0","description":"<p>The <code>$comment_id</code> parameter was added.</p>"},{"name":"param","content":"<p>The comment author's URL.</p>","types":["string"],"variable":"$comment_author_url"},{"name":"param","content":"<p>The comment ID as a numeric string.</p>","types":["string"],"variable":"$comment_id"}]},"args":2},{"name":"get_comment_author_url_link","file":"wp-includes/comment-template.php","type":"filter","doc":{"description":"Filters the comment author's returned URL link.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"1.5.0"},{"name":"param","content":"<p>The HTML-formatted comment author URL link.</p>","types":["string"],"variable":"$comment_author_url_link"}]},"args":1},{"name":"comment_class","file":"wp-includes/comment-template.php","type":"filter","doc":{"description":"Filters the returned CSS classes for the current comment.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.7.0"},{"name":"param","content":"<p>An array of comment classes.</p>","types":["string[]"],"variable":"$classes"},{"name":"param","content":"<p>An array of additional classes added to the list.</p>","types":["string[]"],"variable":"$css_class"},{"name":"param","content":"<p>The comment ID as a numeric string.</p>","types":["string"],"variable":"$comment_id"},{"name":"param","content":"<p>The comment object.</p>","types":["\\WP_Comment"],"variable":"$comment"},{"name":"param","content":"<p>The post ID or WP_Post object.</p>","types":["int","\\WP_Post"],"variable":"$post"}]},"args":5},{"name":"get_comment_date","file":"wp-includes/comment-template.php","type":"filter","doc":{"description":"Filters the returned comment date.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"1.5.0"},{"name":"param","content":"<p>Formatted date string or Unix timestamp.</p>","types":["string","int"],"variable":"$comment_date"},{"name":"param","content":"<p>PHP date format.</p>","types":["string"],"variable":"$format"},{"name":"param","content":"<p>The comment object.</p>","types":["\\WP_Comment"],"variable":"$comment"}]},"args":3},{"name":"comment_excerpt_length","file":"wp-includes/comment-template.php","type":"filter","doc":{"description":"Filters the maximum number of words used in the comment excerpt.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.4.0"},{"name":"param","content":"<p>The amount of words you want to display in the comment excerpt.</p>","types":["int"],"variable":"$comment_excerpt_length"}]},"args":1},{"name":"get_comment_excerpt","file":"wp-includes/comment-template.php","type":"filter","doc":{"description":"Filters the retrieved comment excerpt.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"1.5.0"},{"name":"since","content":"4.1.0","description":"<p>The <code>$comment_id</code> and <code>$comment</code> parameters were added.</p>"},{"name":"param","content":"<p>The comment excerpt text.</p>","types":["string"],"variable":"$comment_excerpt"},{"name":"param","content":"<p>The comment ID as a numeric string.</p>","types":["string"],"variable":"$comment_id"},{"name":"param","content":"<p>The comment object.</p>","types":["\\WP_Comment"],"variable":"$comment"}]},"args":3},{"name":"comment_excerpt","file":"wp-includes/comment-template.php","type":"filter","doc":{"description":"Filters the comment excerpt for display.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"1.2.0"},{"name":"since","content":"4.1.0","description":"<p>The <code>$comment_id</code> parameter was added.</p>"},{"name":"param","content":"<p>The comment excerpt text.</p>","types":["string"],"variable":"$comment_excerpt"},{"name":"param","content":"<p>The comment ID as a numeric string.</p>","types":["string"],"variable":"$comment_id"}]},"args":2},{"name":"get_comment_ID","file":"wp-includes/comment-template.php","type":"filter","doc":{"description":"Filters the returned comment ID.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"1.5.0"},{"name":"since","content":"4.1.0","description":"<p>The <code>$comment</code> parameter was added.</p>"},{"name":"param","content":"<p>The current comment ID as a numeric string.</p>","types":["string"],"variable":"$comment_id"},{"name":"param","content":"<p>The comment object.</p>","types":["\\WP_Comment"],"variable":"$comment"}]},"args":2},{"name":"get_comment_link","file":"wp-includes/comment-template.php","type":"filter","doc":{"description":"Filters the returned single comment permalink.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.8.0"},{"name":"since","content":"4.4.0","description":"<p>Added the <code>$cpage</code> parameter.</p>"},{"name":"see","content":"","refers":"get_page_of_comment()"},{"name":"param","content":"<p>The comment permalink with '#comment-$id' appended.</p>","types":["string"],"variable":"$comment_link"},{"name":"param","content":"<p>The current comment object.</p>","types":["\\WP_Comment"],"variable":"$comment"},{"name":"param","content":"<p>An array of arguments to override the defaults.</p>","types":["array"],"variable":"$args"},{"name":"param","content":"<p>The calculated 'cpage' value.</p>","types":["int"],"variable":"$cpage"}]},"args":4},{"name":"get_comments_link","file":"wp-includes/comment-template.php","type":"filter","doc":{"description":"Filters the returned post comments permalink.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.6.0"},{"name":"param","content":"<p>Post comments permalink with '#comments' appended.</p>","types":["string"],"variable":"$comments_link"},{"name":"param","content":"<p>Post ID or WP_Post object.</p>","types":["int","\\WP_Post"],"variable":"$post"}]},"args":2},{"name":"get_comments_number","file":"wp-includes/comment-template.php","type":"filter","doc":{"description":"Filters the returned comment count for a post.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"1.5.0"},{"name":"param","content":"<p>A string representing the number of comments a post has, otherwise 0.</p>","types":["string","int"],"variable":"$comments_number"},{"name":"param","content":"<p>Post ID.</p>","types":["int"],"variable":"$post_id"}]},"args":2},{"name":"comments_number","file":"wp-includes/comment-template.php","type":"filter","doc":{"description":"Filters the comments count for display.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"1.5.0"},{"name":"see","content":"","refers":"_n()"},{"name":"param","content":"<p>A translatable string formatted based on whether the count is equal to 0, 1, or 1+.</p>","types":["string"],"variable":"$comments_number_text"},{"name":"param","content":"<p>The number of post comments.</p>","types":["int"],"variable":"$comments_number"}]},"args":2},{"name":"get_comment_text","file":"wp-includes/comment-template.php","type":"filter","doc":{"description":"Filters the text of a comment.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"1.5.0"},{"name":"see","content":"","refers":"Walker_Comment::comment()"},{"name":"param","content":"<p>Text of the comment.</p>","types":["string"],"variable":"$comment_text"},{"name":"param","content":"<p>The comment object.</p>","types":["\\WP_Comment"],"variable":"$comment"},{"name":"param","content":"<p>An array of arguments.</p>","types":["array"],"variable":"$args"}]},"args":3},{"name":"comment_text","file":"wp-includes/comment-template.php","type":"filter","doc":{"description":"Filters the text of a comment to be displayed.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"1.2.0"},{"name":"see","content":"","refers":"Walker_Comment::comment()"},{"name":"param","content":"<p>Text of the comment.</p>","types":["string"],"variable":"$comment_text"},{"name":"param","content":"<p>The comment object. Null if not found.</p>","types":["\\WP_Comment","null"],"variable":"$comment"},{"name":"param","content":"<p>An array of arguments.</p>","types":["array"],"variable":"$args"}]},"args":3},{"name":"get_comment_time","file":"wp-includes/comment-template.php","type":"filter","doc":{"description":"Filters the returned comment time.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"1.5.0"},{"name":"param","content":"<p>The comment time, formatted as a date string or Unix timestamp.</p>","types":["string","int"],"variable":"$comment_time"},{"name":"param","content":"<p>PHP date format.</p>","types":["string"],"variable":"$format"},{"name":"param","content":"<p>Whether the GMT date is in use.</p>","types":["bool"],"variable":"$gmt"},{"name":"param","content":"<p>Whether the time is translated.</p>","types":["bool"],"variable":"$translate"},{"name":"param","content":"<p>The comment object.</p>","types":["\\WP_Comment"],"variable":"$comment"}]},"args":5},{"name":"get_comment_type","file":"wp-includes/comment-template.php","type":"filter","doc":{"description":"Filters the returned comment type.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"1.5.0"},{"name":"since","content":"4.1.0","description":"<p>The <code>$comment_id</code> and <code>$comment</code> parameters were added.</p>"},{"name":"param","content":"<p>The type of comment, such as 'comment', 'pingback', or 'trackback'.</p>","types":["string"],"variable":"$comment_type"},{"name":"param","content":"<p>The comment ID as a numeric string.</p>","types":["string"],"variable":"$comment_id"},{"name":"param","content":"<p>The comment object.</p>","types":["\\WP_Comment"],"variable":"$comment"}]},"args":3},{"name":"trackback_url","file":"wp-includes/comment-template.php","type":"filter","doc":{"description":"Filters the returned trackback URL.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.2.0"},{"name":"param","content":"<p>The trackback URL.</p>","types":["string"],"variable":"$trackback_url"}]},"args":1},{"name":"comments_open","file":"wp-includes/comment-template.php","type":"filter","doc":{"description":"Filters whether the current post is open for comments.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.5.0"},{"name":"param","content":"<p>Whether the current post is open for comments.</p>","types":["bool"],"variable":"$comments_open"},{"name":"param","content":"<p>The post ID.</p>","types":["int"],"variable":"$post_id"}]},"args":2},{"name":"pings_open","file":"wp-includes/comment-template.php","type":"filter","doc":{"description":"Filters whether the current post is open for pings.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.5.0"},{"name":"param","content":"<p>Whether the current post is open for pings.</p>","types":["bool"],"variable":"$pings_open"},{"name":"param","content":"<p>The post ID.</p>","types":["int"],"variable":"$post_id"}]},"args":2},{"name":"comments_template_top_level_query_args","file":"wp-includes/comment-template.php","type":"filter","doc":{"description":"Filters the arguments used in the top level comments query.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.6.0"},{"name":"see","content":"","refers":"WP_Comment_Query::__construct()"},{"name":"param","content":"<p>{ The top level query arguments for the comments template.</p>","types":["array"],"variable":"$top_level_args"}]},"args":1},{"name":"comments_template_query_args","file":"wp-includes/comment-template.php","type":"filter","doc":{"description":"Filters the arguments used to query comments in comments_template().","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.5.0"},{"name":"see","content":"","refers":"WP_Comment_Query::__construct()"},{"name":"param","content":"<p>{ Array of WP_Comment_Query arguments.</p>","types":["array"],"variable":"$comment_args"}]},"args":1},{"name":"comments_array","file":"wp-includes/comment-template.php","type":"filter","doc":{"description":"Filters the comments array.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.1.0"},{"name":"param","content":"<p>Array of comments supplied to the comments template.</p>","types":["array"],"variable":"$comments"},{"name":"param","content":"<p>Post ID.</p>","types":["int"],"variable":"$post_id"}]},"args":2},{"name":"comments_template","file":"wp-includes/comment-template.php","type":"filter","doc":{"description":"Filters the path to the theme template file used for the comments template.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"1.5.1"},{"name":"param","content":"<p>The path to the theme template file.</p>","types":["string"],"variable":"$theme_template"}]},"args":1},{"name":"respond_link","file":"wp-includes/comment-template.php","type":"filter","doc":{"description":"Filters the respond link when a post has no comments.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.4.0"},{"name":"param","content":"<p>The default response link.</p>","types":["string"],"variable":"$respond_link"},{"name":"param","content":"<p>The post ID.</p>","types":["int"],"variable":"$post_id"}]},"args":2},{"name":"comments_popup_link_attributes","file":"wp-includes/comment-template.php","type":"filter","doc":{"description":"Filters the comments link attributes for display.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.5.0"},{"name":"param","content":"<p>The comments link attributes. Default empty.</p>","types":["string"],"variable":"$link_attributes"}]},"args":1},{"name":"comment_reply_link_args","file":"wp-includes/comment-template.php","type":"filter","doc":{"description":"Filters the comment reply link arguments.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.1.0"},{"name":"param","content":"<p>Comment reply link arguments. See get_comment_reply_link() for more information on accepted arguments.</p>","types":["array"],"variable":"$args"},{"name":"param","content":"<p>The object of the comment being replied to.</p>","types":["\\WP_Comment"],"variable":"$comment"},{"name":"param","content":"<p>The WP_Post object.</p>","types":["\\WP_Post"],"variable":"$post"}]},"args":3},{"name":"comment_reply_link","file":"wp-includes/comment-template.php","type":"filter","doc":{"description":"Filters the comment reply link.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.7.0"},{"name":"param","content":"<p>The HTML markup for the comment reply link.</p>","types":["string"],"variable":"$comment_reply_link"},{"name":"param","content":"<p>An array of arguments overriding the defaults.</p>","types":["array"],"variable":"$args"},{"name":"param","content":"<p>The object of the comment being replied.</p>","types":["\\WP_Comment"],"variable":"$comment"},{"name":"param","content":"<p>The WP_Post object.</p>","types":["\\WP_Post"],"variable":"$post"}]},"args":4},{"name":"post_comments_link","file":"wp-includes/comment-template.php","type":"filter","doc":{"description":"Filters the formatted post comments link HTML.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.7.0"},{"name":"param","content":"<p>The HTML-formatted post comments link.</p>","types":["string"],"variable":"$post_reply_link"},{"name":"param","content":"<p>The post ID or WP_Post object.</p>","types":["int","\\WP_Post"],"variable":"$post"}]},"args":2},{"name":"cancel_comment_reply_link","file":"wp-includes/comment-template.php","type":"filter","doc":{"description":"Filters the cancel comment reply link HTML.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.7.0"},{"name":"param","content":"<p>The HTML-formatted cancel comment reply link.</p>","types":["string"],"variable":"$cancel_comment_reply_link"},{"name":"param","content":"<p>Cancel comment reply link URL.</p>","types":["string"],"variable":"$link_url"},{"name":"param","content":"<p>Cancel comment reply link text.</p>","types":["string"],"variable":"$link_text"}]},"args":3},{"name":"comment_id_fields","file":"wp-includes/comment-template.php","type":"filter","doc":{"description":"Filters the returned comment ID fields.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.0.0"},{"name":"param","content":"<p>The HTML-formatted hidden ID field comment elements.</p>","types":["string"],"variable":"$comment_id_fields"},{"name":"param","content":"<p>The post ID.</p>","types":["int"],"variable":"$post_id"},{"name":"param","content":"<p>The ID of the comment being replied to.</p>","types":["int"],"variable":"$reply_to_id"}]},"args":3},{"name":"wp_list_comments_args","file":"wp-includes/comment-template.php","type":"filter","doc":{"description":"Filters the arguments used in retrieving the comment list.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.0.0"},{"name":"see","content":"","refers":"wp_list_comments()"},{"name":"param","content":"<p>An array of arguments for displaying comments.</p>","types":["array"],"variable":"$parsed_args"}]},"args":1},{"name":"comment_form_default_fields","file":"wp-includes/comment-template.php","type":"filter","doc":{"description":"Filters the default comment form fields.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.0.0"},{"name":"param","content":"<p>Array of the default comment fields.</p>","types":["string[]"],"variable":"$fields"}]},"args":1},{"name":"comment_form_defaults","file":"wp-includes/comment-template.php","type":"filter","doc":{"description":"Filters the comment form default arguments.","long_description":"Use {@see 'comment_form_default_fields'} to filter the comment fields.","long_description_html":"<p>Use {@see 'comment_form_default_fields'} to filter the comment fields.</p>","tags":[{"name":"since","content":"3.0.0"},{"name":"param","content":"<p>The default comment form arguments.</p>","types":["array"],"variable":"$defaults"}]},"args":1},{"name":"comment_form_logged_in","file":"wp-includes/comment-template.php","type":"filter","doc":{"description":"Filters the 'logged in' message for the comment form for display.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.0.0"},{"name":"param","content":"<p>The HTML for the 'logged in as [user]' message, the Edit profile link, and the Log out link.</p>","types":["string"],"variable":"$args_logged_in"},{"name":"param","content":"<p>An array containing the comment author's username, email, and URL.</p>","types":["array"],"variable":"$commenter"},{"name":"param","content":"<p>If the commenter is a registered user, the display name, blank otherwise.</p>","types":["string"],"variable":"$user_identity"}]},"args":3},{"name":"comment_form_fields","file":"wp-includes/comment-template.php","type":"filter","doc":{"description":"Filters the comment form fields, including the textarea.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.4.0"},{"name":"param","content":"<p>The comment fields.</p>","types":["array"],"variable":"$comment_fields"}]},"args":1},{"name":"comment_form_field_comment","file":"wp-includes/comment-template.php","type":"filter","doc":{"description":"Filters the content of the comment textarea field for display.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.0.0"},{"name":"param","content":"<p>The content of the comment textarea field.</p>","types":["string"],"variable":"$args_comment_field"}]},"args":1},{"name":"comment_form_field_{$name}","aliases":["comment_form_field_author","comment_form_field_comment","comment_form_field_cookies","comment_form_field_email","comment_form_field_url"],"file":"wp-includes/comment-template.php","type":"filter","doc":{"description":"Filters a comment form field for display.","long_description":"The dynamic portion of the hook name, `$name`, refers to the name of the comment form field.\n Possible hook names include:\n\n  - `comment_form_field_comment`\n  - `comment_form_field_author`\n  - `comment_form_field_email`\n  - `comment_form_field_url`\n  - `comment_form_field_cookies`","long_description_html":"<p>The dynamic portion of the hook name, <code>$name</code>, refers to the name of the comment form field.</p> <p>Possible hook names include:</p> <ul> <li><code>comment_form_field_comment</code></li> <li><code>comment_form_field_author</code></li> <li><code>comment_form_field_email</code></li> <li><code>comment_form_field_url</code></li> <li><code>comment_form_field_cookies</code></li> </ul>","tags":[{"name":"since","content":"3.0.0"},{"name":"param","content":"<p>The HTML-formatted output of the comment form field.</p>","types":["string"],"variable":"$field"}]},"args":1},{"name":"comment_form_submit_button","file":"wp-includes/comment-template.php","type":"filter","doc":{"description":"Filters the submit button for the comment form to display.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.2.0"},{"name":"param","content":"<p>HTML markup for the submit button.</p>","types":["string"],"variable":"$submit_button"},{"name":"param","content":"<p>Arguments passed to comment_form().</p>","types":["array"],"variable":"$args"}]},"args":2},{"name":"comment_form_submit_field","file":"wp-includes/comment-template.php","type":"filter","doc":{"description":"Filters the submit field for the comment form to display.","long_description":"The submit field includes the submit button, hidden fields for the comment form, and any wrapper markup.","long_description_html":"<p>The submit field includes the submit button, hidden fields for the comment form, and any wrapper markup.</p>","tags":[{"name":"since","content":"4.2.0"},{"name":"param","content":"<p>HTML markup for the submit field.</p>","types":["string"],"variable":"$submit_field"},{"name":"param","content":"<p>Arguments passed to comment_form().</p>","types":["array"],"variable":"$args"}]},"args":2},{"name":"embed_defaults","file":"wp-includes/embed.php","type":"filter","doc":{"description":"Filters the default array of embed dimensions.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.9.0"},{"name":"param","content":"<p>{ Indexed array of the embed width and height in pixels.</p>","types":["int[]"],"variable":"$size"},{"name":"param","content":"<p>The URL that should be embedded.</p>","types":["string"],"variable":"$url"}]},"args":2},{"name":"load_default_embeds","file":"wp-includes/embed.php","type":"filter","doc":{"description":"Filters whether to load the default embed handlers.","long_description":"Returning a falsey value will prevent loading the default embed handlers.","long_description_html":"<p>Returning a falsey value will prevent loading the default embed handlers.</p>","tags":[{"name":"since","content":"2.9.0"},{"name":"param","content":"<p>Whether to load the embeds library. Default true.</p>","types":["bool"],"variable":"$maybe_load_embeds"}]},"args":1},{"name":"wp_audio_embed_handler","file":"wp-includes/embed.php","type":"filter","doc":{"description":"Filters the audio embed handler callback.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.6.0"},{"name":"param","content":"<p>Audio embed handler callback function.</p>","types":["callable"],"variable":"$handler"}]},"args":1},{"name":"wp_video_embed_handler","file":"wp-includes/embed.php","type":"filter","doc":{"description":"Filters the video embed handler callback.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.6.0"},{"name":"param","content":"<p>Video embed handler callback function.</p>","types":["callable"],"variable":"$handler"}]},"args":1},{"name":"wp_embed_handler_youtube","file":"wp-includes/embed.php","type":"filter","doc":{"description":"Filters the YouTube embed output.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.0.0"},{"name":"see","content":"","refers":"wp_embed_handler_youtube()"},{"name":"param","content":"<p>YouTube embed output.</p>","types":["string"],"variable":"$embed"},{"name":"param","content":"<p>An array of embed attributes.</p>","types":["array"],"variable":"$attr"},{"name":"param","content":"<p>The original URL that was matched by the regex.</p>","types":["string"],"variable":"$url"},{"name":"param","content":"<p>The original unmodified attributes.</p>","types":["array"],"variable":"$rawattr"}]},"args":4},{"name":"wp_embed_handler_audio","file":"wp-includes/embed.php","type":"filter","doc":{"description":"Filters the audio embed output.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.6.0"},{"name":"param","content":"<p>Audio embed output.</p>","types":["string"],"variable":"$audio"},{"name":"param","content":"<p>An array of embed attributes.</p>","types":["array"],"variable":"$attr"},{"name":"param","content":"<p>The original URL that was matched by the regex.</p>","types":["string"],"variable":"$url"},{"name":"param","content":"<p>The original unmodified attributes.</p>","types":["array"],"variable":"$rawattr"}]},"args":4},{"name":"wp_embed_handler_video","file":"wp-includes/embed.php","type":"filter","doc":{"description":"Filters the video embed output.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.6.0"},{"name":"param","content":"<p>Video embed output.</p>","types":["string"],"variable":"$video"},{"name":"param","content":"<p>An array of embed attributes.</p>","types":["array"],"variable":"$attr"},{"name":"param","content":"<p>The original URL that was matched by the regex.</p>","types":["string"],"variable":"$url"},{"name":"param","content":"<p>The original unmodified attributes.</p>","types":["array"],"variable":"$rawattr"}]},"args":4},{"name":"oembed_discovery_links","file":"wp-includes/embed.php","type":"filter","doc":{"description":"Filters the oEmbed discovery links HTML.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.4.0"},{"name":"param","content":"<p>HTML of the discovery links.</p>","types":["string"],"variable":"$output"}]},"args":1},{"name":"post_embed_url","file":"wp-includes/embed.php","type":"filter","doc":{"description":"Filters the URL to embed a specific post.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.4.0"},{"name":"param","content":"<p>The post embed URL.</p>","types":["string"],"variable":"$embed_url"},{"name":"param","content":"<p>The corresponding post object.</p>","types":["\\WP_Post"],"variable":"$post"}]},"args":2},{"name":"oembed_endpoint_url","file":"wp-includes/embed.php","type":"filter","doc":{"description":"Filters the oEmbed endpoint URL.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.4.0"},{"name":"param","content":"<p>The URL to the oEmbed endpoint.</p>","types":["string"],"variable":"$url"},{"name":"param","content":"<p>The permalink used for the <code>url</code> query arg.</p>","types":["string"],"variable":"$permalink"},{"name":"param","content":"<p>The requested response format.</p>","types":["string"],"variable":"$format"}]},"args":3},{"name":"embed_html","file":"wp-includes/embed.php","type":"filter","doc":{"description":"Filters the embed HTML output for a given post.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.4.0"},{"name":"param","content":"<p>The default iframe tag to display embedded content.</p>","types":["string"],"variable":"$output"},{"name":"param","content":"<p>Current post object.</p>","types":["\\WP_Post"],"variable":"$post"},{"name":"param","content":"<p>Width of the response.</p>","types":["int"],"variable":"$width"},{"name":"param","content":"<p>Height of the response.</p>","types":["int"],"variable":"$height"}]},"args":4},{"name":"oembed_min_max_width","file":"wp-includes/embed.php","type":"filter","doc":{"description":"Filters the allowed minimum and maximum widths for the oEmbed response.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.4.0"},{"name":"param","content":"<p>{ Minimum and maximum widths for the oEmbed response.</p>","types":["array"],"variable":"$min_max_width"}]},"args":1},{"name":"oembed_response_data","file":"wp-includes/embed.php","type":"filter","doc":{"description":"Filters the oEmbed response data.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.4.0"},{"name":"param","content":"<p>The response data.</p>","types":["array"],"variable":"$data"},{"name":"param","content":"<p>The post object.</p>","types":["\\WP_Post"],"variable":"$post"},{"name":"param","content":"<p>The requested width.</p>","types":["int"],"variable":"$width"},{"name":"param","content":"<p>The calculated height.</p>","types":["int"],"variable":"$height"}]},"args":4},{"name":"oembed_iframe_title_attribute","file":"wp-includes/embed.php","type":"filter","doc":{"description":"Filters the title attribute of the given oEmbed HTML iframe.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.2.0"},{"name":"param","content":"<p>The title attribute.</p>","types":["string"],"variable":"$title"},{"name":"param","content":"<p>The oEmbed HTML result.</p>","types":["string"],"variable":"$result"},{"name":"param","content":"<p>A data object result from an oEmbed provider.</p>","types":["object"],"variable":"$data"},{"name":"param","content":"<p>The URL of the content to be embedded.</p>","types":["string"],"variable":"$url"}]},"args":4},{"name":"the_excerpt_embed","file":"wp-includes/embed.php","type":"filter","doc":{"description":"Filters the post excerpt for the embed template.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.4.0"},{"name":"param","content":"<p>The current post excerpt.</p>","types":["string"],"variable":"$output"}]},"args":1},{"name":"embed_site_title_html","file":"wp-includes/embed.php","type":"filter","doc":{"description":"Filters the site title HTML in the embed footer.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.4.0"},{"name":"param","content":"<p>The site title HTML.</p>","types":["string"],"variable":"$site_title"}]},"args":1},{"name":"wp_robots","file":"wp-includes/robots-template.php","type":"filter","doc":{"description":"Filters the directives to be included in the 'robots' meta tag.","long_description":"The meta tag will only be included as necessary.","long_description_html":"<p>The meta tag will only be included as necessary.</p>","tags":[{"name":"since","content":"5.7.0"},{"name":"param","content":"<p>Associative array of directives. Every key must be the name of the directive, and the corresponding value must either be a string to provide as value for the directive or a boolean <code>true</code> if it is a boolean directive, i.e. without a value.</p>","types":["array"],"variable":"$robots"}]},"args":1},{"name":"run_wptexturize","file":"wp-includes/formatting.php","type":"filter","doc":{"description":"Filters whether to skip running wptexturize().","long_description":"Returning false from the filter will effectively short-circuit wptexturize() and return the original text passed to the function instead.\n The filter runs only once, the first time wptexturize() is called.","long_description_html":"<p>Returning false from the filter will effectively short-circuit wptexturize() and return the original text passed to the function instead.</p> <p>The filter runs only once, the first time wptexturize() is called.</p>","tags":[{"name":"since","content":"4.0.0"},{"name":"see","content":"","refers":"wptexturize()"},{"name":"param","content":"<p>Whether to short-circuit wptexturize().</p>","types":["bool"],"variable":"$run_texturize"}]},"args":1},{"name":"no_texturize_tags","file":"wp-includes/formatting.php","type":"filter","doc":{"description":"Filters the list of HTML elements not to texturize.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.8.0"},{"name":"param","content":"<p>An array of HTML element names.</p>","types":["string[]"],"variable":"$default_no_texturize_tags"}]},"args":1},{"name":"no_texturize_shortcodes","file":"wp-includes/formatting.php","type":"filter","doc":{"description":"Filters the list of shortcodes not to texturize.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.8.0"},{"name":"param","content":"<p>An array of shortcode names.</p>","types":["string[]"],"variable":"$default_no_texturize_shortcodes"}]},"args":1},{"name":"sanitize_file_name_chars","file":"wp-includes/formatting.php","type":"filter","doc":{"description":"Filters the list of characters to remove from a filename.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.8.0"},{"name":"param","content":"<p>Array of characters to remove.</p>","types":["string[]"],"variable":"$special_chars"},{"name":"param","content":"<p>The original filename to be sanitized.</p>","types":["string"],"variable":"$filename_raw"}]},"args":2},{"name":"sanitize_file_name","file":"wp-includes/formatting.php","type":"filter","doc":{"description":"Filters a sanitized filename string.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.8.0"},{"name":"param","content":"<p>Sanitized filename.</p>","types":["string"],"variable":"$filename"},{"name":"param","content":"<p>The filename prior to sanitization.</p>","types":["string"],"variable":"$filename_raw"}]},"args":2},{"name":"sanitize_user","file":"wp-includes/formatting.php","type":"filter","doc":{"description":"Filters a sanitized username string.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.0.1"},{"name":"param","content":"<p>Sanitized username.</p>","types":["string"],"variable":"$username"},{"name":"param","content":"<p>The username prior to sanitization.</p>","types":["string"],"variable":"$raw_username"},{"name":"param","content":"<p>Whether to limit the sanitization to specific characters.</p>","types":["bool"],"variable":"$strict"}]},"args":3},{"name":"sanitize_key","file":"wp-includes/formatting.php","type":"filter","doc":{"description":"Filters a sanitized key string.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.0.0"},{"name":"param","content":"<p>Sanitized key.</p>","types":["string"],"variable":"$sanitized_key"},{"name":"param","content":"<p>The key prior to sanitization.</p>","types":["string"],"variable":"$key"}]},"args":2},{"name":"sanitize_title","file":"wp-includes/formatting.php","type":"filter","doc":{"description":"Filters a sanitized title string.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"1.2.0"},{"name":"param","content":"<p>Sanitized title.</p>","types":["string"],"variable":"$title"},{"name":"param","content":"<p>The title prior to sanitization.</p>","types":["string"],"variable":"$raw_title"},{"name":"param","content":"<p>The context for which the title is being sanitized.</p>","types":["string"],"variable":"$context"}]},"args":3},{"name":"sanitize_html_class","file":"wp-includes/formatting.php","type":"filter","doc":{"description":"Filters a sanitized HTML class string.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.8.0"},{"name":"param","content":"<p>The sanitized HTML class.</p>","types":["string"],"variable":"$sanitized"},{"name":"param","content":"<p>HTML class before sanitization.</p>","types":["string"],"variable":"$classname"},{"name":"param","content":"<p>The fallback string.</p>","types":["string"],"variable":"$fallback"}]},"args":3},{"name":"sanitize_locale_name","file":"wp-includes/formatting.php","type":"filter","doc":{"description":"Filters a sanitized locale name string.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"6.2.1"},{"name":"param","content":"<p>The sanitized locale name.</p>","types":["string"],"variable":"$sanitized"},{"name":"param","content":"<p>The locale name before sanitization.</p>","types":["string"],"variable":"$locale_name"}]},"args":2},{"name":"format_to_edit","file":"wp-includes/formatting.php","type":"filter","doc":{"description":"Filters the text to be formatted for editing.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"1.2.0"},{"name":"param","content":"<p>The text, prior to formatting for editing.</p>","types":["string"],"variable":"$content"}]},"args":1},{"name":"make_clickable_rel","file":"wp-includes/formatting.php","type":"filter","doc":{"description":"Filters the rel value that is added to URL matches converted to links.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.3.0"},{"name":"param","content":"<p>The rel value.</p>","types":["string"],"variable":"$rel"},{"name":"param","content":"<p>The matched URL being converted to a link tag.</p>","types":["string"],"variable":"$url"}]},"args":2},{"name":"wp_targeted_link_rel","file":"wp-includes/formatting.php","type":"filter","doc":{"description":"Filters the rel values that are added to links with `target` attribute.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.1.0"},{"name":"param","content":"<p>The rel values.</p>","types":["string"],"variable":"$rel"},{"name":"param","content":"<p>The matched content of the link tag including all HTML attributes.</p>","types":["string"],"variable":"$link_html"}]},"args":2},{"name":"smilies_src","file":"wp-includes/formatting.php","type":"filter","doc":{"description":"Filters the Smiley image URL before it's used in the image element.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.9.0"},{"name":"param","content":"<p>URL for the smiley image.</p>","types":["string"],"variable":"$smiley_url"},{"name":"param","content":"<p>Filename for the smiley image.</p>","types":["string"],"variable":"$img"},{"name":"param","content":"<p>Site URL, as returned by site_url().</p>","types":["string"],"variable":"$site_url"}]},"args":3},{"name":"is_email","file":"wp-includes/formatting.php","type":"filter","doc":{"description":"Filters whether an email address is valid.","long_description":"This filter is evaluated under several different contexts, such as 'email_too_short', 'email_no_at', 'local_invalid_chars', 'domain_period_sequence', 'domain_period_limits', 'domain_no_periods', 'sub_hyphen_limits', 'sub_invalid_chars', or no specific context.","long_description_html":"<p>This filter is evaluated under several different contexts, such as 'email_too_short', 'email_no_at', 'local_invalid_chars', 'domain_period_sequence', 'domain_period_limits', 'domain_no_periods', 'sub_hyphen_limits', 'sub_invalid_chars', or no specific context.</p>","tags":[{"name":"since","content":"2.8.0"},{"name":"param","content":"<p>The email address if successfully passed the is_email() checks, false otherwise.</p>","types":["string","false"],"variable":"$is_email"},{"name":"param","content":"<p>The email address being checked.</p>","types":["string"],"variable":"$email"},{"name":"param","content":"<p>Context under which the email was tested.</p>","types":["string"],"variable":"$context"}]},"args":3},{"name":"sanitize_email","file":"wp-includes/formatting.php","type":"filter","doc":{"description":"Filters a sanitized email address.","long_description":"This filter is evaluated under several contexts, including 'email_too_short', 'email_no_at', 'local_invalid_chars', 'domain_period_sequence', 'domain_period_limits', 'domain_no_periods', 'domain_no_valid_subs', or no context.","long_description_html":"<p>This filter is evaluated under several contexts, including 'email_too_short', 'email_no_at', 'local_invalid_chars', 'domain_period_sequence', 'domain_period_limits', 'domain_no_periods', 'domain_no_valid_subs', or no context.</p>","tags":[{"name":"since","content":"2.8.0"},{"name":"param","content":"<p>The sanitized email address.</p>","types":["string"],"variable":"$sanitized_email"},{"name":"param","content":"<p>The email address, as provided to sanitize_email().</p>","types":["string"],"variable":"$email"},{"name":"param","content":"<p>A message to pass to the user. null if email is sanitized.</p>","types":["string","null"],"variable":"$message"}]},"args":3},{"name":"human_time_diff","file":"wp-includes/formatting.php","type":"filter","doc":{"description":"Filters the human-readable difference between two timestamps.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.0.0"},{"name":"param","content":"<p>The difference in human-readable text.</p>","types":["string"],"variable":"$since"},{"name":"param","content":"<p>The difference in seconds.</p>","types":["int"],"variable":"$diff"},{"name":"param","content":"<p>Unix timestamp from which the difference begins.</p>","types":["int"],"variable":"$from"},{"name":"param","content":"<p>Unix timestamp to end the time difference.</p>","types":["int"],"variable":"$to"}]},"args":4},{"name":"excerpt_length","file":"wp-includes/formatting.php","type":"filter","doc":{"description":"Filters the maximum number of words in a post excerpt.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.7.0"},{"name":"param","content":"<p>The maximum number of words. Default 55.</p>","types":["int"],"variable":"$number"}]},"args":1},{"name":"excerpt_more","file":"wp-includes/formatting.php","type":"filter","doc":{"description":"Filters the string in the \"more\" link displayed after a trimmed excerpt.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.9.0"},{"name":"param","content":"<p>The string shown within the more link.</p>","types":["string"],"variable":"$more_string"}]},"args":1},{"name":"wp_trim_excerpt","file":"wp-includes/formatting.php","type":"filter","doc":{"description":"Filters the trimmed excerpt string.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.8.0"},{"name":"param","content":"<p>The trimmed text.</p>","types":["string"],"variable":"$text"},{"name":"param","content":"<p>The text prior to trimming.</p>","types":["string"],"variable":"$raw_excerpt"}]},"args":2},{"name":"wp_trim_words","file":"wp-includes/formatting.php","type":"filter","doc":{"description":"Filters the text content after words have been trimmed.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.3.0"},{"name":"param","content":"<p>The trimmed text.</p>","types":["string"],"variable":"$text"},{"name":"param","content":"<p>The number of words to trim the text to. Default 55.</p>","types":["int"],"variable":"$num_words"},{"name":"param","content":"<p>An optional string to append to the end of the trimmed text, e.g. &hellip;.</p>","types":["string"],"variable":"$more"},{"name":"param","content":"<p>The text before it was trimmed.</p>","types":["string"],"variable":"$original_text"}]},"args":4},{"name":"pre_ent2ncr","file":"wp-includes/formatting.php","type":"filter","doc":{"description":"Filters text before named entities are converted into numbered entities.","long_description":"A non-null string must be returned for the filter to be evaluated.","long_description_html":"<p>A non-null string must be returned for the filter to be evaluated.</p>","tags":[{"name":"since","content":"3.3.0"},{"name":"param","content":"<p>The text to be converted. Default null.</p>","types":["string","null"],"variable":"$converted_text"},{"name":"param","content":"<p>The text prior to entity conversion.</p>","types":["string"],"variable":"$text"}]},"args":2},{"name":"format_for_editor","file":"wp-includes/formatting.php","type":"filter","doc":{"description":"Filters the text after it is formatted for the editor.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.3.0"},{"name":"param","content":"<p>The formatted text.</p>","types":["string"],"variable":"$text"},{"name":"param","content":"<p>The default editor for the current user. It is usually either 'html' or 'tinymce'.</p>","types":["string"],"variable":"$default_editor"}]},"args":2},{"name":"clean_url","file":"wp-includes/formatting.php","type":"filter","doc":{"description":"Filters a string cleaned and escaped for output as a URL.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.3.0"},{"name":"param","content":"<p>The cleaned URL to be returned.</p>","types":["string"],"variable":"$good_protocol_url"},{"name":"param","content":"<p>The URL prior to cleaning.</p>","types":["string"],"variable":"$original_url"},{"name":"param","content":"<p>If 'display', replace ampersands and single quotes only.</p>","types":["string"],"variable":"$_context"}]},"args":3},{"name":"js_escape","file":"wp-includes/formatting.php","type":"filter","doc":{"description":"Filters a string cleaned and escaped for output in JavaScript.","long_description":"Text passed to esc_js() is stripped of invalid or special characters, and properly slashed for output.","long_description_html":"<p>Text passed to esc_js() is stripped of invalid or special characters, and properly slashed for output.</p>","tags":[{"name":"since","content":"2.0.6"},{"name":"param","content":"<p>The text after it has been escaped.</p>","types":["string"],"variable":"$safe_text"},{"name":"param","content":"<p>The text prior to being escaped.</p>","types":["string"],"variable":"$text"}]},"args":2},{"name":"esc_html","file":"wp-includes/formatting.php","type":"filter","doc":{"description":"Filters a string cleaned and escaped for output in HTML.","long_description":"Text passed to esc_html() is stripped of invalid or special characters before output.","long_description_html":"<p>Text passed to esc_html() is stripped of invalid or special characters before output.</p>","tags":[{"name":"since","content":"2.8.0"},{"name":"param","content":"<p>The text after it has been escaped.</p>","types":["string"],"variable":"$safe_text"},{"name":"param","content":"<p>The text prior to being escaped.</p>","types":["string"],"variable":"$text"}]},"args":2},{"name":"attribute_escape","file":"wp-includes/formatting.php","type":"filter","doc":{"description":"Filters a string cleaned and escaped for output in an HTML attribute.","long_description":"Text passed to esc_attr() is stripped of invalid or special characters before output.","long_description_html":"<p>Text passed to esc_attr() is stripped of invalid or special characters before output.</p>","tags":[{"name":"since","content":"2.0.6"},{"name":"param","content":"<p>The text after it has been escaped.</p>","types":["string"],"variable":"$safe_text"},{"name":"param","content":"<p>The text prior to being escaped.</p>","types":["string"],"variable":"$text"}]},"args":2},{"name":"esc_textarea","file":"wp-includes/formatting.php","type":"filter","doc":{"description":"Filters a string cleaned and escaped for output in a textarea element.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.1.0"},{"name":"param","content":"<p>The text after it has been escaped.</p>","types":["string"],"variable":"$safe_text"},{"name":"param","content":"<p>The text prior to being escaped.</p>","types":["string"],"variable":"$text"}]},"args":2},{"name":"esc_xml","file":"wp-includes/formatting.php","type":"filter","doc":{"description":"Filters a string cleaned and escaped for output in XML.","long_description":"Text passed to esc_xml() is stripped of invalid or special characters before output. HTML named character references are converted to their equivalent code points.","long_description_html":"<p>Text passed to esc_xml() is stripped of invalid or special characters before output. HTML named character references are converted to their equivalent code points.</p>","tags":[{"name":"since","content":"5.5.0"},{"name":"param","content":"<p>The text after it has been escaped.</p>","types":["string"],"variable":"$safe_text"},{"name":"param","content":"<p>The text prior to being escaped.</p>","types":["string"],"variable":"$text"}]},"args":2},{"name":"tag_escape","file":"wp-includes/formatting.php","type":"filter","doc":{"description":"Filters a string cleaned and escaped for output as an HTML tag.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.8.0"},{"name":"param","content":"<p>The tag name after it has been escaped.</p>","types":["string"],"variable":"$safe_tag"},{"name":"param","content":"<p>The text before it was escaped.</p>","types":["string"],"variable":"$tag_name"}]},"args":2},{"name":"sanitize_option_{$option}","file":"wp-includes/formatting.php","type":"filter","doc":{"description":"Filters an option value following sanitization.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.3.0"},{"name":"since","content":"4.3.0","description":"<p>Added the <code>$original_value</code> parameter.</p>"},{"name":"param","content":"<p>The sanitized option value.</p>","types":["mixed"],"variable":"$value"},{"name":"param","content":"<p>The option name.</p>","types":["string"],"variable":"$option"},{"name":"param","content":"<p>The original value passed to the function.</p>","types":["mixed"],"variable":"$original_value"}]},"args":3},{"name":"wp_parse_str","file":"wp-includes/formatting.php","type":"filter","doc":{"description":"Filters the array of variables derived from a parsed string.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.2.1"},{"name":"param","content":"<p>The array populated with variables.</p>","types":["array"],"variable":"$result"}]},"args":1},{"name":"wp_sprintf","file":"wp-includes/formatting.php","type":"filter","doc":{"description":"Filters a fragment from the pattern passed to wp_sprintf().","long_description":"If the fragment is unchanged, then sprintf() will be run on the fragment.","long_description_html":"<p>If the fragment is unchanged, then sprintf() will be run on the fragment.</p>","tags":[{"name":"since","content":"2.5.0"},{"name":"param","content":"<p>A fragment from the pattern.</p>","types":["string"],"variable":"$fragment"},{"name":"param","content":"<p>The argument.</p>","types":["string"],"variable":"$arg"}]},"args":2},{"name":"wp_sprintf_l","file":"wp-includes/formatting.php","type":"filter","doc":{"description":"Filters the translated delimiters used by wp_sprintf_l().","long_description":"Placeholders (%s) are included to assist translators and then removed before the array of strings reaches the filter.\n Please note: Ampersands and entities should be avoided here.","long_description_html":"<p>Placeholders (%s) are included to assist translators and then removed before the array of strings reaches the filter.</p> <p>Please note: Ampersands and entities should be avoided here.</p>","tags":[{"name":"since","content":"2.5.0"},{"name":"param","content":"<p>An array of translated delimiters.</p>","types":["array"],"variable":"$delimiters"}]},"args":1},{"name":"sanitize_text_field","file":"wp-includes/formatting.php","type":"filter","doc":{"description":"Filters a sanitized text field string.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.9.0"},{"name":"param","content":"<p>The sanitized string.</p>","types":["string"],"variable":"$filtered"},{"name":"param","content":"<p>The string prior to being sanitized.</p>","types":["string"],"variable":"$str"}]},"args":2},{"name":"sanitize_textarea_field","file":"wp-includes/formatting.php","type":"filter","doc":{"description":"Filters a sanitized textarea field string.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.7.0"},{"name":"param","content":"<p>The sanitized string.</p>","types":["string"],"variable":"$filtered"},{"name":"param","content":"<p>The string prior to being sanitized.</p>","types":["string"],"variable":"$str"}]},"args":2},{"name":"sanitize_mime_type","file":"wp-includes/formatting.php","type":"filter","doc":{"description":"Filters a mime type following sanitization.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.1.3"},{"name":"param","content":"<p>The sanitized mime type.</p>","types":["string"],"variable":"$sani_mime_type"},{"name":"param","content":"<p>The mime type prior to sanitization.</p>","types":["string"],"variable":"$mime_type"}]},"args":2},{"name":"sanitize_trackback_urls","file":"wp-includes/formatting.php","type":"filter","doc":{"description":"Filters a list of trackback URLs following sanitization.","long_description":"The string returned here consists of a space or carriage return-delimited list of trackback URLs.","long_description_html":"<p>The string returned here consists of a space or carriage return-delimited list of trackback URLs.</p>","tags":[{"name":"since","content":"3.4.0"},{"name":"param","content":"<p>Sanitized space or carriage return separated URLs.</p>","types":["string"],"variable":"$urls_to_ping"},{"name":"param","content":"<p>Space or carriage return separated URLs before sanitization.</p>","types":["string"],"variable":"$to_ping"}]},"args":2},{"name":"wp_spaces_regexp","file":"wp-includes/formatting.php","type":"filter","doc":{"description":"Filters the regexp for common whitespace characters.","long_description":"This string is substituted for the \\s sequence as needed in regular expressions. For websites not written in English, different characters may represent whitespace. For websites not encoded in UTF-8, the 0xC2 0xA0 sequence may not be in use.","long_description_html":"<p>This string is substituted for the \\s sequence as needed in regular expressions. For websites not written in English, different characters may represent whitespace. For websites not encoded in UTF-8, the 0xC2 0xA0 sequence may not be in use.</p>","tags":[{"name":"since","content":"4.0.0"},{"name":"param","content":"<p>Regexp pattern for matching common whitespace characters.</p>","types":["string"],"variable":"$spaces"}]},"args":1},{"name":"emoji_url","file":"wp-includes/formatting.php","type":"filter","doc":{"description":"Filters the URL where emoji png images are hosted.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.2.0"},{"name":"param","content":"<p>The emoji base URL for png images.</p>","types":["string"],"variable":"$url"}]},"args":1},{"name":"emoji_ext","file":"wp-includes/formatting.php","type":"filter","doc":{"description":"Filters the extension of the emoji png files.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.2.0"},{"name":"param","content":"<p>The emoji extension for png files. Default .png.</p>","types":["string"],"variable":"$extension"}]},"args":1},{"name":"emoji_svg_url","file":"wp-includes/formatting.php","type":"filter","doc":{"description":"Filters the URL where emoji SVG images are hosted.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.6.0"},{"name":"param","content":"<p>The emoji base URL for svg images.</p>","types":["string"],"variable":"$url"}]},"args":1},{"name":"emoji_svg_ext","file":"wp-includes/formatting.php","type":"filter","doc":{"description":"Filters the extension of the emoji SVG files.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.6.0"},{"name":"param","content":"<p>The emoji extension for svg files. Default .svg.</p>","types":["string"],"variable":"$extension"}]},"args":1},{"name":"get_site","file":"wp-includes/ms-site.php","type":"filter","doc":{"description":"Fires after a site is retrieved.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.6.0"},{"name":"param","content":"<p>Site data.</p>","types":["\\WP_Site"],"variable":"$_site"}]},"args":1},{"name":"wp_normalize_site_data","file":"wp-includes/ms-site.php","type":"filter","doc":{"description":"Filters passed site data in order to normalize it.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.1.0"},{"name":"param","content":"<p>Associative array of site data passed to the respective function. See {@see \\wp_insert_site()} for the possibly included data.</p>","types":["array"],"variable":"$data"}]},"args":1},{"name":"wp_initialize_site_args","file":"wp-includes/ms-site.php","type":"filter","doc":{"description":"Filters the arguments for initializing a site.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.1.0"},{"name":"param","content":"<p>Arguments to modify the initialization behavior.</p>","types":["array"],"variable":"$args"},{"name":"param","content":"<p>Site that is being initialized.</p>","types":["\\WP_Site"],"variable":"$site"},{"name":"param","content":"<p>Network that the site belongs to.</p>","types":["\\WP_Network"],"variable":"$network"}]},"args":3},{"name":"wpmu_drop_tables","file":"wp-includes/ms-site.php","type":"filter","doc":{"description":"Filters the tables to drop when the site is deleted.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"MU (3.0.0)","description":"MU (3.0.0)"},{"name":"param","content":"<p>Array of names of the site tables to be dropped.</p>","types":["string[]"],"variable":"$tables"},{"name":"param","content":"<p>The ID of the site to drop tables for.</p>","types":["int"],"variable":"$site_id"}]},"args":2},{"name":"wpmu_delete_blog_upload_dir","file":"wp-includes/ms-site.php","type":"filter","doc":{"description":"Filters the upload base directory to delete when the site is deleted.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"MU (3.0.0)","description":"MU (3.0.0)"},{"name":"param","content":"<p>Uploads path without subdirectory. See {@see \\wp_upload_dir()}.</p>","types":["string"],"variable":"$basedir"},{"name":"param","content":"<p>The site ID.</p>","types":["int"],"variable":"$site_id"}]},"args":2},{"name":"pre_wp_is_site_initialized","file":"wp-includes/ms-site.php","type":"filter","doc":{"description":"Filters the check for whether a site is initialized before the database is accessed.","long_description":"Returning a non-null value will effectively short-circuit the function, returning that value instead.","long_description_html":"<p>Returning a non-null value will effectively short-circuit the function, returning that value instead.</p>","tags":[{"name":"since","content":"5.1.0"},{"name":"param","content":"<p>The value to return instead. Default null to continue with the check.</p>","types":["bool","null"],"variable":"$pre"},{"name":"param","content":"<p>The site ID that is being checked.</p>","types":["int"],"variable":"$site_id"}]},"args":2},{"name":"core_version_check_locale","file":"wp-includes/update.php","type":"filter","doc":{"description":"Filters the locale requested for WordPress core translations.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.8.0"},{"name":"param","content":"<p>Current locale.</p>","types":["string"],"variable":"$locale"}]},"args":1},{"name":"core_version_check_query_args","file":"wp-includes/update.php","type":"filter","doc":{"description":"Filters the query arguments sent as part of the core version check.","long_description":"WARNING: Changing this data may result in your site not receiving security updates. Please exercise extreme caution.","long_description_html":"<p>WARNING: Changing this data may result in your site not receiving security updates. Please exercise extreme caution.</p>","tags":[{"name":"since","content":"4.9.0"},{"name":"param","content":"<p>{ Version check query arguments.</p>","types":["array"],"variable":"$query"}]},"args":1},{"name":"plugins_update_check_locales","file":"wp-includes/update.php","type":"filter","doc":{"description":"Filters the locales requested for plugin translations.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.7.0"},{"name":"since","content":"4.5.0","description":"<p>The default value of the <code>$locales</code> parameter changed to include all locales.</p>"},{"name":"param","content":"<p>Plugin locales. Default is all available locales of the site.</p>","types":["string[]"],"variable":"$locales"}]},"args":1},{"name":"update_plugins_{$hostname}","file":"wp-includes/update.php","type":"filter","doc":{"description":"Filters the update response for a given plugin hostname.","long_description":"The dynamic portion of the hook name, `$hostname`, refers to the hostname of the URI specified in the `Update URI` header field.","long_description_html":"<p>The dynamic portion of the hook name, <code>$hostname</code>, refers to the hostname of the URI specified in the <code>Update URI</code> header field.</p>","tags":[{"name":"since","content":"5.8.0"},{"name":"param","content":"<p>{ The plugin update data with the latest details. Default false.</p>","types":["array","false"],"variable":"$update"},{"name":"param","content":"<p>Plugin headers.</p>","types":["array"],"variable":"$plugin_data"},{"name":"param","content":"<p>Plugin filename.</p>","types":["string"],"variable":"$plugin_file"},{"name":"param","content":"<p>Installed locales to look up translations for.</p>","types":["string[]"],"variable":"$locales"}]},"args":4},{"name":"themes_update_check_locales","file":"wp-includes/update.php","type":"filter","doc":{"description":"Filters the locales requested for theme translations.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.7.0"},{"name":"since","content":"4.5.0","description":"<p>The default value of the <code>$locales</code> parameter changed to include all locales.</p>"},{"name":"param","content":"<p>Theme locales. Default is all available locales of the site.</p>","types":["string[]"],"variable":"$locales"}]},"args":1},{"name":"update_themes_{$hostname}","file":"wp-includes/update.php","type":"filter","doc":{"description":"Filters the update response for a given theme hostname.","long_description":"The dynamic portion of the hook name, `$hostname`, refers to the hostname of the URI specified in the `Update URI` header field.","long_description_html":"<p>The dynamic portion of the hook name, <code>$hostname</code>, refers to the hostname of the URI specified in the <code>Update URI</code> header field.</p>","tags":[{"name":"since","content":"6.1.0"},{"name":"param","content":"<p>{ The theme update data with the latest details. Default false.</p>","types":["array","false"],"variable":"$update"},{"name":"param","content":"<p>Theme headers.</p>","types":["array"],"variable":"$theme_data"},{"name":"param","content":"<p>Theme stylesheet.</p>","types":["string"],"variable":"$theme_stylesheet"},{"name":"param","content":"<p>Installed locales to look up translations for.</p>","types":["string[]"],"variable":"$locales"}]},"args":4},{"name":"wp_get_update_data","file":"wp-includes/update.php","type":"filter","doc":{"description":"Filters the returned array of update data for plugins, themes, and WordPress core.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.5.0"},{"name":"param","content":"<p>{ Fetched update data.</p>","types":["array"],"variable":"$update_data"},{"name":"param","content":"<p>An array of update counts and UI strings for available updates.</p>","types":["array"],"variable":"$titles"}]},"args":2},{"name":"wp_theme_json_data_default","file":"wp-includes/class-wp-theme-json-resolver.php","type":"filter","doc":{"description":"Filters the default data provided by WordPress for global styles & settings.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"6.1.0"},{"name":"param","content":"<p>Class to access and update the underlying data.</p>","types":["\\WP_Theme_JSON_Data"],"variable":"$theme_json"}]},"args":1},{"name":"wp_theme_json_data_theme","file":"wp-includes/class-wp-theme-json-resolver.php","type":"filter","doc":{"description":"Filters the data provided by the theme for global styles and settings.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"6.1.0"},{"name":"param","content":"<p>Class to access and update the underlying data.</p>","types":["\\WP_Theme_JSON_Data"],"variable":"$theme_json"}]},"args":1},{"name":"wp_theme_json_data_blocks","file":"wp-includes/class-wp-theme-json-resolver.php","type":"filter","doc":{"description":"Filters the data provided by the blocks for global styles & settings.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"6.1.0"},{"name":"param","content":"<p>Class to access and update the underlying data.</p>","types":["\\WP_Theme_JSON_Data"],"variable":"$theme_json"}]},"args":1},{"name":"wp_theme_json_data_user","file":"wp-includes/class-wp-theme-json-resolver.php","type":"filter","doc":{"description":"Filters the data provided by the user for global styles & settings.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"6.1.0"},{"name":"param","content":"<p>Class to access and update the underlying data.</p>","types":["\\WP_Theme_JSON_Data"],"variable":"$theme_json"}]},"args":1},{"name":"url_to_postid","file":"wp-includes/rewrite.php","type":"filter","doc":{"description":"Filters the URL to derive the post ID from.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.2.0"},{"name":"param","content":"<p>The URL to derive the post ID from.</p>","types":["string"],"variable":"$url"}]},"args":1},{"name":"wp_editor_settings","file":"wp-includes/class-wp-editor.php","type":"filter","doc":{"description":"Filters the wp_editor() settings.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.0.0"},{"name":"see","content":"","refers":"_WP_Editors::parse_settings()"},{"name":"param","content":"<p>Array of editor arguments.</p>","types":["array"],"variable":"$settings"},{"name":"param","content":"<p>Unique editor identifier, e.g. 'content'. Accepts 'classic-block' when called from block editor's Classic block.</p>","types":["string"],"variable":"$editor_id"}]},"args":2},{"name":"the_editor","file":"wp-includes/class-wp-editor.php","type":"filter","doc":{"description":"Filters the HTML markup output that displays the editor.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.1.0"},{"name":"param","content":"<p>Editor's HTML markup.</p>","types":["string"],"variable":"$output"}]},"args":1},{"name":"the_editor_content","file":"wp-includes/class-wp-editor.php","type":"filter","doc":{"description":"Filters the default editor content.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.1.0"},{"name":"param","content":"<p>Default editor content.</p>","types":["string"],"variable":"$content"},{"name":"param","content":"<p>The default editor for the current user. Either 'html' or 'tinymce'.</p>","types":["string"],"variable":"$default_editor"}]},"args":2},{"name":"quicktags_settings","file":"wp-includes/class-wp-editor.php","type":"filter","doc":{"description":"Filters the Quicktags settings.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.3.0"},{"name":"param","content":"<p>Quicktags settings.</p>","types":["array"],"variable":"$qt_init"},{"name":"param","content":"<p>Unique editor identifier, e.g. 'content'.</p>","types":["string"],"variable":"$editor_id"}]},"args":2},{"name":"teeny_mce_plugins","file":"wp-includes/class-wp-editor.php","type":"filter","doc":{"description":"Filters the list of teenyMCE plugins.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.7.0"},{"name":"since","content":"3.3.0","description":"<p>The <code>$editor_id</code> parameter was added.</p>"},{"name":"param","content":"<p>An array of teenyMCE plugins.</p>","types":["array"],"variable":"$plugins"},{"name":"param","content":"<p>Unique editor identifier, e.g. 'content'.</p>","types":["string"],"variable":"$editor_id"}]},"args":2},{"name":"mce_external_plugins","file":"wp-includes/class-wp-editor.php","type":"filter","doc":{"description":"Filters the list of TinyMCE external plugins.","long_description":"The filter takes an associative array of external plugins for TinyMCE in the form 'plugin_name' => 'url'.\n The url should be absolute, and should include the js filename to be loaded. For example: 'myplugin' => 'http://mysite.com/wp-content/plugins/myfolder/mce_plugin.js'.\n If the external plugin adds a button, it should be added with one of the 'mce_buttons' filters.","long_description_html":"<p>The filter takes an associative array of external plugins for TinyMCE in the form 'plugin_name' =&gt; 'url'.</p> <p>The url should be absolute, and should include the js filename to be loaded. For example: 'myplugin' =&gt; '<a href=\"http://mysite.com/wp-content/plugins/myfolder/mce_plugin.js\">http://mysite.com/wp-content/plugins/myfolder/mce_plugin.js</a>'.</p> <p>If the external plugin adds a button, it should be added with one of the 'mce_buttons' filters.</p>","tags":[{"name":"since","content":"2.5.0"},{"name":"since","content":"5.3.0","description":"<p>The <code>$editor_id</code> parameter was added.</p>"},{"name":"param","content":"<p>An array of external TinyMCE plugins.</p>","types":["array"],"variable":"$external_plugins"},{"name":"param","content":"<p>Unique editor identifier, e.g. 'content'. Accepts 'classic-block' when called from block editor's Classic block.</p>","types":["string"],"variable":"$editor_id"}]},"args":2},{"name":"tiny_mce_plugins","file":"wp-includes/class-wp-editor.php","type":"filter","doc":{"description":"Filters the list of default TinyMCE plugins.","long_description":"The filter specifies which of the default plugins included in WordPress should be added to the TinyMCE instance.","long_description_html":"<p>The filter specifies which of the default plugins included in WordPress should be added to the TinyMCE instance.</p>","tags":[{"name":"since","content":"3.3.0"},{"name":"since","content":"5.3.0","description":"<p>The <code>$editor_id</code> parameter was added.</p>"},{"name":"param","content":"<p>An array of default TinyMCE plugins.</p>","types":["array"],"variable":"$plugins"},{"name":"param","content":"<p>Unique editor identifier, e.g. 'content'. Accepts 'classic-block' when called from block editor's Classic block.</p>","types":["string"],"variable":"$editor_id"}]},"args":2},{"name":"mce_external_languages","file":"wp-includes/class-wp-editor.php","type":"filter","doc":{"description":"Filters the translations loaded for external TinyMCE 3.x plugins.","long_description":"The filter takes an associative array ('plugin_name' => 'path') where 'path' is the include path to the file.\n The language file should follow the same format as wp_mce_translation(), and should define a variable ($strings) that holds all translated strings.","long_description_html":"<p>The filter takes an associative array ('plugin_name' =&gt; 'path') where 'path' is the include path to the file.</p> <p>The language file should follow the same format as wp_mce_translation(), and should define a variable ($strings) that holds all translated strings.</p>","tags":[{"name":"since","content":"2.5.0"},{"name":"since","content":"5.3.0","description":"<p>The <code>$editor_id</code> parameter was added.</p>"},{"name":"param","content":"<p>Translations for external TinyMCE plugins.</p>","types":["array"],"variable":"$translations"},{"name":"param","content":"<p>Unique editor identifier, e.g. 'content'.</p>","types":["string"],"variable":"$editor_id"}]},"args":2},{"name":"mce_css","file":"wp-includes/class-wp-editor.php","type":"filter","doc":{"description":"Filters the comma-delimited list of stylesheets to load in TinyMCE.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.1.0"},{"name":"param","content":"<p>Comma-delimited list of stylesheets.</p>","types":["string"],"variable":"$stylesheets"}]},"args":1},{"name":"teeny_mce_buttons","file":"wp-includes/class-wp-editor.php","type":"filter","doc":{"description":"Filters the list of teenyMCE buttons (Text tab).","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.7.0"},{"name":"since","content":"3.3.0","description":"<p>The <code>$editor_id</code> parameter was added.</p>"},{"name":"param","content":"<p>An array of teenyMCE buttons.</p>","types":["array"],"variable":"$mce_buttons"},{"name":"param","content":"<p>Unique editor identifier, e.g. 'content'.</p>","types":["string"],"variable":"$editor_id"}]},"args":2},{"name":"mce_buttons","file":"wp-includes/class-wp-editor.php","type":"filter","doc":{"description":"Filters the first-row list of TinyMCE buttons (Visual tab).","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.0.0"},{"name":"since","content":"3.3.0","description":"<p>The <code>$editor_id</code> parameter was added.</p>"},{"name":"param","content":"<p>First-row list of buttons.</p>","types":["array"],"variable":"$mce_buttons"},{"name":"param","content":"<p>Unique editor identifier, e.g. 'content'. Accepts 'classic-block' when called from block editor's Classic block.</p>","types":["string"],"variable":"$editor_id"}]},"args":2},{"name":"mce_buttons_2","file":"wp-includes/class-wp-editor.php","type":"filter","doc":{"description":"Filters the second-row list of TinyMCE buttons (Visual tab).","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.0.0"},{"name":"since","content":"3.3.0","description":"<p>The <code>$editor_id</code> parameter was added.</p>"},{"name":"param","content":"<p>Second-row list of buttons.</p>","types":["array"],"variable":"$mce_buttons_2"},{"name":"param","content":"<p>Unique editor identifier, e.g. 'content'. Accepts 'classic-block' when called from block editor's Classic block.</p>","types":["string"],"variable":"$editor_id"}]},"args":2},{"name":"mce_buttons_3","file":"wp-includes/class-wp-editor.php","type":"filter","doc":{"description":"Filters the third-row list of TinyMCE buttons (Visual tab).","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.0.0"},{"name":"since","content":"3.3.0","description":"<p>The <code>$editor_id</code> parameter was added.</p>"},{"name":"param","content":"<p>Third-row list of buttons.</p>","types":["array"],"variable":"$mce_buttons_3"},{"name":"param","content":"<p>Unique editor identifier, e.g. 'content'. Accepts 'classic-block' when called from block editor's Classic block.</p>","types":["string"],"variable":"$editor_id"}]},"args":2},{"name":"mce_buttons_4","file":"wp-includes/class-wp-editor.php","type":"filter","doc":{"description":"Filters the fourth-row list of TinyMCE buttons (Visual tab).","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.5.0"},{"name":"since","content":"3.3.0","description":"<p>The <code>$editor_id</code> parameter was added.</p>"},{"name":"param","content":"<p>Fourth-row list of buttons.</p>","types":["array"],"variable":"$mce_buttons_4"},{"name":"param","content":"<p>Unique editor identifier, e.g. 'content'. Accepts 'classic-block' when called from block editor's Classic block.</p>","types":["string"],"variable":"$editor_id"}]},"args":2},{"name":"teeny_mce_before_init","file":"wp-includes/class-wp-editor.php","type":"filter","doc":{"description":"Filters the teenyMCE config before init.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.7.0"},{"name":"since","content":"3.3.0","description":"<p>The <code>$editor_id</code> parameter was added.</p>"},{"name":"param","content":"<p>An array with teenyMCE config.</p>","types":["array"],"variable":"$mce_init"},{"name":"param","content":"<p>Unique editor identifier, e.g. 'content'.</p>","types":["string"],"variable":"$editor_id"}]},"args":2},{"name":"tiny_mce_before_init","file":"wp-includes/class-wp-editor.php","type":"filter","doc":{"description":"Filters the TinyMCE config before init.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.5.0"},{"name":"since","content":"3.3.0","description":"<p>The <code>$editor_id</code> parameter was added.</p>"},{"name":"param","content":"<p>An array with TinyMCE config.</p>","types":["array"],"variable":"$mce_init"},{"name":"param","content":"<p>Unique editor identifier, e.g. 'content'. Accepts 'classic-block' when called from block editor's Classic block.</p>","types":["string"],"variable":"$editor_id"}]},"args":2},{"name":"wp_mce_translation","file":"wp-includes/class-wp-editor.php","type":"filter","doc":{"description":"Filters translated strings prepared for TinyMCE.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.9.0"},{"name":"param","content":"<p>Key/value pairs of strings.</p>","types":["array"],"variable":"$mce_translation"},{"name":"param","content":"<p>Locale.</p>","types":["string"],"variable":"$mce_locale"}]},"args":2},{"name":"wp_link_query_args","file":"wp-includes/class-wp-editor.php","type":"filter","doc":{"description":"Filters the link query arguments.","long_description":"Allows modification of the link query arguments before querying.","long_description_html":"<p>Allows modification of the link query arguments before querying.</p>","tags":[{"name":"see","content":"<p>for a full list of arguments</p>","refers":"WP_Query"},{"name":"since","content":"3.7.0"},{"name":"param","content":"<p>An array of WP_Query arguments.</p>","types":["array"],"variable":"$query"}]},"args":1},{"name":"wp_link_query","file":"wp-includes/class-wp-editor.php","type":"filter","doc":{"description":"Filters the link query results.","long_description":"Allows modification of the returned link query results.","long_description_html":"<p>Allows modification of the returned link query results.</p>","tags":[{"name":"since","content":"3.7.0"},{"name":"see","content":""},{"name":"param","content":"<p>{ An array of associative arrays of query results.</p>","types":["array"],"variable":"$results"},{"name":"param","content":"<p>An array of WP_Query arguments.</p>","types":["array"],"variable":"$query"}]},"args":2},{"name":"get_network","file":"wp-includes/ms-network.php","type":"filter","doc":{"description":"Fires after a network is retrieved.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.6.0"},{"name":"param","content":"<p>Network data.</p>","types":["\\WP_Network"],"variable":"$_network"}]},"args":1},{"name":"customize_dynamic_partial_args","file":"wp-includes/customize/class-wp-customize-selective-refresh.php","type":"filter","doc":{"description":"Filters a dynamic partial's constructor arguments.","long_description":"For a dynamic partial to be registered, this filter must be employed to override the default false value with an array of args to pass to the WP_Customize_Partial constructor.","long_description_html":"<p>For a dynamic partial to be registered, this filter must be employed to override the default false value with an array of args to pass to the WP_Customize_Partial constructor.</p>","tags":[{"name":"since","content":"4.5.0"},{"name":"param","content":"<p>The arguments to the WP_Customize_Partial constructor.</p>","types":["false","array"],"variable":"$partial_args"},{"name":"param","content":"<p>ID for dynamic partial.</p>","types":["string"],"variable":"$partial_id"}]},"args":2},{"name":"customize_dynamic_partial_class","file":"wp-includes/customize/class-wp-customize-selective-refresh.php","type":"filter","doc":{"description":"Filters the class used to construct partials.","long_description":"Allow non-statically created partials to be constructed with custom WP_Customize_Partial subclass.","long_description_html":"<p>Allow non-statically created partials to be constructed with custom WP_Customize_Partial subclass.</p>","tags":[{"name":"since","content":"4.5.0"},{"name":"param","content":"<p>WP_Customize_Partial or a subclass.</p>","types":["string"],"variable":"$partial_class"},{"name":"param","content":"<p>ID for dynamic partial.</p>","types":["string"],"variable":"$partial_id"},{"name":"param","content":"<p>The arguments to the WP_Customize_Partial constructor.</p>","types":["array"],"variable":"$partial_args"}]},"args":3},{"name":"customize_render_partials_response","file":"wp-includes/customize/class-wp-customize-selective-refresh.php","type":"filter","doc":{"description":"Filters the response from rendering the partials.","long_description":"Plugins may use this filter to inject `$scripts` and `$styles`, which are dependencies for the partials being rendered. The response data will be available to the client via the `render-partials-response` JS event, so the client can then inject the scripts and styles into the DOM if they have not already been enqueued there.\n If plugins do this, they'll need to take care for any scripts that do `document.write()` and make sure that these are not injected, or else to override the function to no-op, or else the page will be destroyed.\n Plugins should be aware that `$scripts` and `$styles` may eventually be included by default in the response.","long_description_html":"<p>Plugins may use this filter to inject <code>$scripts</code> and <code>$styles</code>, which are dependencies for the partials being rendered. The response data will be available to the client via the <code>render-partials-response</code> JS event, so the client can then inject the scripts and styles into the DOM if they have not already been enqueued there.</p> <p>If plugins do this, they'll need to take care for any scripts that do <code>document.write()</code> and make sure that these are not injected, or else to override the function to no-op, or else the page will be destroyed.</p> <p>Plugins should be aware that <code>$scripts</code> and <code>$styles</code> may eventually be included by default in the response.</p>","tags":[{"name":"since","content":"4.5.0"},{"name":"param","content":"<p>{ Response.</p>","types":["array"],"variable":"$response"},{"name":"param","content":"<p>Selective refresh component.</p>","types":["\\WP_Customize_Selective_Refresh"],"variable":"$refresh"},{"name":"param","content":"<p>Placements' context data for the partials rendered in the request. The array is keyed by partial ID, with each item being an array of the placements' context data.</p>","types":["array"],"variable":"$partials"}]},"args":3},{"name":"customize_partial_render","file":"wp-includes/customize/class-wp-customize-partial.php","type":"filter","doc":{"description":"Filters partial rendering.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.5.0"},{"name":"param","content":"<p>The partial value. Default false.</p>","types":["string","array","false"],"variable":"$rendered"},{"name":"param","content":"<p>WP_Customize_Setting instance.</p>","types":["\\WP_Customize_Partial"],"variable":"$partial"},{"name":"param","content":"<p>Optional array of context data associated with the target container.</p>","types":["array"],"variable":"$container_context"}]},"args":3},{"name":"customize_partial_render_{$partial->id}","file":"wp-includes/customize/class-wp-customize-partial.php","type":"filter","doc":{"description":"Filters partial rendering for a specific partial.","long_description":"The dynamic portion of the hook name, `$partial->ID` refers to the partial ID.","long_description_html":"<p>The dynamic portion of the hook name, <code>$partial-&gt;ID</code> refers to the partial ID.</p>","tags":[{"name":"since","content":"4.5.0"},{"name":"param","content":"<p>The partial value. Default false.</p>","types":["string","array","false"],"variable":"$rendered"},{"name":"param","content":"<p>WP_Customize_Setting instance.</p>","types":["\\WP_Customize_Partial"],"variable":"$partial"},{"name":"param","content":"<p>Optional array of context data associated with the target container.</p>","types":["array"],"variable":"$container_context"}]},"args":3},{"name":"image_strip_meta","file":"wp-includes/class-wp-image-editor-imagick.php","type":"filter","doc":{"description":"Filters whether to strip metadata from images when they're resized.","long_description":"This filter only applies when resizing using the Imagick editor since GD always strips profiles by default.","long_description_html":"<p>This filter only applies when resizing using the Imagick editor since GD always strips profiles by default.</p>","tags":[{"name":"since","content":"4.5.0"},{"name":"param","content":"<p>Whether to strip image metadata during resizing. Default true.</p>","types":["bool"],"variable":"$strip_meta"}]},"args":1},{"name":"customize_nav_menu_available_items","file":"wp-includes/class-wp-customize-nav-menus.php","type":"filter","doc":{"description":"Filters the available menu items.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.3.0"},{"name":"param","content":"<p>The array of menu items.</p>","types":["array"],"variable":"$items"},{"name":"param","content":"<p>The object type.</p>","types":["string"],"variable":"$object_type"},{"name":"param","content":"<p>The object name.</p>","types":["string"],"variable":"$object_name"},{"name":"param","content":"<p>The current page number.</p>","types":["int"],"variable":"$page"}]},"args":4},{"name":"customize_nav_menu_searched_items","file":"wp-includes/class-wp-customize-nav-menus.php","type":"filter","doc":{"description":"Filters the available menu items during a search request.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.5.0"},{"name":"param","content":"<p>The array of menu items.</p>","types":["array"],"variable":"$items"},{"name":"param","content":"<p>Includes 'pagenum' and 's' (search) arguments.</p>","types":["array"],"variable":"$args"}]},"args":2},{"name":"customize_nav_menu_available_item_types","file":"wp-includes/class-wp-customize-nav-menus.php","type":"filter","doc":{"description":"Filters the available menu item types.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.3.0"},{"name":"since","content":"4.7.0","description":"<p>Each array item now includes a <code>$type_label</code> in addition to <code>$title</code>, <code>$type</code>, and <code>$object</code>.</p>"},{"name":"param","content":"<p>Navigation menu item types.</p>","types":["array"],"variable":"$item_types"}]},"args":1},{"name":"wp_sitemaps_stylesheet_url","file":"wp-includes/sitemaps/class-wp-sitemaps-renderer.php","type":"filter","doc":{"description":"Filters the URL for the sitemap stylesheet.","long_description":"If a falsey value is returned, no stylesheet will be used and the \"raw\" XML of the sitemap will be displayed.","long_description_html":"<p>If a falsey value is returned, no stylesheet will be used and the &quot;raw&quot; XML of the sitemap will be displayed.</p>","tags":[{"name":"since","content":"5.5.0"},{"name":"param","content":"<p>Full URL for the sitemaps XSL file.</p>","types":["string"],"variable":"$sitemap_url"}]},"args":1},{"name":"wp_sitemaps_stylesheet_index_url","file":"wp-includes/sitemaps/class-wp-sitemaps-renderer.php","type":"filter","doc":{"description":"Filters the URL for the sitemap index stylesheet.","long_description":"If a falsey value is returned, no stylesheet will be used and the \"raw\" XML of the sitemap index will be displayed.","long_description_html":"<p>If a falsey value is returned, no stylesheet will be used and the &quot;raw&quot; XML of the sitemap index will be displayed.</p>","tags":[{"name":"since","content":"5.5.0"},{"name":"param","content":"<p>Full URL for the sitemaps index XSL file.</p>","types":["string"],"variable":"$sitemap_url"}]},"args":1},{"name":"wp_sitemaps_index_entry","file":"wp-includes/sitemaps/class-wp-sitemaps-provider.php","type":"filter","doc":{"description":"Filters the sitemap entry for the sitemap index.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.5.0"},{"name":"param","content":"<p>Sitemap entry for the post.</p>","types":["array"],"variable":"$sitemap_entry"},{"name":"param","content":"<p>Object empty name.</p>","types":["string"],"variable":"$object_type"},{"name":"param","content":"<p>Object subtype name. Empty string if the object type does not support subtypes.</p>","types":["string"],"variable":"$object_subtype"},{"name":"param","content":"<p>Page number of results.</p>","types":["int"],"variable":"$page"}]},"args":4},{"name":"wp_sitemaps_enabled","file":"wp-includes/sitemaps/class-wp-sitemaps.php","type":"filter","doc":{"description":"Filters whether XML Sitemaps are enabled or not.","long_description":"When XML Sitemaps are disabled via this filter, rewrite rules are still in place to ensure a 404 is returned.","long_description_html":"<p>When XML Sitemaps are disabled via this filter, rewrite rules are still in place to ensure a 404 is returned.</p>","tags":[{"name":"see","content":"","refers":"WP_Sitemaps::register_rewrites()"},{"name":"since","content":"5.5.0"},{"name":"param","content":"<p>Whether XML Sitemaps are enabled or not. Defaults to true for public sites.</p>","types":["bool"],"variable":"$is_enabled"}]},"args":1},{"name":"wp_sitemaps_stylesheet_content","file":"wp-includes/sitemaps/class-wp-sitemaps-stylesheet.php","type":"filter","doc":{"description":"Filters the content of the sitemap stylesheet.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.5.0"},{"name":"param","content":"<p>Full content for the XML stylesheet.</p>","types":["string"],"variable":"$xsl_content"}]},"args":1},{"name":"wp_sitemaps_stylesheet_index_content","file":"wp-includes/sitemaps/class-wp-sitemaps-stylesheet.php","type":"filter","doc":{"description":"Filters the content of the sitemap index stylesheet.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.5.0"},{"name":"param","content":"<p>Full content for the XML stylesheet.</p>","types":["string"],"variable":"$xsl_content"}]},"args":1},{"name":"wp_sitemaps_stylesheet_css","file":"wp-includes/sitemaps/class-wp-sitemaps-stylesheet.php","type":"filter","doc":{"description":"Filters the CSS only for the sitemap stylesheet.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.5.0"},{"name":"param","content":"<p>CSS to be applied to default XSL file.</p>","types":["string"],"variable":"$css"}]},"args":1},{"name":"wp_sitemaps_users_pre_url_list","file":"wp-includes/sitemaps/providers/class-wp-sitemaps-users.php","type":"filter","doc":{"description":"Filters the users URL list before it is generated.","long_description":"Returning a non-null value will effectively short-circuit the generation, returning that value instead.","long_description_html":"<p>Returning a non-null value will effectively short-circuit the generation, returning that value instead.</p>","tags":[{"name":"since","content":"5.5.0"},{"name":"param","content":"<p>The URL list. Default null.</p>","types":["array[]","null"],"variable":"$url_list"},{"name":"param","content":"<p>Page of results.</p>","types":["int"],"variable":"$page_num"}]},"args":2},{"name":"wp_sitemaps_users_entry","file":"wp-includes/sitemaps/providers/class-wp-sitemaps-users.php","type":"filter","doc":{"description":"Filters the sitemap entry for an individual user.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.5.0"},{"name":"param","content":"<p>Sitemap entry for the user.</p>","types":["array"],"variable":"$sitemap_entry"},{"name":"param","content":"<p>User object.</p>","types":["\\WP_User"],"variable":"$user"}]},"args":2},{"name":"wp_sitemaps_users_pre_max_num_pages","file":"wp-includes/sitemaps/providers/class-wp-sitemaps-users.php","type":"filter","doc":{"description":"Filters the max number of pages for a user sitemap before it is generated.","long_description":"Returning a non-null value will effectively short-circuit the generation, returning that value instead.","long_description_html":"<p>Returning a non-null value will effectively short-circuit the generation, returning that value instead.</p>","tags":[{"name":"since","content":"5.5.0"},{"name":"param","content":"<p>The maximum number of pages. Default null.</p>","types":["int","null"],"variable":"$max_num_pages"}]},"args":1},{"name":"wp_sitemaps_users_query_args","file":"wp-includes/sitemaps/providers/class-wp-sitemaps-users.php","type":"filter","doc":{"description":"Filters the query arguments for authors with public posts.","long_description":"Allows modification of the authors query arguments before querying.","long_description_html":"<p>Allows modification of the authors query arguments before querying.</p>","tags":[{"name":"see","content":"<p>for a full list of arguments</p>","refers":"WP_User_Query"},{"name":"since","content":"5.5.0"},{"name":"param","content":"<p>Array of WP_User_Query arguments.</p>","types":["array"],"variable":"$args"}]},"args":1},{"name":"wp_sitemaps_post_types","file":"wp-includes/sitemaps/providers/class-wp-sitemaps-posts.php","type":"filter","doc":{"description":"Filters the list of post object sub types available within the sitemap.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.5.0"},{"name":"param","content":"<p>Array of registered post type objects keyed by their name.</p>","types":["\\WP_Post_Type[]"],"variable":"$post_types"}]},"args":1},{"name":"wp_sitemaps_posts_pre_url_list","file":"wp-includes/sitemaps/providers/class-wp-sitemaps-posts.php","type":"filter","doc":{"description":"Filters the posts URL list before it is generated.","long_description":"Returning a non-null value will effectively short-circuit the generation, returning that value instead.","long_description_html":"<p>Returning a non-null value will effectively short-circuit the generation, returning that value instead.</p>","tags":[{"name":"since","content":"5.5.0"},{"name":"param","content":"<p>The URL list. Default null.</p>","types":["array[]","null"],"variable":"$url_list"},{"name":"param","content":"<p>Post type name.</p>","types":["string"],"variable":"$post_type"},{"name":"param","content":"<p>Page of results.</p>","types":["int"],"variable":"$page_num"}]},"args":3},{"name":"wp_sitemaps_posts_show_on_front_entry","file":"wp-includes/sitemaps/providers/class-wp-sitemaps-posts.php","type":"filter","doc":{"description":"Filters the sitemap entry for the home page when the 'show_on_front' option equals 'posts'.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.5.0"},{"name":"param","content":"<p>Sitemap entry for the home page.</p>","types":["array"],"variable":"$sitemap_entry"}]},"args":1},{"name":"wp_sitemaps_posts_entry","file":"wp-includes/sitemaps/providers/class-wp-sitemaps-posts.php","type":"filter","doc":{"description":"Filters the sitemap entry for an individual post.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.5.0"},{"name":"param","content":"<p>Sitemap entry for the post.</p>","types":["array"],"variable":"$sitemap_entry"},{"name":"param","content":"<p>Post object.</p>","types":["\\WP_Post"],"variable":"$post"},{"name":"param","content":"<p>Name of the post_type.</p>","types":["string"],"variable":"$post_type"}]},"args":3},{"name":"wp_sitemaps_posts_pre_max_num_pages","file":"wp-includes/sitemaps/providers/class-wp-sitemaps-posts.php","type":"filter","doc":{"description":"Filters the max number of pages before it is generated.","long_description":"Passing a non-null value will short-circuit the generation, returning that value instead.","long_description_html":"<p>Passing a non-null value will short-circuit the generation, returning that value instead.</p>","tags":[{"name":"since","content":"5.5.0"},{"name":"param","content":"<p>The maximum number of pages. Default null.</p>","types":["int","null"],"variable":"$max_num_pages"},{"name":"param","content":"<p>Post type name.</p>","types":["string"],"variable":"$post_type"}]},"args":2},{"name":"wp_sitemaps_posts_query_args","file":"wp-includes/sitemaps/providers/class-wp-sitemaps-posts.php","type":"filter","doc":{"description":"Filters the query arguments for post type sitemap queries.","long_description":"","long_description_html":"","tags":[{"name":"see","content":"<p>for a full list of arguments.</p>","refers":"WP_Query"},{"name":"since","content":"5.5.0"},{"name":"since","content":"6.1.0","description":"<p>Added <code>ignore_sticky_posts</code> default parameter.</p>"},{"name":"param","content":"<p>Array of WP_Query arguments.</p>","types":["array"],"variable":"$args"},{"name":"param","content":"<p>Post type name.</p>","types":["string"],"variable":"$post_type"}]},"args":2},{"name":"wp_sitemaps_taxonomies","file":"wp-includes/sitemaps/providers/class-wp-sitemaps-taxonomies.php","type":"filter","doc":{"description":"Filters the list of taxonomy object subtypes available within the sitemap.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.5.0"},{"name":"param","content":"<p>Array of registered taxonomy objects keyed by their name.</p>","types":["\\WP_Taxonomy[]"],"variable":"$taxonomies"}]},"args":1},{"name":"wp_sitemaps_taxonomies_pre_url_list","file":"wp-includes/sitemaps/providers/class-wp-sitemaps-taxonomies.php","type":"filter","doc":{"description":"Filters the taxonomies URL list before it is generated.","long_description":"Returning a non-null value will effectively short-circuit the generation, returning that value instead.","long_description_html":"<p>Returning a non-null value will effectively short-circuit the generation, returning that value instead.</p>","tags":[{"name":"since","content":"5.5.0"},{"name":"param","content":"<p>The URL list. Default null.</p>","types":["array[]","null"],"variable":"$url_list"},{"name":"param","content":"<p>Taxonomy name.</p>","types":["string"],"variable":"$taxonomy"},{"name":"param","content":"<p>Page of results.</p>","types":["int"],"variable":"$page_num"}]},"args":3},{"name":"wp_sitemaps_taxonomies_entry","file":"wp-includes/sitemaps/providers/class-wp-sitemaps-taxonomies.php","type":"filter","doc":{"description":"Filters the sitemap entry for an individual term.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.5.0"},{"name":"since","content":"6.0.0","description":"<p>Added <code>$term</code> argument containing the term object.</p>"},{"name":"param","content":"<p>Sitemap entry for the term.</p>","types":["array"],"variable":"$sitemap_entry"},{"name":"param","content":"<p>Term ID.</p>","types":["int"],"variable":"$term_id"},{"name":"param","content":"<p>Taxonomy name.</p>","types":["string"],"variable":"$taxonomy"},{"name":"param","content":"<p>Term object.</p>","types":["\\WP_Term"],"variable":"$term"}]},"args":4},{"name":"wp_sitemaps_taxonomies_pre_max_num_pages","file":"wp-includes/sitemaps/providers/class-wp-sitemaps-taxonomies.php","type":"filter","doc":{"description":"Filters the max number of pages for a taxonomy sitemap before it is generated.","long_description":"Passing a non-null value will short-circuit the generation, returning that value instead.","long_description_html":"<p>Passing a non-null value will short-circuit the generation, returning that value instead.</p>","tags":[{"name":"since","content":"5.5.0"},{"name":"param","content":"<p>The maximum number of pages. Default null.</p>","types":["int","null"],"variable":"$max_num_pages"},{"name":"param","content":"<p>Taxonomy name.</p>","types":["string"],"variable":"$taxonomy"}]},"args":2},{"name":"wp_sitemaps_taxonomies_query_args","file":"wp-includes/sitemaps/providers/class-wp-sitemaps-taxonomies.php","type":"filter","doc":{"description":"Filters the taxonomy terms query arguments.","long_description":"Allows modification of the taxonomy query arguments before querying.","long_description_html":"<p>Allows modification of the taxonomy query arguments before querying.</p>","tags":[{"name":"see","content":"<p>for a full list of arguments</p>","refers":"WP_Term_Query"},{"name":"since","content":"5.5.0"},{"name":"param","content":"<p>Array of WP_Term_Query arguments.</p>","types":["array"],"variable":"$args"},{"name":"param","content":"<p>Taxonomy name.</p>","types":["string"],"variable":"$taxonomy"}]},"args":2},{"name":"wp_sitemaps_add_provider","file":"wp-includes/sitemaps/class-wp-sitemaps-registry.php","type":"filter","doc":{"description":"Filters the sitemap provider before it is added.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.5.0"},{"name":"param","content":"<p>Instance of a WP_Sitemaps_Provider.</p>","types":["\\WP_Sitemaps_Provider"],"variable":"$provider"},{"name":"param","content":"<p>Name of the sitemap provider.</p>","types":["string"],"variable":"$name"}]},"args":2},{"name":"wp_http_ixr_client_headers","file":"wp-includes/class-wp-http-ixr-client.php","type":"filter","doc":{"description":"Filters the headers collection to be sent to the XML-RPC server.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.4.0"},{"name":"param","content":"<p>Associative array of headers to be sent.</p>","types":["string[]"],"variable":"$headers"}]},"args":1},{"name":"http_origin","file":"wp-includes/http.php","type":"filter","doc":{"description":"Changes the origin of an HTTP request.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.4.0"},{"name":"param","content":"<p>The original origin for the request.</p>","types":["string"],"variable":"$origin"}]},"args":1},{"name":"allowed_http_origins","file":"wp-includes/http.php","type":"filter","doc":{"description":"Changes the origin types allowed for HTTP requests.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.4.0"},{"name":"param","content":"<p>{ Array of default allowed HTTP origins.</p>","types":["string[]"],"variable":"$allowed_origins"}]},"args":1},{"name":"allowed_http_origin","file":"wp-includes/http.php","type":"filter","doc":{"description":"Changes the allowed HTTP origin result.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.4.0"},{"name":"param","content":"<p>Origin URL if allowed, empty string if not.</p>","types":["string"],"variable":"$origin"},{"name":"param","content":"<p>Original origin string passed into is_allowed_http_origin function.</p>","types":["string"],"variable":"$origin_arg"}]},"args":2},{"name":"http_request_host_is_external","file":"wp-includes/http.php","type":"filter","doc":{"description":"Checks if HTTP request is external or not.","long_description":"Allows to change and allow external requests for the HTTP request.","long_description_html":"<p>Allows to change and allow external requests for the HTTP request.</p>","tags":[{"name":"since","content":"3.6.0"},{"name":"param","content":"<p>Whether HTTP request is external or not.</p>","types":["bool"],"variable":"$external"},{"name":"param","content":"<p>Host name of the requested URL.</p>","types":["string"],"variable":"$host"},{"name":"param","content":"<p>Requested URL.</p>","types":["string"],"variable":"$url"}]},"args":3},{"name":"http_allowed_safe_ports","file":"wp-includes/http.php","type":"filter","doc":{"description":"Controls the list of ports considered safe in HTTP API.","long_description":"Allows to change and allow external requests for the HTTP request.","long_description_html":"<p>Allows to change and allow external requests for the HTTP request.</p>","tags":[{"name":"since","content":"5.9.0"},{"name":"param","content":"<p>Array of integers for valid ports.</p>","types":["int[]"],"variable":"$allowed_ports"},{"name":"param","content":"<p>Host name of the requested URL.</p>","types":["string"],"variable":"$host"},{"name":"param","content":"<p>Requested URL.</p>","types":["string"],"variable":"$url"}]},"args":3},{"name":"xmlrpc_element_limit","file":"wp-includes/IXR/class-IXR-message.php","type":"filter","doc":{"description":"Filters the number of elements to parse in an XML-RPC response.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.0.0"},{"name":"param","content":"<p>Default elements limit.</p>","types":["int"],"variable":"$element_limit"}]},"args":1},{"name":"xmlrpc_chunk_parsing_size","file":"wp-includes/IXR/class-IXR-message.php","type":"filter","doc":{"description":"Filters the chunk size that can be used to parse an XML-RPC response message.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.4.0"},{"name":"param","content":"<p>Chunk size to parse in bytes.</p>","types":["int"],"variable":"$chunk_size"}]},"args":1},{"name":"link_category","file":"wp-includes/bookmark-template.php","type":"filter","doc":{"description":"Filters the category name.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.2.0"},{"name":"param","content":"<p>The category name.</p>","types":["string"],"variable":"$cat_name"}]},"args":1},{"name":"wp_list_bookmarks","file":"wp-includes/bookmark-template.php","type":"filter","doc":{"description":"Filters the bookmarks list before it is echoed or returned.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.5.0"},{"name":"param","content":"<p>The HTML list of bookmarks.</p>","types":["string"],"variable":"$html"}]},"args":1},{"name":"script_module_loader_src","file":"wp-includes/class-wp-script-modules.php","type":"filter","doc":{"description":"Filters the script module source.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"6.5.0"},{"name":"param","content":"<p>Module source URL.</p>","types":["string"],"variable":"$src"},{"name":"param","content":"<p>Module identifier.</p>","types":["string"],"variable":"$id"}]},"args":2},{"name":"script_module_data_{$module_id}","file":"wp-includes/class-wp-script-modules.php","type":"filter","doc":{"description":"Filters data associated with a given Script Module.","long_description":"Script Modules may require data that is required for initialization or is essential to have immediately available on page load. These are suitable use cases for this data.\n The dynamic portion of the hook name, `$module_id`, refers to the Script Module ID that the data is associated with.\n This is best suited to pass essential data that must be available to the module for initialization or immediately on page load. It does not replace the REST API or fetching data from the client.","long_description_html":"<p>Script Modules may require data that is required for initialization or is essential to have immediately available on page load. These are suitable use cases for this data.</p> <p>The dynamic portion of the hook name, <code>$module_id</code>, refers to the Script Module ID that the data is associated with.</p> <p>This is best suited to pass essential data that must be available to the module for initialization or immediately on page load. It does not replace the REST API or fetching data from the client.</p>","tags":[{"name":"example","content":"add_filter( 'script_module_data_MyScriptModuleID', function ( array $data ): array { $data['script-needs-this-data'] = 'ok'; return $data; } ); If the filter returns no data (an empty array), nothing will be embedded in the page. The data for a given Script Module, if provided, will be JSON serialized in a script tag with an ID of the form `wp-script-module-data-{$module_id}`. The data can be read on the client with a pattern like this:"},{"name":"example","content":"const dataContainer = document.getElementById( 'wp-script-module-data-MyScriptModuleID' ); let data = }; if ( dataContainer ) { try { data = JSON.parse( dataContainer.textContent ); } catch } } initMyScriptModuleWithData( data );"},{"name":"since","content":"6.7.0"},{"name":"param","content":"<p>The data associated with the Script Module.</p>","types":["array"],"variable":"$data"}]},"args":1},{"name":"wp_kses_allowed_html","file":"wp-includes/kses.php","type":"filter","doc":{"description":"Filters the HTML tags that are allowed for a given context.","long_description":"HTML tags and attribute names are case-insensitive in HTML but must be added to the KSES allow list in lowercase. An item added to the allow list in upper or mixed case will not recognized as permitted by KSES.","long_description_html":"<p>HTML tags and attribute names are case-insensitive in HTML but must be added to the KSES allow list in lowercase. An item added to the allow list in upper or mixed case will not recognized as permitted by KSES.</p>","tags":[{"name":"since","content":"3.5.0"},{"name":"param","content":"<p>Allowed HTML tags.</p>","types":["array[]"],"variable":"$html"},{"name":"param","content":"<p>Context name.</p>","types":["string"],"variable":"$context"}]},"args":2},{"name":"pre_kses","file":"wp-includes/kses.php","type":"filter","doc":{"description":"Filters content to be run through KSES.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.3.0"},{"name":"param","content":"<p>Content to filter through KSES.</p>","types":["string"],"variable":"$content"},{"name":"param","content":"<p>An array of allowed HTML elements and attributes, or a context name such as 'post'. See wp_kses_allowed_html() for the list of accepted context names.</p>","types":["array[]","string"],"variable":"$allowed_html"},{"name":"param","content":"<p>Array of allowed URL protocols.</p>","types":["string[]"],"variable":"$allowed_protocols"}]},"args":3},{"name":"wp_kses_uri_attributes","file":"wp-includes/kses.php","type":"filter","doc":{"description":"Filters the list of attributes that are required to contain a URL.","long_description":"Use this filter to add any `data-` attributes that are required to be validated as a URL.","long_description_html":"<p>Use this filter to add any <code>data-</code> attributes that are required to be validated as a URL.</p>","tags":[{"name":"since","content":"5.0.1"},{"name":"param","content":"<p>HTML attribute names whose value contains a URL.</p>","types":["string[]"],"variable":"$uri_attributes"}]},"args":1},{"name":"safe_style_css","file":"wp-includes/kses.php","type":"filter","doc":{"description":"Filters the list of allowed CSS attributes.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.8.1"},{"name":"param","content":"<p>Array of allowed CSS attributes.</p>","types":["string[]"],"variable":"$attr"}]},"args":1},{"name":"safecss_filter_attr_allow_css","file":"wp-includes/kses.php","type":"filter","doc":{"description":"Filters the check for unsafe CSS in `safecss_filter_attr`.","long_description":"Enables developers to determine whether a section of CSS should be allowed or discarded. By default, the value will be false if the part contains \\ ( & } = or comments. Return true to allow the CSS part to be included in the output.","long_description_html":"<p>Enables developers to determine whether a section of CSS should be allowed or discarded. By default, the value will be false if the part contains \\ ( &amp; } = or comments. Return true to allow the CSS part to be included in the output.</p>","tags":[{"name":"since","content":"5.5.0"},{"name":"param","content":"<p>Whether the CSS in the test string is considered safe.</p>","types":["bool"],"variable":"$allow_css"},{"name":"param","content":"<p>The CSS string to test.</p>","types":["string"],"variable":"$css_test_string"}]},"args":2},{"name":"get_the_categories","file":"wp-includes/category-template.php","type":"filter","doc":{"description":"Filters the array of categories to return for a post.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.1.0"},{"name":"since","content":"4.4.0","description":"<p>Added the <code>$post_id</code> parameter.</p>"},{"name":"param","content":"<p>An array of categories to return for the post.</p>","types":["\\WP_Term[]"],"variable":"$categories"},{"name":"param","content":"<p>The post ID.</p>","types":["int","false"],"variable":"$post_id"}]},"args":2},{"name":"the_category_list","file":"wp-includes/category-template.php","type":"filter","doc":{"description":"Filters the categories before building the category list.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.4.0"},{"name":"param","content":"<p>An array of the post's categories.</p>","types":["\\WP_Term[]"],"variable":"$categories"},{"name":"param","content":"<p>ID of the post to retrieve categories for. When <code>false</code>, defaults to the current post in the loop.</p>","types":["int","false"],"variable":"$post_id"}]},"args":2},{"name":"the_category","file":"wp-includes/category-template.php","type":"filter","doc":{"description":"Filters the category or list of categories.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"1.2.0"},{"name":"param","content":"<p>List of categories for the current post.</p>","types":["string"],"variable":"$thelist"},{"name":"param","content":"<p>Separator used between the categories.</p>","types":["string"],"variable":"$separator"},{"name":"param","content":"<p>How to display the category parents. Accepts 'multiple', 'single', or empty.</p>","types":["string"],"variable":"$parents"}]},"args":3},{"name":"list_cats","file":"wp-includes/category-template.php","type":"filter","doc":{"description":"Filters a taxonomy drop-down display element.","long_description":"A variety of taxonomy drop-down display elements can be modified just prior to display via this filter. Filterable arguments include 'show_option_none', 'show_option_all', and various forms of the term name.","long_description_html":"<p>A variety of taxonomy drop-down display elements can be modified just prior to display via this filter. Filterable arguments include 'show_option_none', 'show_option_all', and various forms of the term name.</p>","tags":[{"name":"since","content":"1.2.0"},{"name":"see","content":"","refers":"wp_dropdown_categories()"},{"name":"param","content":"<p>Category name.</p>","types":["string"],"variable":"$element"},{"name":"param","content":"<p>The category object, or null if there's no corresponding category.</p>","types":["\\WP_Term","null"],"variable":"$category"}]},"args":2},{"name":"wp_dropdown_cats","file":"wp-includes/category-template.php","type":"filter","doc":{"description":"Filters the taxonomy drop-down output.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.1.0"},{"name":"param","content":"<p>HTML output.</p>","types":["string"],"variable":"$output"},{"name":"param","content":"<p>Arguments used to build the drop-down.</p>","types":["array"],"variable":"$parsed_args"}]},"args":2},{"name":"wp_list_categories","file":"wp-includes/category-template.php","type":"filter","doc":{"description":"Filters the HTML output of a taxonomy list.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.1.0"},{"name":"param","content":"<p>HTML output.</p>","types":["string"],"variable":"$output"},{"name":"param","content":"<p>An array or query string of taxonomy-listing arguments. See wp_list_categories() for information on accepted arguments.</p>","types":["array","string"],"variable":"$args"}]},"args":2},{"name":"wp_tag_cloud","file":"wp-includes/category-template.php","type":"filter","doc":{"description":"Filters the tag cloud output.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.3.0"},{"name":"param","content":"<p>Tag cloud as a string or an array, depending on 'format' argument.</p>","types":["string","string[]"],"variable":"$return"},{"name":"param","content":"<p>An array of tag cloud arguments. See wp_tag_cloud() for information on accepted arguments.</p>","types":["array"],"variable":"$args"}]},"args":2},{"name":"tag_cloud_sort","file":"wp-includes/category-template.php","type":"filter","doc":{"description":"Filters how the items in a tag cloud are sorted.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.8.0"},{"name":"param","content":"<p>Ordered array of terms.</p>","types":["\\WP_Term[]"],"variable":"$tags"},{"name":"param","content":"<p>An array of tag cloud arguments.</p>","types":["array"],"variable":"$args"}]},"args":2},{"name":"wp_generate_tag_cloud_data","file":"wp-includes/category-template.php","type":"filter","doc":{"description":"Filters the data used to generate the tag cloud.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.3.0"},{"name":"param","content":"<p>An array of term data arrays for terms used to generate the tag cloud.</p>","types":["array[]"],"variable":"$tags_data"}]},"args":1},{"name":"wp_generate_tag_cloud","file":"wp-includes/category-template.php","type":"filter","doc":{"description":"Filters the generated output of a tag cloud.","long_description":"The filter is only evaluated if a true value is passed to the $filter argument in wp_generate_tag_cloud().","long_description_html":"<p>The filter is only evaluated if a true value is passed to the $filter argument in wp_generate_tag_cloud().</p>","tags":[{"name":"since","content":"2.3.0"},{"name":"see","content":"","refers":"wp_generate_tag_cloud()"},{"name":"param","content":"<p>String containing the generated HTML tag cloud output or an array of tag links if the 'format' argument equals 'array'.</p>","types":["string[]","string"],"variable":"$return"},{"name":"param","content":"<p>An array of terms used in the tag cloud.</p>","types":["\\WP_Term[]"],"variable":"$tags"},{"name":"param","content":"<p>An array of wp_generate_tag_cloud() arguments.</p>","types":["array"],"variable":"$args"}]},"args":3},{"name":"get_the_tags","file":"wp-includes/category-template.php","type":"filter","doc":{"description":"Filters the array of tags for the given post.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.3.0"},{"name":"see","content":"","refers":"get_the_terms()"},{"name":"param","content":"<p>Array of WP_Term objects on success, false if there are no terms or the post does not exist, WP_Error on failure.</p>","types":["\\WP_Term[]","false","\\WP_Error"],"variable":"$terms"}]},"args":1},{"name":"the_tags","file":"wp-includes/category-template.php","type":"filter","doc":{"description":"Filters the tags list for a given post.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.3.0"},{"name":"param","content":"<p>List of tags.</p>","types":["string"],"variable":"$tag_list"},{"name":"param","content":"<p>String to use before the tags.</p>","types":["string"],"variable":"$before"},{"name":"param","content":"<p>String to use between the tags.</p>","types":["string"],"variable":"$sep"},{"name":"param","content":"<p>String to use after the tags.</p>","types":["string"],"variable":"$after"},{"name":"param","content":"<p>Post ID.</p>","types":["int"],"variable":"$post_id"}]},"args":5},{"name":"get_the_terms","file":"wp-includes/category-template.php","type":"filter","doc":{"description":"Filters the list of terms attached to the given post.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.1.0"},{"name":"param","content":"<p>Array of attached terms, or WP_Error on failure.</p>","types":["\\WP_Term[]","\\WP_Error"],"variable":"$terms"},{"name":"param","content":"<p>Post ID.</p>","types":["int"],"variable":"$post_id"},{"name":"param","content":"<p>Name of the taxonomy.</p>","types":["string"],"variable":"$taxonomy"}]},"args":3},{"name":"term_links-{$taxonomy}","aliases":["term_links-category","term_links-post_format","term_links-post_tag"],"file":"wp-includes/category-template.php","type":"filter","doc":{"description":"Filters the term links for a given taxonomy.","long_description":"The dynamic portion of the hook name, `$taxonomy`, refers to the taxonomy slug.\n Possible hook names include:\n\n  - `term_links-category`\n  - `term_links-post_tag`\n  - `term_links-post_format`","long_description_html":"<p>The dynamic portion of the hook name, <code>$taxonomy</code>, refers to the taxonomy slug.</p> <p>Possible hook names include:</p> <ul> <li><code>term_links-category</code></li> <li><code>term_links-post_tag</code></li> <li><code>term_links-post_format</code></li> </ul>","tags":[{"name":"since","content":"2.5.0"},{"name":"param","content":"<p>An array of term links.</p>","types":["string[]"],"variable":"$links"}]},"args":1},{"name":"the_terms","file":"wp-includes/category-template.php","type":"filter","doc":{"description":"Filters the list of terms to display.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.9.0"},{"name":"param","content":"<p>List of terms to display.</p>","types":["string"],"variable":"$term_list"},{"name":"param","content":"<p>The taxonomy name.</p>","types":["string"],"variable":"$taxonomy"},{"name":"param","content":"<p>String to use before the terms.</p>","types":["string"],"variable":"$before"},{"name":"param","content":"<p>String to use between the terms.</p>","types":["string"],"variable":"$sep"},{"name":"param","content":"<p>String to use after the terms.</p>","types":["string"],"variable":"$after"}]},"args":5},{"name":"oembed_providers","file":"wp-includes/class-wp-oembed.php","type":"filter","doc":{"description":"Filters the list of sanctioned oEmbed providers.","long_description":"Since WordPress 4.4, oEmbed discovery is enabled for all users and allows embedding of sanitized iframes. The providers in this list are sanctioned, meaning they are trusted and allowed to embed any content, such as iframes, videos, JavaScript, and arbitrary HTML.\n Supported providers:\n |   Provider   |                     Flavor                |  Since  | | ------------ | ----------------------------------------- | ------- | | Dailymotion  | dailymotion.com                           | 2.9.0   | | Flickr       | flickr.com                                | 2.9.0   | | Scribd       | scribd.com                                | 2.9.0   | | Vimeo        | vimeo.com                                 | 2.9.0   | | WordPress.tv | wordpress.tv                              | 2.9.0   | | YouTube      | youtube.com/watch                         | 2.9.0   | | Crowdsignal  | polldaddy.com                             | 3.0.0   | | SmugMug      | smugmug.com                               | 3.0.0   | | YouTube      | youtu.be                                  | 3.0.0   | | Twitter      | twitter.com                               | 3.4.0   | | SoundCloud   | soundcloud.com                            | 3.5.0   | | Dailymotion  | dai.ly                                    | 3.6.0   | | Flickr       | flic.kr                                   | 3.6.0   | | Spotify      | spotify.com                               | 3.6.0   | | Imgur        | imgur.com                                 | 3.9.0   | | Animoto      | animoto.com                               | 4.0.0   | | Animoto      | video214.com                              | 4.0.0   | | Issuu        | issuu.com                                 | 4.0.0   | | Mixcloud     | mixcloud.com                              | 4.0.0   | | Crowdsignal  | poll.fm                                   | 4.0.0   | | TED          | ted.com                                   | 4.0.0   | | YouTube      | youtube.com/playlist                      | 4.0.0   | | Tumblr       | tumblr.com                                | 4.2.0   | | Kickstarter  | kickstarter.com                           | 4.2.0   | | Kickstarter  | kck.st                                    | 4.2.0   | | Cloudup      | cloudup.com                               | 4.3.0   | | ReverbNation | reverbnation.com                          | 4.4.0   | | VideoPress   | videopress.com                            | 4.4.0   | | Reddit       | reddit.com                                | 4.4.0   | | Speaker Deck | speakerdeck.com                           | 4.4.0   | | Twitter      | twitter.com/timelines                     | 4.5.0   | | Twitter      | twitter.com/moments                       | 4.5.0   | | Twitter      | twitter.com/user                          | 4.7.0   | | Twitter      | twitter.com/likes                         | 4.7.0   | | Twitter      | twitter.com/lists                         | 4.7.0   | | Screencast   | screencast.com                            | 4.8.0   | | Amazon       | amazon.com (com.mx, com.br, ca)           | 4.9.0   | | Amazon       | amazon.de (fr, it, es, in, nl, ru, co.uk) | 4.9.0   | | Amazon       | amazon.co.jp (com.au)                     | 4.9.0   | | Amazon       | amazon.cn                                 | 4.9.0   | | Amazon       | a.co                                      | 4.9.0   | | Amazon       | amzn.to (eu, in, asia)                    | 4.9.0   | | Amazon       | z.cn                                      | 4.9.0   | | Someecards   | someecards.com                            | 4.9.0   | | Someecards   | some.ly                                   | 4.9.0   | | Crowdsignal  | survey.fm                                 | 5.1.0   | | TikTok       | tiktok.com                                | 5.4.0   | | Pinterest    | pinterest.com                             | 5.9.0   | | WolframCloud | wolframcloud.com                          | 5.9.0   | | Pocket Casts | pocketcasts.com                           | 6.1.0   | | Crowdsignal  | crowdsignal.net                           | 6.2.0   | | Anghami      | anghami.com                               | 6.3.0   | | Bluesky      | bsky.app                                  | 6.6.0   |\n No longer supported providers:\n |   Provider   |        Flavor        |   Since   |  Removed  | | ------------ | -------------------- | --------- | --------- | | Qik          | qik.com              | 2.9.0     | 3.9.0     | | Viddler      | viddler.com          | 2.9.0     | 4.0.0     | | Revision3    | revision3.com        | 2.9.0     | 4.2.0     | | Blip         | blip.tv              | 2.9.0     | 4.4.0     | | Rdio         | rdio.com             | 3.6.0     | 4.4.1     | | Rdio         | rd.io                | 3.6.0     | 4.4.1     | | Vine         | vine.co              | 4.1.0     | 4.9.0     | | Photobucket  | photobucket.com      | 2.9.0     | 5.1.0     | | Funny or Die | funnyordie.com       | 3.0.0     | 5.1.0     | | CollegeHumor | collegehumor.com     | 4.0.0     | 5.3.1     | | Hulu         | hulu.com             | 2.9.0     | 5.5.0     | | Instagram    | instagram.com        | 3.5.0     | 5.5.2     | | Instagram    | instagr.am           | 3.5.0     | 5.5.2     | | Instagram TV | instagram.com        | 5.1.0     | 5.5.2     | | Instagram TV | instagr.am           | 5.1.0     | 5.5.2     | | Facebook     | facebook.com         | 4.7.0     | 5.5.2     | | Meetup.com   | meetup.com           | 3.9.0     | 6.0.1     | | Meetup.com   | meetu.ps             | 3.9.0     | 6.0.1     | | SlideShare   | slideshare.net       | 3.5.0     | 6.6.0     |","long_description_html":"<p>Since WordPress 4.4, oEmbed discovery is enabled for all users and allows embedding of sanitized iframes. The providers in this list are sanctioned, meaning they are trusted and allowed to embed any content, such as iframes, videos, JavaScript, and arbitrary HTML.</p> <p>Supported providers:</p> <table> <thead> <tr> <th>Provider</th> <th>Flavor</th> <th>Since</th> </tr> </thead> <tbody> <tr> <td>Dailymotion</td> <td>dailymotion.com</td> <td>2.9.0</td> </tr> <tr> <td>Flickr</td> <td>flickr.com</td> <td>2.9.0</td> </tr> <tr> <td>Scribd</td> <td>scribd.com</td> <td>2.9.0</td> </tr> <tr> <td>Vimeo</td> <td>vimeo.com</td> <td>2.9.0</td> </tr> <tr> <td>WordPress.tv</td> <td>wordpress.tv</td> <td>2.9.0</td> </tr> <tr> <td>YouTube</td> <td>youtube.com/watch</td> <td>2.9.0</td> </tr> <tr> <td>Crowdsignal</td> <td>polldaddy.com</td> <td>3.0.0</td> </tr> <tr> <td>SmugMug</td> <td>smugmug.com</td> <td>3.0.0</td> </tr> <tr> <td>YouTube</td> <td>youtu.be</td> <td>3.0.0</td> </tr> <tr> <td>Twitter</td> <td>twitter.com</td> <td>3.4.0</td> </tr> <tr> <td>SoundCloud</td> <td>soundcloud.com</td> <td>3.5.0</td> </tr> <tr> <td>Dailymotion</td> <td>dai.ly</td> <td>3.6.0</td> </tr> <tr> <td>Flickr</td> <td>flic.kr</td> <td>3.6.0</td> </tr> <tr> <td>Spotify</td> <td>spotify.com</td> <td>3.6.0</td> </tr> <tr> <td>Imgur</td> <td>imgur.com</td> <td>3.9.0</td> </tr> <tr> <td>Animoto</td> <td>animoto.com</td> <td>4.0.0</td> </tr> <tr> <td>Animoto</td> <td>video214.com</td> <td>4.0.0</td> </tr> <tr> <td>Issuu</td> <td>issuu.com</td> <td>4.0.0</td> </tr> <tr> <td>Mixcloud</td> <td>mixcloud.com</td> <td>4.0.0</td> </tr> <tr> <td>Crowdsignal</td> <td>poll.fm</td> <td>4.0.0</td> </tr> <tr> <td>TED</td> <td>ted.com</td> <td>4.0.0</td> </tr> <tr> <td>YouTube</td> <td>youtube.com/playlist</td> <td>4.0.0</td> </tr> <tr> <td>Tumblr</td> <td>tumblr.com</td> <td>4.2.0</td> </tr> <tr> <td>Kickstarter</td> <td>kickstarter.com</td> <td>4.2.0</td> </tr> <tr> <td>Kickstarter</td> <td>kck.st</td> <td>4.2.0</td> </tr> <tr> <td>Cloudup</td> <td>cloudup.com</td> <td>4.3.0</td> </tr> <tr> <td>ReverbNation</td> <td>reverbnation.com</td> <td>4.4.0</td> </tr> <tr> <td>VideoPress</td> <td>videopress.com</td> <td>4.4.0</td> </tr> <tr> <td>Reddit</td> <td>reddit.com</td> <td>4.4.0</td> </tr> <tr> <td>Speaker Deck</td> <td>speakerdeck.com</td> <td>4.4.0</td> </tr> <tr> <td>Twitter</td> <td>twitter.com/timelines</td> <td>4.5.0</td> </tr> <tr> <td>Twitter</td> <td>twitter.com/moments</td> <td>4.5.0</td> </tr> <tr> <td>Twitter</td> <td>twitter.com/user</td> <td>4.7.0</td> </tr> <tr> <td>Twitter</td> <td>twitter.com/likes</td> <td>4.7.0</td> </tr> <tr> <td>Twitter</td> <td>twitter.com/lists</td> <td>4.7.0</td> </tr> <tr> <td>Screencast</td> <td>screencast.com</td> <td>4.8.0</td> </tr> <tr> <td>Amazon</td> <td>amazon.com (com.mx, com.br, ca)</td> <td>4.9.0</td> </tr> <tr> <td>Amazon</td> <td>amazon.de (fr, it, es, in, nl, ru, co.uk)</td> <td>4.9.0</td> </tr> <tr> <td>Amazon</td> <td>amazon.co.jp (com.au)</td> <td>4.9.0</td> </tr> <tr> <td>Amazon</td> <td>amazon.cn</td> <td>4.9.0</td> </tr> <tr> <td>Amazon</td> <td>a.co</td> <td>4.9.0</td> </tr> <tr> <td>Amazon</td> <td>amzn.to (eu, in, asia)</td> <td>4.9.0</td> </tr> <tr> <td>Amazon</td> <td>z.cn</td> <td>4.9.0</td> </tr> <tr> <td>Someecards</td> <td>someecards.com</td> <td>4.9.0</td> </tr> <tr> <td>Someecards</td> <td>some.ly</td> <td>4.9.0</td> </tr> <tr> <td>Crowdsignal</td> <td>survey.fm</td> <td>5.1.0</td> </tr> <tr> <td>TikTok</td> <td>tiktok.com</td> <td>5.4.0</td> </tr> <tr> <td>Pinterest</td> <td>pinterest.com</td> <td>5.9.0</td> </tr> <tr> <td>WolframCloud</td> <td>wolframcloud.com</td> <td>5.9.0</td> </tr> <tr> <td>Pocket Casts</td> <td>pocketcasts.com</td> <td>6.1.0</td> </tr> <tr> <td>Crowdsignal</td> <td>crowdsignal.net</td> <td>6.2.0</td> </tr> <tr> <td>Anghami</td> <td>anghami.com</td> <td>6.3.0</td> </tr> <tr> <td>Bluesky</td> <td>bsky.app</td> <td>6.6.0</td> </tr> </tbody> </table> <p>No longer supported providers:</p> <table> <thead> <tr> <th>Provider</th> <th>Flavor</th> <th>Since</th> <th>Removed</th> </tr> </thead> <tbody> <tr> <td>Qik</td> <td>qik.com</td> <td>2.9.0</td> <td>3.9.0</td> </tr> <tr> <td>Viddler</td> <td>viddler.com</td> <td>2.9.0</td> <td>4.0.0</td> </tr> <tr> <td>Revision3</td> <td>revision3.com</td> <td>2.9.0</td> <td>4.2.0</td> </tr> <tr> <td>Blip</td> <td>blip.tv</td> <td>2.9.0</td> <td>4.4.0</td> </tr> <tr> <td>Rdio</td> <td>rdio.com</td> <td>3.6.0</td> <td>4.4.1</td> </tr> <tr> <td>Rdio</td> <td>rd.io</td> <td>3.6.0</td> <td>4.4.1</td> </tr> <tr> <td>Vine</td> <td>vine.co</td> <td>4.1.0</td> <td>4.9.0</td> </tr> <tr> <td>Photobucket</td> <td>photobucket.com</td> <td>2.9.0</td> <td>5.1.0</td> </tr> <tr> <td>Funny or Die</td> <td>funnyordie.com</td> <td>3.0.0</td> <td>5.1.0</td> </tr> <tr> <td>CollegeHumor</td> <td>collegehumor.com</td> <td>4.0.0</td> <td>5.3.1</td> </tr> <tr> <td>Hulu</td> <td>hulu.com</td> <td>2.9.0</td> <td>5.5.0</td> </tr> <tr> <td>Instagram</td> <td>instagram.com</td> <td>3.5.0</td> <td>5.5.2</td> </tr> <tr> <td>Instagram</td> <td>instagr.am</td> <td>3.5.0</td> <td>5.5.2</td> </tr> <tr> <td>Instagram TV</td> <td>instagram.com</td> <td>5.1.0</td> <td>5.5.2</td> </tr> <tr> <td>Instagram TV</td> <td>instagr.am</td> <td>5.1.0</td> <td>5.5.2</td> </tr> <tr> <td>Facebook</td> <td>facebook.com</td> <td>4.7.0</td> <td>5.5.2</td> </tr> <tr> <td>Meetup.com</td> <td>meetup.com</td> <td>3.9.0</td> <td>6.0.1</td> </tr> <tr> <td>Meetup.com</td> <td>meetu.ps</td> <td>3.9.0</td> <td>6.0.1</td> </tr> <tr> <td>SlideShare</td> <td>slideshare.net</td> <td>3.5.0</td> <td>6.6.0</td> </tr> </tbody> </table>","tags":[{"name":"see","content":"","refers":"wp_oembed_add_provider()"},{"name":"since","content":"2.9.0"},{"name":"param","content":"<p>An array of arrays containing data about popular oEmbed providers.</p>","types":["array[]"],"variable":"$providers"}]},"args":1},{"name":"pre_oembed_result","file":"wp-includes/class-wp-oembed.php","type":"filter","doc":{"description":"Filters the oEmbed result before any HTTP requests are made.","long_description":"This allows one to short-circuit the default logic, perhaps by replacing it with a routine that is more optimal for your setup.\n Returning a non-null value from the filter will effectively short-circuit retrieval and return the passed value instead.","long_description_html":"<p>This allows one to short-circuit the default logic, perhaps by replacing it with a routine that is more optimal for your setup.</p> <p>Returning a non-null value from the filter will effectively short-circuit retrieval and return the passed value instead.</p>","tags":[{"name":"since","content":"4.5.3"},{"name":"param","content":"<p>The UNSANITIZED (and potentially unsafe) HTML that should be used to embed. Default null to continue retrieving the result.</p>","types":["null","string"],"variable":"$result"},{"name":"param","content":"<p>The URL to the content that should be attempted to be embedded.</p>","types":["string"],"variable":"$url"},{"name":"param","content":"<p>Optional. Additional arguments for retrieving embed HTML. See wp_oembed_get() for accepted arguments. Default empty.</p>","types":["string","array"],"variable":"$args"}]},"args":3},{"name":"oembed_result","file":"wp-includes/class-wp-oembed.php","type":"filter","doc":{"description":"Filters the HTML returned by the oEmbed provider.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.9.0"},{"name":"param","content":"<p>The returned oEmbed HTML (false if unsafe).</p>","types":["string","false"],"variable":"$data"},{"name":"param","content":"<p>URL of the content to be embedded.</p>","types":["string"],"variable":"$url"},{"name":"param","content":"<p>Optional. Additional arguments for retrieving embed HTML. See wp_oembed_get() for accepted arguments. Default empty.</p>","types":["string","array"],"variable":"$args"}]},"args":3},{"name":"oembed_remote_get_args","file":"wp-includes/class-wp-oembed.php","type":"filter","doc":{"description":"Filters oEmbed remote get arguments.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.0.0"},{"name":"see","content":"","refers":"WP_Http::request()"},{"name":"param","content":"<p>oEmbed remote get arguments.</p>","types":["array"],"variable":"$args"},{"name":"param","content":"<p>URL to be inspected.</p>","types":["string"],"variable":"$url"}]},"args":2},{"name":"oembed_linktypes","file":"wp-includes/class-wp-oembed.php","type":"filter","doc":{"description":"Filters the link types that contain oEmbed provider URLs.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.9.0"},{"name":"param","content":"<p>Array of oEmbed link types. Accepts 'application/json+oembed', 'text/xml+oembed', and 'application/xml+oembed' (incorrect, used by at least Vimeo).</p>","types":["string[]"],"variable":"$format"}]},"args":1},{"name":"oembed_fetch_url","file":"wp-includes/class-wp-oembed.php","type":"filter","doc":{"description":"Filters the oEmbed URL to be fetched.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.9.0"},{"name":"since","content":"4.9.0","description":"<p>The <code>dnt</code> (Do Not Track) query parameter was added to all oEmbed provider URLs.</p>"},{"name":"param","content":"<p>URL of the oEmbed provider.</p>","types":["string"],"variable":"$provider"},{"name":"param","content":"<p>URL of the content to be embedded.</p>","types":["string"],"variable":"$url"},{"name":"param","content":"<p>Optional. Additional arguments for retrieving embed HTML. See wp_oembed_get() for accepted arguments. Default empty.</p>","types":["array"],"variable":"$args"}]},"args":3},{"name":"oembed_dataparse","file":"wp-includes/class-wp-oembed.php","type":"filter","doc":{"description":"Filters the returned oEmbed HTML.","long_description":"Use this filter to add support for custom data types, or to filter the result.","long_description_html":"<p>Use this filter to add support for custom data types, or to filter the result.</p>","tags":[{"name":"since","content":"2.9.0"},{"name":"param","content":"<p>The returned oEmbed HTML.</p>","types":["string"],"variable":"$return"},{"name":"param","content":"<p>A data object result from an oEmbed provider.</p>","types":["object"],"variable":"$data"},{"name":"param","content":"<p>The URL of the content to be embedded.</p>","types":["string"],"variable":"$url"}]},"args":3},{"name":"register_block_type_args","file":"wp-includes/class-wp-block-type.php","type":"filter","doc":{"description":"Filters the arguments for registering a block type.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.5.0"},{"name":"param","content":"<p>Array of arguments for registering a block type.</p>","types":["array"],"variable":"$args"},{"name":"param","content":"<p>Block type name including namespace.</p>","types":["string"],"variable":"$block_type"}]},"args":2},{"name":"get_block_type_variations","file":"wp-includes/class-wp-block-type.php","type":"filter","doc":{"description":"Filters the registered variations for a block type.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"6.5.0"},{"name":"param","content":"<p>Array of registered variations for a block type.</p>","types":["array"],"variable":"$variations"},{"name":"param","content":"<p>The full block type object.</p>","types":["\\WP_Block_Type"],"variable":"$block_type"}]},"args":2},{"name":"get_block_type_uses_context","file":"wp-includes/class-wp-block-type.php","type":"filter","doc":{"description":"Filters the registered uses context for a block type.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"6.5.0"},{"name":"param","content":"<p>Array of registered uses context for a block type.</p>","types":["string[]"],"variable":"$uses_context"},{"name":"param","content":"<p>The full block type object.</p>","types":["\\WP_Block_Type"],"variable":"$block_type"}]},"args":2},{"name":"embed_handler_html","file":"wp-includes/class-wp-embed.php","type":"filter","doc":{"description":"Filters the returned embed HTML.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.9.0"},{"name":"see","content":"","refers":"WP_Embed::shortcode()"},{"name":"param","content":"<p>The HTML result of the shortcode, or false on failure.</p>","types":["string","false"],"variable":"$return"},{"name":"param","content":"<p>The embed URL.</p>","types":["string"],"variable":"$url"},{"name":"param","content":"<p>An array of shortcode attributes.</p>","types":["array"],"variable":"$attr"}]},"args":3},{"name":"oembed_ttl","file":"wp-includes/class-wp-embed.php","type":"filter","doc":{"description":"Filters the oEmbed TTL value (time to live).","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.0.0"},{"name":"param","content":"<p>Time to live (in seconds).</p>","types":["int"],"variable":"$time"},{"name":"param","content":"<p>The attempted embed URL.</p>","types":["string"],"variable":"$url"},{"name":"param","content":"<p>An array of shortcode attributes.</p>","types":["array"],"variable":"$attr"},{"name":"param","content":"<p>Post ID.</p>","types":["int"],"variable":"$post_id"}]},"args":4},{"name":"embed_oembed_html","file":"wp-includes/class-wp-embed.php","type":"filter","doc":{"description":"Filters the cached oEmbed HTML.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.9.0"},{"name":"see","content":"","refers":"WP_Embed::shortcode()"},{"name":"param","content":"<p>The cached HTML result, stored in post meta.</p>","types":["string","false"],"variable":"$cache"},{"name":"param","content":"<p>The attempted embed URL.</p>","types":["string"],"variable":"$url"},{"name":"param","content":"<p>An array of shortcode attributes.</p>","types":["array"],"variable":"$attr"},{"name":"param","content":"<p>Post ID.</p>","types":["int"],"variable":"$post_id"}]},"args":4},{"name":"embed_oembed_discover","file":"wp-includes/class-wp-embed.php","type":"filter","doc":{"description":"Filters whether to inspect the given URL for discoverable link tags.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.9.0"},{"name":"since","content":"4.4.0","description":"<p>The default value changed to true.</p>"},{"name":"see","content":"","refers":"WP_oEmbed::discover()"},{"name":"param","content":"<p>Whether to enable <code>&lt;link&gt;</code> tag discovery. Default true.</p>","types":["bool"],"variable":"$enable"}]},"args":1},{"name":"embed_cache_oembed_types","file":"wp-includes/class-wp-embed.php","type":"filter","doc":{"description":"Filters the array of post types to cache oEmbed results for.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.9.0"},{"name":"param","content":"<p>Array of post type names to cache oEmbed results for. Defaults to post types with <code>show_ui</code> set to true.</p>","types":["string[]"],"variable":"$post_types"}]},"args":1},{"name":"embed_maybe_make_link","file":"wp-includes/class-wp-embed.php","type":"filter","doc":{"description":"Filters the returned, maybe-linked embed URL.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.9.0"},{"name":"param","content":"<p>The linked or original URL.</p>","types":["string"],"variable":"$output"},{"name":"param","content":"<p>The original URL.</p>","types":["string"],"variable":"$url"}]},"args":2},{"name":"secure_signon_cookie","file":"wp-includes/user.php","type":"filter","doc":{"description":"Filters whether to use a secure sign-on cookie.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.1.0"},{"name":"param","content":"<p>Whether to use a secure sign-on cookie.</p>","types":["bool"],"variable":"$secure_cookie"},{"name":"param","content":"<p>{ Array of entered sign-on data.</p>","types":["array"],"variable":"$credentials"}]},"args":2},{"name":"wp_authenticate_user","file":"wp-includes/user.php","type":"filter","doc":{"description":"Filters whether the given user can be authenticated with the provided password.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.5.0"},{"name":"param","content":"<p>WP_User or WP_Error object if a previous callback failed authentication.</p>","types":["\\WP_User","\\WP_Error"],"variable":"$user"},{"name":"param","content":"<p>Password to check against the user.</p>","types":["string"],"variable":"$password"}]},"args":2},{"name":"application_password_is_api_request","file":"wp-includes/user.php","type":"filter","doc":{"description":"Filters whether this is an API request that Application Passwords can be used on.","long_description":"By default, Application Passwords is available for the REST API and XML-RPC.","long_description_html":"<p>By default, Application Passwords is available for the REST API and XML-RPC.</p>","tags":[{"name":"since","content":"5.6.0"},{"name":"param","content":"<p>If this is an acceptable API request.</p>","types":["bool"],"variable":"$is_api_request"}]},"args":1},{"name":"check_is_user_spammed","file":"wp-includes/user.php","type":"filter","doc":{"description":"Filters whether the user has been marked as a spammer.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.7.0"},{"name":"param","content":"<p>Whether the user is considered a spammer.</p>","types":["bool"],"variable":"$spammed"},{"name":"param","content":"<p>User to check against.</p>","types":["\\WP_User"],"variable":"$user"}]},"args":2},{"name":"get_usernumposts","file":"wp-includes/user.php","type":"filter","doc":{"description":"Filters the number of posts a user has written.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.7.0"},{"name":"since","content":"4.1.0","description":"<p>Added <code>$post_type</code> argument.</p>"},{"name":"since","content":"4.3.1","description":"<p>Added <code>$public_only</code> argument.</p>"},{"name":"param","content":"<p>The user's post count.</p>","types":["int"],"variable":"$count"},{"name":"param","content":"<p>User ID.</p>","types":["int"],"variable":"$userid"},{"name":"param","content":"<p>Single post type or array of post types to count the number of posts for.</p>","types":["string","array"],"variable":"$post_type"},{"name":"param","content":"<p>Whether to limit counted posts to public posts.</p>","types":["bool"],"variable":"$public_only"}]},"args":4},{"name":"get_user_option_{$option}","file":"wp-includes/user.php","type":"filter","doc":{"description":"Filters a specific user option value.","long_description":"The dynamic portion of the hook name, `$option`, refers to the user option name.","long_description_html":"<p>The dynamic portion of the hook name, <code>$option</code>, refers to the user option name.</p>","tags":[{"name":"since","content":"2.5.0"},{"name":"param","content":"<p>Value for the user's option.</p>","types":["mixed"],"variable":"$result"},{"name":"param","content":"<p>Name of the option being retrieved.</p>","types":["string"],"variable":"$option"},{"name":"param","content":"<p>WP_User object of the user whose option is being retrieved.</p>","types":["\\WP_User"],"variable":"$user"}]},"args":3},{"name":"wp_list_users_args","file":"wp-includes/user.php","type":"filter","doc":{"description":"Filters the query arguments for the list of all users of the site.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"6.1.0"},{"name":"param","content":"<p>The query arguments for get_users().</p>","types":["array"],"variable":"$query_args"},{"name":"param","content":"<p>The arguments passed to wp_list_users() combined with the defaults.</p>","types":["array"],"variable":"$parsed_args"}]},"args":2},{"name":"pre_get_blogs_of_user","file":"wp-includes/user.php","type":"filter","doc":{"description":"Filters the list of a user's sites before it is populated.","long_description":"Returning a non-null value from the filter will effectively short circuit get_blogs_of_user(), returning that value instead.","long_description_html":"<p>Returning a non-null value from the filter will effectively short circuit get_blogs_of_user(), returning that value instead.</p>","tags":[{"name":"since","content":"4.6.0"},{"name":"param","content":"<p>An array of site objects of which the user is a member.</p>","types":["null","object[]"],"variable":"$sites"},{"name":"param","content":"<p>User ID.</p>","types":["int"],"variable":"$user_id"},{"name":"param","content":"<p>Whether the returned array should contain all sites, including those marked 'deleted', 'archived', or 'spam'. Default false.</p>","types":["bool"],"variable":"$all"}]},"args":3},{"name":"get_blogs_of_user","file":"wp-includes/user.php","type":"filter","doc":{"description":"Filters the list of sites a user belongs to.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"MU (3.0.0)","description":"MU (3.0.0)"},{"name":"param","content":"<p>An array of site objects belonging to the user.</p>","types":["object[]"],"variable":"$sites"},{"name":"param","content":"<p>User ID.</p>","types":["int"],"variable":"$user_id"},{"name":"param","content":"<p>Whether the returned sites array should contain all sites, including those marked 'deleted', 'archived', or 'spam'. Default false.</p>","types":["bool"],"variable":"$all"}]},"args":3},{"name":"pre_count_users","file":"wp-includes/user.php","type":"filter","doc":{"description":"Filters the user count before queries are run.","long_description":"Return a non-null value to cause count_users() to return early.","long_description_html":"<p>Return a non-null value to cause count_users() to return early.</p>","tags":[{"name":"since","content":"5.1.0"},{"name":"param","content":"<p>The value to return instead. Default null to continue with the query.</p>","types":["null","array"],"variable":"$result"},{"name":"param","content":"<p>Optional. The computational strategy to use when counting the users. Accepts either 'time' or 'memory'. Default 'time'.</p>","types":["string"],"variable":"$strategy"},{"name":"param","content":"<p>The site ID to count users for.</p>","types":["int"],"variable":"$site_id"}]},"args":3},{"name":"wp_is_large_user_count","file":"wp-includes/user.php","type":"filter","doc":{"description":"Filters whether the site is considered large, based on its number of users.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"6.0.0"},{"name":"param","content":"<p>Whether the site has a large number of users.</p>","types":["bool"],"variable":"$is_large_user_count"},{"name":"param","content":"<p>The total number of users.</p>","types":["int"],"variable":"$count"},{"name":"param","content":"<p>ID of the network. <code>null</code> represents the current network.</p>","types":["int","null"],"variable":"$network_id"}]},"args":3},{"name":"wp_dropdown_users_args","file":"wp-includes/user.php","type":"filter","doc":{"description":"Filters the query arguments for the list of users in the dropdown.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.4.0"},{"name":"param","content":"<p>The query arguments for get_users().</p>","types":["array"],"variable":"$query_args"},{"name":"param","content":"<p>The arguments passed to wp_dropdown_users() combined with the defaults.</p>","types":["array"],"variable":"$parsed_args"}]},"args":2},{"name":"wp_dropdown_users","file":"wp-includes/user.php","type":"filter","doc":{"description":"Filters the wp_dropdown_users() HTML output.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.3.0"},{"name":"param","content":"<p>HTML output generated by wp_dropdown_users().</p>","types":["string"],"variable":"$output"}]},"args":1},{"name":"edit_user_{$field}","file":"wp-includes/user.php","type":"filter","doc":{"description":"Filters a user field value in the 'edit' context.","long_description":"The dynamic portion of the hook name, `$field`, refers to the prefixed user field being filtered, such as 'user_login', 'user_email', 'first_name', etc.","long_description_html":"<p>The dynamic portion of the hook name, <code>$field</code>, refers to the prefixed user field being filtered, such as 'user_login', 'user_email', 'first_name', etc.</p>","tags":[{"name":"since","content":"2.9.0"},{"name":"param","content":"<p>Value of the prefixed user field.</p>","types":["mixed"],"variable":"$value"},{"name":"param","content":"<p>User ID.</p>","types":["int"],"variable":"$user_id"}]},"args":2},{"name":"pre_user_{$field}","file":"wp-includes/user.php","type":"filter","doc":{"description":"Filters the value of a user field in the 'db' context.","long_description":"The dynamic portion of the hook name, `$field`, refers to the prefixed user field being filtered, such as 'user_login', 'user_email', 'first_name', etc.","long_description_html":"<p>The dynamic portion of the hook name, <code>$field</code>, refers to the prefixed user field being filtered, such as 'user_login', 'user_email', 'first_name', etc.</p>","tags":[{"name":"since","content":"2.9.0"},{"name":"param","content":"<p>Value of the prefixed user field.</p>","types":["mixed"],"variable":"$value"}]},"args":1},{"name":"user_{$field}","file":"wp-includes/user.php","type":"filter","doc":{"description":"Filters the value of a user field in a standard context.","long_description":"The dynamic portion of the hook name, `$field`, refers to the prefixed user field being filtered, such as 'user_login', 'user_email', 'first_name', etc.","long_description_html":"<p>The dynamic portion of the hook name, <code>$field</code>, refers to the prefixed user field being filtered, such as 'user_login', 'user_email', 'first_name', etc.</p>","tags":[{"name":"since","content":"2.9.0"},{"name":"param","content":"<p>The user object value to sanitize.</p>","types":["mixed"],"variable":"$value"},{"name":"param","content":"<p>User ID.</p>","types":["int"],"variable":"$user_id"},{"name":"param","content":"<p>The context to filter within.</p>","types":["string"],"variable":"$context"}]},"args":3},{"name":"username_exists","file":"wp-includes/user.php","type":"filter","doc":{"description":"Filters whether the given username exists.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.9.0"},{"name":"param","content":"<p>The user ID associated with the username, or false if the username does not exist.</p>","types":["int","false"],"variable":"$user_id"},{"name":"param","content":"<p>The username to check for existence.</p>","types":["string"],"variable":"$username"}]},"args":2},{"name":"email_exists","file":"wp-includes/user.php","type":"filter","doc":{"description":"Filters whether the given email exists.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.6.0"},{"name":"param","content":"<p>The user ID associated with the email, or false if the email does not exist.</p>","types":["int","false"],"variable":"$user_id"},{"name":"param","content":"<p>The email to check for existence.</p>","types":["string"],"variable":"$email"}]},"args":2},{"name":"validate_username","file":"wp-includes/user.php","type":"filter","doc":{"description":"Filters whether the provided username is valid.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.0.1"},{"name":"param","content":"<p>Whether given username is valid.</p>","types":["bool"],"variable":"$valid"},{"name":"param","content":"<p>Username to check.</p>","types":["string"],"variable":"$username"}]},"args":2},{"name":"pre_user_login","file":"wp-includes/user.php","type":"filter","doc":{"description":"Filters a username after it has been sanitized.","long_description":"This filter is called before the user is created or updated.","long_description_html":"<p>This filter is called before the user is created or updated.</p>","tags":[{"name":"since","content":"2.0.3"},{"name":"param","content":"<p>Username after it has been sanitized.</p>","types":["string"],"variable":"$sanitized_user_login"}]},"args":1},{"name":"illegal_user_logins","file":"wp-includes/user.php","type":"filter","doc":{"description":"Filters the list of disallowed usernames.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.4.0"},{"name":"param","content":"<p>Array of disallowed usernames.</p>","types":["array"],"variable":"$usernames"}]},"args":1},{"name":"pre_user_nicename","file":"wp-includes/user.php","type":"filter","doc":{"description":"Filters a user's nicename before the user is created or updated.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.0.3"},{"name":"param","content":"<p>The user's nicename.</p>","types":["string"],"variable":"$user_nicename"}]},"args":1},{"name":"pre_user_email","file":"wp-includes/user.php","type":"filter","doc":{"description":"Filters a user's email before the user is created or updated.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.0.3"},{"name":"param","content":"<p>The user's email.</p>","types":["string"],"variable":"$raw_user_email"}]},"args":1},{"name":"pre_user_url","file":"wp-includes/user.php","type":"filter","doc":{"description":"Filters a user's URL before the user is created or updated.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.0.3"},{"name":"param","content":"<p>The user's URL.</p>","types":["string"],"variable":"$raw_user_url"}]},"args":1},{"name":"pre_user_nickname","file":"wp-includes/user.php","type":"filter","doc":{"description":"Filters a user's nickname before the user is created or updated.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.0.3"},{"name":"param","content":"<p>The user's nickname.</p>","types":["string"],"variable":"$nickname"}]},"args":1},{"name":"pre_user_first_name","file":"wp-includes/user.php","type":"filter","doc":{"description":"Filters a user's first name before the user is created or updated.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.0.3"},{"name":"param","content":"<p>The user's first name.</p>","types":["string"],"variable":"$first_name"}]},"args":1},{"name":"pre_user_last_name","file":"wp-includes/user.php","type":"filter","doc":{"description":"Filters a user's last name before the user is created or updated.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.0.3"},{"name":"param","content":"<p>The user's last name.</p>","types":["string"],"variable":"$last_name"}]},"args":1},{"name":"pre_user_display_name","file":"wp-includes/user.php","type":"filter","doc":{"description":"Filters a user's display name before the user is created or updated.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.0.3"},{"name":"param","content":"<p>The user's display name.</p>","types":["string"],"variable":"$display_name"}]},"args":1},{"name":"pre_user_description","file":"wp-includes/user.php","type":"filter","doc":{"description":"Filters a user's description before the user is created or updated.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.0.3"},{"name":"param","content":"<p>The user's description.</p>","types":["string"],"variable":"$description"}]},"args":1},{"name":"wp_pre_insert_user_data","file":"wp-includes/user.php","type":"filter","doc":{"description":"Filters user data before the record is created or updated.","long_description":"It only includes data in the users table, not any user metadata.","long_description_html":"<p>It only includes data in the users table, not any user metadata.</p>","tags":[{"name":"since","content":"4.9.0"},{"name":"since","content":"5.8.0","description":"<p>The <code>$userdata</code> parameter was added.</p>"},{"name":"param","content":"<p>{ Values and keys for the user.</p>","types":["array"],"variable":"$data"},{"name":"param","content":"<p>Whether the user is being updated rather than created.</p>","types":["bool"],"variable":"$update"},{"name":"param","content":"<p>ID of the user to be updated, or NULL if the user is being created.</p>","types":["int","null"],"variable":"$user_id"},{"name":"param","content":"<p>The raw array of data passed to wp_insert_user().</p>","types":["array"],"variable":"$userdata"}]},"args":4},{"name":"insert_user_meta","file":"wp-includes/user.php","type":"filter","doc":{"description":"Filters a user's meta values and keys immediately after the user is created or updated and before any user meta is inserted or updated.","long_description":"Does not include contact methods. These are added using `wp_get_user_contact_methods( $user )`.\n For custom meta fields, see the {@see 'insert_custom_user_meta'} filter.","long_description_html":"<p>Does not include contact methods. These are added using <code>wp_get_user_contact_methods( $user )</code>.</p> <p>For custom meta fields, see the {@see 'insert_custom_user_meta'} filter.</p>","tags":[{"name":"since","content":"4.4.0"},{"name":"since","content":"5.8.0","description":"<p>The <code>$userdata</code> parameter was added.</p>"},{"name":"param","content":"<p>{ Default meta values and keys for the user.</p>","types":["array"],"variable":"$meta"},{"name":"param","content":"<p>User object.</p>","types":["\\WP_User"],"variable":"$user"},{"name":"param","content":"<p>Whether the user is being updated rather than created.</p>","types":["bool"],"variable":"$update"},{"name":"param","content":"<p>The raw array of data passed to wp_insert_user().</p>","types":["array"],"variable":"$userdata"}]},"args":4},{"name":"insert_custom_user_meta","file":"wp-includes/user.php","type":"filter","doc":{"description":"Filters a user's custom meta values and keys immediately after the user is created or updated and before any user meta is inserted or updated.","long_description":"For non-custom meta fields, see the {@see 'insert_user_meta'} filter.","long_description_html":"<p>For non-custom meta fields, see the {@see 'insert_user_meta'} filter.</p>","tags":[{"name":"since","content":"5.9.0"},{"name":"param","content":"<p>Array of custom user meta values keyed by meta key.</p>","types":["array"],"variable":"$custom_meta"},{"name":"param","content":"<p>User object.</p>","types":["\\WP_User"],"variable":"$user"},{"name":"param","content":"<p>Whether the user is being updated rather than created.</p>","types":["bool"],"variable":"$update"},{"name":"param","content":"<p>The raw array of data passed to wp_insert_user().</p>","types":["array"],"variable":"$userdata"}]},"args":4},{"name":"send_password_change_email","file":"wp-includes/user.php","type":"filter","doc":{"description":"Filters whether to send the password change email.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.3.0"},{"name":"see","content":"<p>For <code>$user</code> and <code>$userdata</code> fields.</p>","refers":"wp_insert_user()"},{"name":"param","content":"<p>Whether to send the email.</p>","types":["bool"],"variable":"$send"},{"name":"param","content":"<p>The original user array.</p>","types":["array"],"variable":"$user"},{"name":"param","content":"<p>The updated user array.</p>","types":["array"],"variable":"$userdata"}]},"args":3},{"name":"send_email_change_email","file":"wp-includes/user.php","type":"filter","doc":{"description":"Filters whether to send the email change email.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.3.0"},{"name":"see","content":"<p>For <code>$user</code> and <code>$userdata</code> fields.</p>","refers":"wp_insert_user()"},{"name":"param","content":"<p>Whether to send the email.</p>","types":["bool"],"variable":"$send"},{"name":"param","content":"<p>The original user array.</p>","types":["array"],"variable":"$user"},{"name":"param","content":"<p>The updated user array.</p>","types":["array"],"variable":"$userdata"}]},"args":3},{"name":"password_change_email","file":"wp-includes/user.php","type":"filter","doc":{"description":"Filters the contents of the email sent when the user's password is changed.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.3.0"},{"name":"param","content":"<p>{ Used to build wp_mail().</p>","types":["array"],"variable":"$pass_change_email"},{"name":"param","content":"<p>The original user array.</p>","types":["array"],"variable":"$user"},{"name":"param","content":"<p>The updated user array.</p>","types":["array"],"variable":"$userdata"}]},"args":3},{"name":"email_change_email","file":"wp-includes/user.php","type":"filter","doc":{"description":"Filters the contents of the email sent when the user's email is changed.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.3.0"},{"name":"param","content":"<p>{ Used to build wp_mail().</p>","types":["array"],"variable":"$email_change_email"},{"name":"param","content":"<p>The original user array.</p>","types":["array"],"variable":"$user"},{"name":"param","content":"<p>The updated user array.</p>","types":["array"],"variable":"$userdata"}]},"args":3},{"name":"user_contactmethods","file":"wp-includes/user.php","type":"filter","doc":{"description":"Filters the user contact methods.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.9.0"},{"name":"param","content":"<p>Array of contact method labels keyed by contact method.</p>","types":["string[]"],"variable":"$methods"},{"name":"param","content":"<p>WP_User object or null if none was provided.</p>","types":["\\WP_User","null"],"variable":"$user"}]},"args":2},{"name":"password_hint","file":"wp-includes/user.php","type":"filter","doc":{"description":"Filters the text describing the site's password complexity policy.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.1.0"},{"name":"param","content":"<p>The password hint text.</p>","types":["string"],"variable":"$hint"}]},"args":1},{"name":"password_reset_expiration","file":"wp-includes/user.php","type":"filter","doc":{"description":"Filters the expiration time of password reset keys.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.3.0"},{"name":"param","content":"<p>The expiration time in seconds.</p>","types":["int"],"variable":"$expiration"}]},"args":1},{"name":"password_reset_key_expired","file":"wp-includes/user.php","type":"filter","doc":{"description":"Filters the return value of check_password_reset_key() when an old-style key is used.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.7.0","description":"<p>Previously plain-text keys were stored in the database.</p>"},{"name":"since","content":"4.3.0","description":"<p>Previously key hashes were stored without an expiration time.</p>"},{"name":"param","content":"<p>A WP_Error object denoting an expired key. Return a WP_User object to validate the key.</p>","types":["\\WP_Error"],"variable":"$return"},{"name":"param","content":"<p>The matched user ID.</p>","types":["int"],"variable":"$user_id"}]},"args":2},{"name":"lostpassword_user_data","file":"wp-includes/user.php","type":"filter","doc":{"description":"Filters the user data during a password reset request.","long_description":"Allows, for example, custom validation using data other than username or email address.","long_description_html":"<p>Allows, for example, custom validation using data other than username or email address.</p>","tags":[{"name":"since","content":"5.7.0"},{"name":"param","content":"<p>WP_User object if found, false if the user does not exist.</p>","types":["\\WP_User","false"],"variable":"$user_data"},{"name":"param","content":"<p>A WP_Error object containing any errors generated by using invalid credentials.</p>","types":["\\WP_Error"],"variable":"$errors"}]},"args":2},{"name":"lostpassword_errors","file":"wp-includes/user.php","type":"filter","doc":{"description":"Filters the errors encountered on a password reset request.","long_description":"The filtered WP_Error object may, for example, contain errors for an invalid username or email address. A WP_Error object should always be returned, but may or may not contain errors.\n If any errors are present in $errors, this will abort the password reset request.","long_description_html":"<p>The filtered WP_Error object may, for example, contain errors for an invalid username or email address. A WP_Error object should always be returned, but may or may not contain errors.</p> <p>If any errors are present in $errors, this will abort the password reset request.</p>","tags":[{"name":"since","content":"5.5.0"},{"name":"param","content":"<p>A WP_Error object containing any errors generated by using invalid credentials.</p>","types":["\\WP_Error"],"variable":"$errors"},{"name":"param","content":"<p>WP_User object if found, false if the user does not exist.</p>","types":["\\WP_User","false"],"variable":"$user_data"}]},"args":2},{"name":"send_retrieve_password_email","file":"wp-includes/user.php","type":"filter","doc":{"description":"Filters whether to send the retrieve password email.","long_description":"Return false to disable sending the email.","long_description_html":"<p>Return false to disable sending the email.</p>","tags":[{"name":"since","content":"6.0.0"},{"name":"param","content":"<p>Whether to send the email.</p>","types":["bool"],"variable":"$send"},{"name":"param","content":"<p>The username for the user.</p>","types":["string"],"variable":"$user_login"},{"name":"param","content":"<p>WP_User object.</p>","types":["\\WP_User"],"variable":"$user_data"}]},"args":3},{"name":"retrieve_password_title","file":"wp-includes/user.php","type":"filter","doc":{"description":"Filters the subject of the password reset email.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.8.0"},{"name":"since","content":"4.4.0","description":"<p>Added the <code>$user_login</code> and <code>$user_data</code> parameters.</p>"},{"name":"param","content":"<p>Email subject.</p>","types":["string"],"variable":"$title"},{"name":"param","content":"<p>The username for the user.</p>","types":["string"],"variable":"$user_login"},{"name":"param","content":"<p>WP_User object.</p>","types":["\\WP_User"],"variable":"$user_data"}]},"args":3},{"name":"retrieve_password_message","file":"wp-includes/user.php","type":"filter","doc":{"description":"Filters the message body of the password reset mail.","long_description":"If the filtered message is empty, the password reset email will not be sent.","long_description_html":"<p>If the filtered message is empty, the password reset email will not be sent.</p>","tags":[{"name":"since","content":"2.8.0"},{"name":"since","content":"4.1.0","description":"<p>Added <code>$user_login</code> and <code>$user_data</code> parameters.</p>"},{"name":"param","content":"<p>Email message.</p>","types":["string"],"variable":"$message"},{"name":"param","content":"<p>The activation key.</p>","types":["string"],"variable":"$key"},{"name":"param","content":"<p>The username for the user.</p>","types":["string"],"variable":"$user_login"},{"name":"param","content":"<p>WP_User object.</p>","types":["\\WP_User"],"variable":"$user_data"}]},"args":4},{"name":"retrieve_password_notification_email","file":"wp-includes/user.php","type":"filter","doc":{"description":"Filters the contents of the reset password notification email sent to the user.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"6.0.0"},{"name":"param","content":"<p>{ The default notification email arguments. Used to build wp_mail().</p>","types":["array"],"variable":"$defaults"},{"name":"param","content":"<p>The activation key.</p>","types":["string"],"variable":"$key"},{"name":"param","content":"<p>The username for the user.</p>","types":["string"],"variable":"$user_login"},{"name":"param","content":"<p>WP_User object.</p>","types":["\\WP_User"],"variable":"$user_data"}]},"args":4},{"name":"user_registration_email","file":"wp-includes/user.php","type":"filter","doc":{"description":"Filters the email address of a user being registered.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.1.0"},{"name":"param","content":"<p>The email address of the new user.</p>","types":["string"],"variable":"$user_email"}]},"args":1},{"name":"registration_errors","file":"wp-includes/user.php","type":"filter","doc":{"description":"Filters the errors encountered when a new user is being registered.","long_description":"The filtered WP_Error object may, for example, contain errors for an invalid or existing username or email address. A WP_Error object should always be returned, but may or may not contain errors.\n If any errors are present in $errors, this will abort the user's registration.","long_description_html":"<p>The filtered WP_Error object may, for example, contain errors for an invalid or existing username or email address. A WP_Error object should always be returned, but may or may not contain errors.</p> <p>If any errors are present in $errors, this will abort the user's registration.</p>","tags":[{"name":"since","content":"2.1.0"},{"name":"param","content":"<p>A WP_Error object containing any errors encountered during registration.</p>","types":["\\WP_Error"],"variable":"$errors"},{"name":"param","content":"<p>User's username after it has been sanitized.</p>","types":["string"],"variable":"$sanitized_user_login"},{"name":"param","content":"<p>User's email.</p>","types":["string"],"variable":"$user_email"}]},"args":3},{"name":"determine_current_user","file":"wp-includes/user.php","type":"filter","doc":{"description":"Filters the current user.","long_description":"The default filters use this to determine the current user from the request's cookies, if available.\n Returning a value of false will effectively short-circuit setting the current user.","long_description_html":"<p>The default filters use this to determine the current user from the request's cookies, if available.</p> <p>Returning a value of false will effectively short-circuit setting the current user.</p>","tags":[{"name":"since","content":"3.9.0"},{"name":"param","content":"<p>User ID if one has been determined, false otherwise.</p>","types":["int","false"],"variable":"$user_id"}]},"args":1},{"name":"new_user_email_content","file":"wp-includes/user.php","type":"filter","doc":{"description":"Filters the text of the email sent when a change of user email address is attempted.","long_description":"The following strings have a special meaning and will get replaced dynamically: - ###USERNAME###  The current user's username. - ###ADMIN_URL### The link to click on to confirm the email change. - ###EMAIL###     The new email. - ###SITENAME###  The name of the site. - ###SITEURL###   The URL to the site.","long_description_html":"<p>The following strings have a special meaning and will get replaced dynamically:</p> <ul> <li> <h3>USERNAME###  The current user's username.</h3> </li> <li> <h3>ADMIN_URL### The link to click on to confirm the email change.</h3> </li> <li> <h3>EMAIL###     The new email.</h3> </li> <li> <h3>SITENAME###  The name of the site.</h3> </li> <li> <h3>SITEURL###   The URL to the site.</h3> </li> </ul>","tags":[{"name":"since","content":"MU (3.0.0)","description":"MU (3.0.0)"},{"name":"since","content":"4.9.0","description":"<p>This filter is no longer Multisite specific.</p>"},{"name":"param","content":"<p>Text in the email.</p>","types":["string"],"variable":"$email_text"},{"name":"param","content":"<p>{ Data relating to the new user email address.</p>","types":["array"],"variable":"$new_user_email"}]},"args":2},{"name":"wp_privacy_additional_user_profile_data","file":"wp-includes/user.php","type":"filter","doc":{"description":"Filters the user's profile data for the privacy exporter.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.4.0"},{"name":"param","content":"<p>{ An array of name-value pairs of additional user data items. Default empty array.</p>","types":["array"],"variable":"$additional_user_profile_data"},{"name":"param","content":"<p>The user whose data is being exported.</p>","types":["\\WP_User"],"variable":"$user"},{"name":"param","content":"<p>An array of reserved names. Any item in <code>$additional_user_data</code> that uses one of these for its <code>name</code> will not be included in the export.</p>","types":["string[]"],"variable":"$reserved_names"}]},"args":3},{"name":"user_request_confirmed_email_to","file":"wp-includes/user.php","type":"filter","doc":{"description":"Filters the recipient of the data request confirmation notification.","long_description":"In a Multisite environment, this will default to the email address of the network admin because, by default, single site admins do not have the capabilities required to process requests. Some networks may wish to delegate those capabilities to a single-site admin, or a dedicated person responsible for managing privacy requests.","long_description_html":"<p>In a Multisite environment, this will default to the email address of the network admin because, by default, single site admins do not have the capabilities required to process requests. Some networks may wish to delegate those capabilities to a single-site admin, or a dedicated person responsible for managing privacy requests.</p>","tags":[{"name":"since","content":"4.9.6"},{"name":"param","content":"<p>The email address of the notification recipient.</p>","types":["string"],"variable":"$admin_email"},{"name":"param","content":"<p>The request that is initiating the notification.</p>","types":["\\WP_User_Request"],"variable":"$request"}]},"args":2},{"name":"user_request_confirmed_email_subject","file":"wp-includes/user.php","type":"filter","doc":{"description":"Filters the subject of the user request confirmation email.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.9.8"},{"name":"param","content":"<p>The email subject.</p>","types":["string"],"variable":"$subject"},{"name":"param","content":"<p>The name of the site.</p>","types":["string"],"variable":"$sitename"},{"name":"param","content":"<p>{ Data relating to the account action email.</p>","types":["array"],"variable":"$email_data"}]},"args":3},{"name":"user_request_confirmed_email_content","file":"wp-includes/user.php","type":"filter","doc":{"description":"Filters the body of the user request confirmation email.","long_description":"The email is sent to an administrator when a user request is confirmed. The following strings have a special meaning and will get replaced dynamically:\n ###SITENAME###    The name of the site. ###USER_EMAIL###  The user email for the request. ###DESCRIPTION### Description of the action being performed so the user knows what the email is for. ###MANAGE_URL###  The URL to manage requests. ###SITEURL###     The URL to the site.","long_description_html":"<p>The email is sent to an administrator when a user request is confirmed. The following strings have a special meaning and will get replaced dynamically:</p> <h3>SITENAME###    The name of the site.</h3> <h3>USER_EMAIL###  The user email for the request.</h3> <h3>DESCRIPTION### Description of the action being performed so the user knows what the email is for.</h3> <h3>MANAGE_URL###  The URL to manage requests.</h3> <h3>SITEURL###     The URL to the site.</h3>","tags":[{"name":"since","content":"5.8.0"},{"name":"param","content":"<p>The email content.</p>","types":["string"],"variable":"$content"},{"name":"param","content":"<p>{ Data relating to the account action email.</p>","types":["array"],"variable":"$email_data"}]},"args":2},{"name":"user_request_confirmed_email_headers","file":"wp-includes/user.php","type":"filter","doc":{"description":"Filters the headers of the user request confirmation email.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.4.0"},{"name":"param","content":"<p>The email headers.</p>","types":["string","array"],"variable":"$headers"},{"name":"param","content":"<p>The email subject.</p>","types":["string"],"variable":"$subject"},{"name":"param","content":"<p>The email content.</p>","types":["string"],"variable":"$content"},{"name":"param","content":"<p>The request ID.</p>","types":["int"],"variable":"$request_id"},{"name":"param","content":"<p>{ Data relating to the account action email.</p>","types":["array"],"variable":"$email_data"}]},"args":5},{"name":"user_erasure_fulfillment_email_to","file":"wp-includes/user.php","type":"filter","doc":{"description":"Filters the recipient of the data erasure fulfillment notification.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.9.6"},{"name":"param","content":"<p>The email address of the notification recipient.</p>","types":["string"],"variable":"$user_email"},{"name":"param","content":"<p>The request that is initiating the notification.</p>","types":["\\WP_User_Request"],"variable":"$request"}]},"args":2},{"name":"user_erasure_fulfillment_email_subject","file":"wp-includes/user.php","type":"filter","doc":{"description":"Filters the subject of the email sent when an erasure request is completed.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.8.0"},{"name":"param","content":"<p>The email subject.</p>","types":["string"],"variable":"$subject"},{"name":"param","content":"<p>The name of the site.</p>","types":["string"],"variable":"$sitename"},{"name":"param","content":"<p>{ Data relating to the account action email.</p>","types":["array"],"variable":"$email_data"}]},"args":3},{"name":"user_erasure_fulfillment_email_content","file":"wp-includes/user.php","type":"filter","doc":{"description":"Filters the body of the data erasure fulfillment notification.","long_description":"The email is sent to a user when their data erasure request is fulfilled by an administrator.\n The following strings have a special meaning and will get replaced dynamically:\n ###SITENAME###           The name of the site. ###PRIVACY_POLICY_URL### Privacy policy page URL. ###SITEURL###            The URL to the site.","long_description_html":"<p>The email is sent to a user when their data erasure request is fulfilled by an administrator.</p> <p>The following strings have a special meaning and will get replaced dynamically:</p> <h3>SITENAME###           The name of the site.</h3> <h3>PRIVACY_POLICY_URL### Privacy policy page URL.</h3> <h3>SITEURL###            The URL to the site.</h3>","tags":[{"name":"since","content":"5.8.0"},{"name":"param","content":"<p>The email content.</p>","types":["string"],"variable":"$content"},{"name":"param","content":"<p>{ Data relating to the account action email.</p>","types":["array"],"variable":"$email_data"}]},"args":2},{"name":"user_erasure_fulfillment_email_headers","file":"wp-includes/user.php","type":"filter","doc":{"description":"Filters the headers of the data erasure fulfillment notification.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.8.0"},{"name":"param","content":"<p>The email headers.</p>","types":["string","array"],"variable":"$headers"},{"name":"param","content":"<p>The email subject.</p>","types":["string"],"variable":"$subject"},{"name":"param","content":"<p>The email content.</p>","types":["string"],"variable":"$content"},{"name":"param","content":"<p>The request ID.</p>","types":["int"],"variable":"$request_id"},{"name":"param","content":"<p>{ Data relating to the account action email.</p>","types":["array"],"variable":"$email_data"}]},"args":5},{"name":"user_request_action_confirmed_message","file":"wp-includes/user.php","type":"filter","doc":{"description":"Filters the message displayed to a user when they confirm a data request.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.9.6"},{"name":"param","content":"<p>The message to the user.</p>","types":["string"],"variable":"$message"},{"name":"param","content":"<p>The ID of the request being confirmed.</p>","types":["int"],"variable":"$request_id"}]},"args":2},{"name":"user_request_action_description","file":"wp-includes/user.php","type":"filter","doc":{"description":"Filters the user action description.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.9.6"},{"name":"param","content":"<p>The default description.</p>","types":["string"],"variable":"$description"},{"name":"param","content":"<p>The name of the request.</p>","types":["string"],"variable":"$action_name"}]},"args":2},{"name":"user_request_action_email_subject","file":"wp-includes/user.php","type":"filter","doc":{"description":"Filters the subject of the email sent when an account action is attempted.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.9.6"},{"name":"param","content":"<p>The email subject.</p>","types":["string"],"variable":"$subject"},{"name":"param","content":"<p>The name of the site.</p>","types":["string"],"variable":"$sitename"},{"name":"param","content":"<p>{ Data relating to the account action email.</p>","types":["array"],"variable":"$email_data"}]},"args":3},{"name":"user_request_action_email_content","file":"wp-includes/user.php","type":"filter","doc":{"description":"Filters the text of the email sent when an account action is attempted.","long_description":"The following strings have a special meaning and will get replaced dynamically:\n ###DESCRIPTION### Description of the action being performed so the user knows what the email is for. ###CONFIRM_URL### The link to click on to confirm the account action. ###SITENAME###    The name of the site. ###SITEURL###     The URL to the site.","long_description_html":"<p>The following strings have a special meaning and will get replaced dynamically:</p> <h3>DESCRIPTION### Description of the action being performed so the user knows what the email is for.</h3> <h3>CONFIRM_URL### The link to click on to confirm the account action.</h3> <h3>SITENAME###    The name of the site.</h3> <h3>SITEURL###     The URL to the site.</h3>","tags":[{"name":"since","content":"4.9.6"},{"name":"param","content":"<p>Text in the email.</p>","types":["string"],"variable":"$content"},{"name":"param","content":"<p>{ Data relating to the account action email.</p>","types":["array"],"variable":"$email_data"}]},"args":2},{"name":"user_request_action_email_headers","file":"wp-includes/user.php","type":"filter","doc":{"description":"Filters the headers of the email sent when an account action is attempted.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.4.0"},{"name":"param","content":"<p>The email headers.</p>","types":["string","array"],"variable":"$headers"},{"name":"param","content":"<p>The email subject.</p>","types":["string"],"variable":"$subject"},{"name":"param","content":"<p>The email content.</p>","types":["string"],"variable":"$content"},{"name":"param","content":"<p>The request ID.</p>","types":["int"],"variable":"$request_id"},{"name":"param","content":"<p>{ Data relating to the account action email.</p>","types":["array"],"variable":"$email_data"}]},"args":5},{"name":"user_request_key_expiration","file":"wp-includes/user.php","type":"filter","doc":{"description":"Filters the expiration time of confirm keys.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"4.9.6"},{"name":"param","content":"<p>The expiration time in seconds.</p>","types":["int"],"variable":"$expiration"}]},"args":1},{"name":"wp_is_application_passwords_available","file":"wp-includes/user.php","type":"filter","doc":{"description":"Filters whether Application Passwords is available.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.6.0"},{"name":"param","content":"<p>True if available, false otherwise.</p>","types":["bool"],"variable":"$available"}]},"args":1},{"name":"wp_is_application_passwords_available_for_user","file":"wp-includes/user.php","type":"filter","doc":{"description":"Filters whether Application Passwords is available for a specific user.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.6.0"},{"name":"param","content":"<p>True if available, false otherwise.</p>","types":["bool"],"variable":"$available"},{"name":"param","content":"<p>The user to check.</p>","types":["\\WP_User"],"variable":"$user"}]},"args":2},{"name":"allow_password_reset","file":"wp-includes/user.php","type":"filter","doc":{"description":"Filters whether to allow a password to be reset.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.7.0"},{"name":"param","content":"<p>Whether to allow the password to be reset. Default true.</p>","types":["bool"],"variable":"$allow"},{"name":"param","content":"<p>The ID of the user attempting to reset a password.</p>","types":["int"],"variable":"$user_id"}]},"args":2},{"name":"auth_{$object_type}_meta_{$meta_key}_for_{$object_subtype}","file":"wp-includes/capabilities.php","type":"filter","doc":{"description":"Filters whether the user is allowed to edit a specific meta key of a specific object type and subtype.","long_description":"The dynamic portions of the hook name, `$object_type`, `$meta_key`, and `$object_subtype`, refer to the metadata object type (comment, post, term or user), the meta key value, and the object subtype respectively.","long_description_html":"<p>The dynamic portions of the hook name, <code>$object_type</code>, <code>$meta_key</code>, and <code>$object_subtype</code>, refer to the metadata object type (comment, post, term or user), the meta key value, and the object subtype respectively.</p>","tags":[{"name":"since","content":"4.9.8"},{"name":"param","content":"<p>Whether the user can add the object meta. Default false.</p>","types":["bool"],"variable":"$allowed"},{"name":"param","content":"<p>The meta key.</p>","types":["string"],"variable":"$meta_key"},{"name":"param","content":"<p>Object ID.</p>","types":["int"],"variable":"$object_id"},{"name":"param","content":"<p>User ID.</p>","types":["int"],"variable":"$user_id"},{"name":"param","content":"<p>Capability name.</p>","types":["string"],"variable":"$cap"},{"name":"param","content":"<p>Array of the user's capabilities.</p>","types":["string[]"],"variable":"$caps"}]},"args":6},{"name":"auth_{$object_type}_meta_{$meta_key}","file":"wp-includes/capabilities.php","type":"filter","doc":{"description":"Filters whether the user is allowed to edit a specific meta key of a specific object type.","long_description":"Return true to have the mapped meta caps from `edit_{$object_type}` apply.\n The dynamic portion of the hook name, `$object_type` refers to the object type being filtered. The dynamic portion of the hook name, `$meta_key`, refers to the meta key passed to map_meta_cap().","long_description_html":"<p>Return true to have the mapped meta caps from <code>edit_{$object_type}</code> apply.</p> <p>The dynamic portion of the hook name, <code>$object_type</code> refers to the object type being filtered. The dynamic portion of the hook name, <code>$meta_key</code>, refers to the meta key passed to map_meta_cap().</p>","tags":[{"name":"since","content":"3.3.0","description":"<p>As <code>auth_post_meta_{$meta_key}</code>.</p>"},{"name":"since","content":"4.6.0"},{"name":"param","content":"<p>Whether the user can add the object meta. Default false.</p>","types":["bool"],"variable":"$allowed"},{"name":"param","content":"<p>The meta key.</p>","types":["string"],"variable":"$meta_key"},{"name":"param","content":"<p>Object ID.</p>","types":["int"],"variable":"$object_id"},{"name":"param","content":"<p>User ID.</p>","types":["int"],"variable":"$user_id"},{"name":"param","content":"<p>Capability name.</p>","types":["string"],"variable":"$cap"},{"name":"param","content":"<p>Array of the user's capabilities.</p>","types":["string[]"],"variable":"$caps"}]},"args":6},{"name":"map_meta_cap","file":"wp-includes/capabilities.php","type":"filter","doc":{"description":"Filters the primitive capabilities required of the given user to satisfy the capability being checked.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.8.0"},{"name":"param","content":"<p>Primitive capabilities required of the user.</p>","types":["string[]"],"variable":"$caps"},{"name":"param","content":"<p>Capability being checked.</p>","types":["string"],"variable":"$cap"},{"name":"param","content":"<p>The user ID.</p>","types":["int"],"variable":"$user_id"},{"name":"param","content":"<p>Adds context to the capability check, typically starting with an object ID.</p>","types":["array"],"variable":"$args"}]},"args":4},{"name":"xmlrpc_methods","file":"wp-includes/class-wp-xmlrpc-server.php","type":"filter","doc":{"description":"Filters the methods exposed by the XML-RPC server.","long_description":"This filter can be used to add new methods, and remove built-in methods.","long_description_html":"<p>This filter can be used to add new methods, and remove built-in methods.</p>","tags":[{"name":"since","content":"1.5.0"},{"name":"param","content":"<p>An array of XML-RPC methods, keyed by their methodName.</p>","types":["string[]"],"variable":"$methods"}]},"args":1},{"name":"pre_option_enable_xmlrpc","file":"wp-includes/class-wp-xmlrpc-server.php","type":"filter","doc":{"description":"","long_description":"","long_description_html":"","tags":[]},"args":1},{"name":"option_enable_xmlrpc","file":"wp-includes/class-wp-xmlrpc-server.php","type":"filter","doc":{"description":"","long_description":"","long_description_html":"","tags":[]},"args":1},{"name":"xmlrpc_enabled","file":"wp-includes/class-wp-xmlrpc-server.php","type":"filter","doc":{"description":"Filters whether XML-RPC methods requiring authentication are enabled.","long_description":"Contrary to the way it's named, this filter does not control whether XML-RPC is *fully* enabled, rather, it only controls whether XML-RPC methods requiring authentication - such as for publishing purposes - are enabled.\n Further, the filter does not control whether pingbacks or other custom endpoints that don't require authentication are enabled. This behavior is expected, and due to how parity was matched with the `enable_xmlrpc` UI option the filter replaced when it was introduced in 3.5.\n To disable XML-RPC methods that require authentication, use:\n     add_filter( 'xmlrpc_enabled', '__return_false' );\n For more granular control over all XML-RPC methods and requests, see the {@see 'xmlrpc_methods'} and {@see 'xmlrpc_element_limit'} hooks.","long_description_html":"<p>Contrary to the way it's named, this filter does not control whether XML-RPC is <em>fully</em> enabled, rather, it only controls whether XML-RPC methods requiring authentication - such as for publishing purposes - are enabled.</p> <p>Further, the filter does not control whether pingbacks or other custom endpoints that don't require authentication are enabled. This behavior is expected, and due to how parity was matched with the <code>enable_xmlrpc</code> UI option the filter replaced when it was introduced in 3.5.</p> <p>To disable XML-RPC methods that require authentication, use:</p> <pre><code>add_filter( 'xmlrpc_enabled', '__return_false' );</code></pre> <p>For more granular control over all XML-RPC methods and requests, see the {@see 'xmlrpc_methods'} and {@see 'xmlrpc_element_limit'} hooks.</p>","tags":[{"name":"since","content":"3.5.0"},{"name":"param","content":"<p>Whether XML-RPC is enabled. Default true.</p>","types":["bool"],"variable":"$is_enabled"}]},"args":1},{"name":"xmlrpc_login_error","file":"wp-includes/class-wp-xmlrpc-server.php","type":"filter","doc":{"description":"Filters the XML-RPC user login error message.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.5.0"},{"name":"param","content":"<p>The XML-RPC error message.</p>","types":["\\IXR_Error"],"variable":"$error"},{"name":"param","content":"<p>WP_Error object.</p>","types":["\\WP_Error"],"variable":"$user"}]},"args":2},{"name":"xmlrpc_blog_options","file":"wp-includes/class-wp-xmlrpc-server.php","type":"filter","doc":{"description":"Filters the XML-RPC blog options property.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.6.0"},{"name":"param","content":"<p>An array of XML-RPC blog options.</p>","types":["array"],"variable":"$blog_options"}]},"args":1},{"name":"xmlrpc_prepare_taxonomy","file":"wp-includes/class-wp-xmlrpc-server.php","type":"filter","doc":{"description":"Filters XML-RPC-prepared data for the given taxonomy.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.4.0"},{"name":"param","content":"<p>An array of taxonomy data.</p>","types":["array"],"variable":"$_taxonomy"},{"name":"param","content":"<p>Taxonomy object.</p>","types":["\\WP_Taxonomy"],"variable":"$taxonomy"},{"name":"param","content":"<p>The subset of taxonomy fields to return.</p>","types":["array"],"variable":"$fields"}]},"args":3},{"name":"xmlrpc_prepare_term","file":"wp-includes/class-wp-xmlrpc-server.php","type":"filter","doc":{"description":"Filters XML-RPC-prepared data for the given term.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.4.0"},{"name":"param","content":"<p>An array of term data.</p>","types":["array"],"variable":"$_term"},{"name":"param","content":"<p>Term object or array.</p>","types":["array","object"],"variable":"$term"}]},"args":2},{"name":"xmlrpc_prepare_post","file":"wp-includes/class-wp-xmlrpc-server.php","type":"filter","doc":{"description":"Filters XML-RPC-prepared date for the given post.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.4.0"},{"name":"param","content":"<p>An array of modified post data.</p>","types":["array"],"variable":"$_post"},{"name":"param","content":"<p>An array of post data.</p>","types":["array"],"variable":"$post"},{"name":"param","content":"<p>An array of post fields.</p>","types":["array"],"variable":"$fields"}]},"args":3},{"name":"xmlrpc_prepare_post_type","file":"wp-includes/class-wp-xmlrpc-server.php","type":"filter","doc":{"description":"Filters XML-RPC-prepared date for the given post type.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.4.0"},{"name":"since","content":"4.6.0","description":"<p>Converted the <code>$post_type</code> parameter to accept a WP_Post_Type object.</p>"},{"name":"param","content":"<p>An array of post type data.</p>","types":["array"],"variable":"$_post_type"},{"name":"param","content":"<p>Post type object.</p>","types":["\\WP_Post_Type"],"variable":"$post_type"}]},"args":2},{"name":"xmlrpc_prepare_media_item","file":"wp-includes/class-wp-xmlrpc-server.php","type":"filter","doc":{"description":"Filters XML-RPC-prepared data for the given media item.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.4.0"},{"name":"param","content":"<p>An array of media item data.</p>","types":["array"],"variable":"$_media_item"},{"name":"param","content":"<p>Media item object.</p>","types":["\\WP_Post"],"variable":"$media_item"},{"name":"param","content":"<p>Image size.</p>","types":["string"],"variable":"$thumbnail_size"}]},"args":3},{"name":"xmlrpc_prepare_page","file":"wp-includes/class-wp-xmlrpc-server.php","type":"filter","doc":{"description":"Filters XML-RPC-prepared data for the given page.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.4.0"},{"name":"param","content":"<p>An array of page data.</p>","types":["array"],"variable":"$_page"},{"name":"param","content":"<p>Page object.</p>","types":["\\WP_Post"],"variable":"$page"}]},"args":2},{"name":"xmlrpc_prepare_comment","file":"wp-includes/class-wp-xmlrpc-server.php","type":"filter","doc":{"description":"Filters XML-RPC-prepared data for the given comment.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.4.0"},{"name":"param","content":"<p>An array of prepared comment data.</p>","types":["array"],"variable":"$_comment"},{"name":"param","content":"<p>Comment object.</p>","types":["\\WP_Comment"],"variable":"$comment"}]},"args":2},{"name":"xmlrpc_prepare_user","file":"wp-includes/class-wp-xmlrpc-server.php","type":"filter","doc":{"description":"Filters XML-RPC-prepared data for the given user.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.5.0"},{"name":"param","content":"<p>An array of user data.</p>","types":["array"],"variable":"$_user"},{"name":"param","content":"<p>User object.</p>","types":["\\WP_User"],"variable":"$user"},{"name":"param","content":"<p>An array of user fields.</p>","types":["array"],"variable":"$fields"}]},"args":3},{"name":"xmlrpc_wp_insert_post_data","file":"wp-includes/class-wp-xmlrpc-server.php","type":"filter","doc":{"description":"Filters post data array to be inserted via XML-RPC.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.4.0"},{"name":"param","content":"<p>Parsed array of post data.</p>","types":["array"],"variable":"$post_data"},{"name":"param","content":"<p>Post data array.</p>","types":["array"],"variable":"$content_struct"}]},"args":2},{"name":"xmlrpc_default_post_fields","file":"wp-includes/class-wp-xmlrpc-server.php","type":"filter","doc":{"description":"Filters the default post query fields used by the given XML-RPC method.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.4.0"},{"name":"param","content":"<p>An array of post fields to retrieve. By default, contains 'post', 'terms', and 'custom_fields'.</p>","types":["array"],"variable":"$fields"},{"name":"param","content":"<p>Method name.</p>","types":["string"],"variable":"$method"}]},"args":2},{"name":"xmlrpc_default_post_fields","file":"wp-includes/class-wp-xmlrpc-server.php","type":"filter","doc":{"description":"This action is documented in wp-includes/class-wp-xmlrpc-server.php","long_description":"","long_description_html":"","tags":[]},"args":2},{"name":"xmlrpc_default_taxonomy_fields","file":"wp-includes/class-wp-xmlrpc-server.php","type":"filter","doc":{"description":"Filters the default taxonomy query fields used by the given XML-RPC method.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.4.0"},{"name":"param","content":"<p>An array of taxonomy fields to retrieve. By default, contains 'labels', 'cap', and 'object_type'.</p>","types":["array"],"variable":"$fields"},{"name":"param","content":"<p>The method name.</p>","types":["string"],"variable":"$method"}]},"args":2},{"name":"xmlrpc_default_taxonomy_fields","file":"wp-includes/class-wp-xmlrpc-server.php","type":"filter","doc":{"description":"This action is documented in wp-includes/class-wp-xmlrpc-server.php","long_description":"","long_description_html":"","tags":[]},"args":2},{"name":"xmlrpc_default_user_fields","file":"wp-includes/class-wp-xmlrpc-server.php","type":"filter","doc":{"description":"Filters the default user query fields used by the given XML-RPC method.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.5.0"},{"name":"param","content":"<p>An array of user fields to retrieve. By default, contains 'all'.</p>","types":["array"],"variable":"$fields"},{"name":"param","content":"<p>The method name.</p>","types":["string"],"variable":"$method"}]},"args":2},{"name":"xmlrpc_default_user_fields","file":"wp-includes/class-wp-xmlrpc-server.php","type":"filter","doc":{"description":"This action is documented in wp-includes/class-wp-xmlrpc-server.php","long_description":"","long_description_html":"","tags":[]},"args":2},{"name":"xmlrpc_default_user_fields","file":"wp-includes/class-wp-xmlrpc-server.php","type":"filter","doc":{"description":"This action is documented in wp-includes/class-wp-xmlrpc-server.php","long_description":"","long_description_html":"","tags":[]},"args":2},{"name":"xmlrpc_allow_anonymous_comments","file":"wp-includes/class-wp-xmlrpc-server.php","type":"filter","doc":{"description":"Filters whether to allow anonymous comments over XML-RPC.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.7.0"},{"name":"param","content":"<p>Whether to allow anonymous commenting via XML-RPC. Default false.</p>","types":["bool"],"variable":"$allow"}]},"args":1},{"name":"xmlrpc_default_posttype_fields","file":"wp-includes/class-wp-xmlrpc-server.php","type":"filter","doc":{"description":"Filters the default post type query fields used by the given XML-RPC method.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.4.0"},{"name":"param","content":"<p>An array of post type fields to retrieve. By default, contains 'labels', 'cap', and 'taxonomies'.</p>","types":["array"],"variable":"$fields"},{"name":"param","content":"<p>The method name.</p>","types":["string"],"variable":"$method"}]},"args":2},{"name":"xmlrpc_default_posttype_fields","file":"wp-includes/class-wp-xmlrpc-server.php","type":"filter","doc":{"description":"This action is documented in wp-includes/class-wp-xmlrpc-server.php","long_description":"","long_description_html":"","tags":[]},"args":2},{"name":"xmlrpc_default_revision_fields","file":"wp-includes/class-wp-xmlrpc-server.php","type":"filter","doc":{"description":"Filters the default revision query fields used by the given XML-RPC method.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.5.0"},{"name":"param","content":"<p>An array of revision fields to retrieve. By default, contains 'post_date' and 'post_date_gmt'.</p>","types":["array"],"variable":"$field"},{"name":"param","content":"<p>The method name.</p>","types":["string"],"variable":"$method"}]},"args":2},{"name":"pre_upload_error","file":"wp-includes/class-wp-xmlrpc-server.php","type":"filter","doc":{"description":"Filters whether to preempt the XML-RPC media upload.","long_description":"Returning a truthy value will effectively short-circuit the media upload, returning that value as a 500 error instead.","long_description_html":"<p>Returning a truthy value will effectively short-circuit the media upload, returning that value as a 500 error instead.</p>","tags":[{"name":"since","content":"2.1.0"},{"name":"param","content":"<p>Whether to pre-empt the media upload. Default false.</p>","types":["bool"],"variable":"$error"}]},"args":1},{"name":"xmlrpc_text_filters","file":"wp-includes/class-wp-xmlrpc-server.php","type":"filter","doc":{"description":"Filters the MoveableType text filters list for XML-RPC.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.2.0"},{"name":"param","content":"<p>An array of text filters.</p>","types":["array"],"variable":"$filters"}]},"args":1},{"name":"pingback_ping_source_uri","file":"wp-includes/class-wp-xmlrpc-server.php","type":"filter","doc":{"description":"Filters the pingback source URI.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.6.0"},{"name":"param","content":"<p>URI of the page linked from.</p>","types":["string"],"variable":"$pagelinkedfrom"},{"name":"param","content":"<p>URI of the page linked to.</p>","types":["string"],"variable":"$pagelinkedto"}]},"args":2},{"name":"pre_remote_source","file":"wp-includes/class-wp-xmlrpc-server.php","type":"filter","doc":{"description":"Filters the pingback remote source.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"2.5.0"},{"name":"param","content":"<p>Response source for the page linked from.</p>","types":["string"],"variable":"$remote_source"},{"name":"param","content":"<p>URL of the page linked to.</p>","types":["string"],"variable":"$pagelinkedto"}]},"args":2},{"name":"xmlrpc_pingback_error","file":"wp-includes/class-wp-xmlrpc-server.php","type":"filter","doc":{"description":"Filters the XML-RPC pingback error return.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"3.5.1"},{"name":"param","content":"<p>An IXR_Error object containing the error code and message.</p>","types":["\\IXR_Error"],"variable":"$error"}]},"args":1},{"name":"interactivity_process_directives","file":"wp-includes/class-wp-block.php","type":"filter","doc":{"description":"Filters whether Interactivity API should process directives.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"6.6.0"},{"name":"param","content":"<p>Whether the directives processing is enabled.</p>","types":["bool"],"variable":"$enabled"}]},"args":1},{"name":"render_block","file":"wp-includes/class-wp-block.php","type":"filter","doc":{"description":"Filters the content of a single block.","long_description":"","long_description_html":"","tags":[{"name":"since","content":"5.0.0"},{"name":"since","content":"5.9.0","description":"<p>The <code>$instance</code> parameter was added.</p>"},{"name":"param","content":"<p>The block content.</p>","types":["string"],"variable":"$block_content"},{"name":"param","content":"<p>The full block, including name and attributes.</p>","types":["array"],"variable":"$block"},{"name":"param","content":"<p>The block instance.</p>","types":["\\WP_Block"],"variable":"$instance"}]},"args":3},{"name":"render_block_{$this->name}","file":"wp-includes/class-wp-block.php","type":"filter","doc":{"description":"Filters the content of a single block.","long_description":"The dynamic portion of the hook name, `$name`, refers to the block name, e.g. \"core/paragraph\".","long_description_html":"<p>The dynamic portion of the hook name, <code>$name</code>, refers to the block name, e.g. &quot;core/paragraph&quot;.</p>","tags":[{"name":"since","content":"5.7.0"},{"name":"since","content":"5.9.0","description":"<p>The <code>$instance</code> parameter was added.</p>"},{"name":"param","content":"<p>The block content.</p>","types":["string"],"variable":"$block_content"},{"name":"param","content":"<p>The full block, including name and attributes.</p>","types":["array"],"variable":"$block"},{"name":"param","content":"<p>The block instance.</p>","types":["\\WP_Block"],"variable":"$instance"}]},"args":3}]}